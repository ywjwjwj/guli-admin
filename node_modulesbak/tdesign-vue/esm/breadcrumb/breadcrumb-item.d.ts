import Vue from 'vue';
import { TNodeReturnValue } from '../common';
export interface LocalTBreadcrumb {
    separator: Function | string;
    theme: string;
    $slots: {
        separator: TNodeReturnValue;
    };
    maxItemWidth: string;
}
declare const _default: import("vue/types/vue").ExtendedVue<Vue, {
    localTBreadcrumb: LocalTBreadcrumb;
    themeClassName: string;
    $router: any;
    isCutOff: boolean;
}, {
    bindEvent(): void;
}, {
    maxWithStyle: {
        'max-width': string;
    };
}, {
    content: string | number | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | number | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    disabled: boolean;
    href: string;
    maxWidth: any;
    replace: boolean;
    router: any;
    target: "_self" | "_blank" | "_parent" | "_top";
    to: import("./type").Route;
}>;
export default _default;
