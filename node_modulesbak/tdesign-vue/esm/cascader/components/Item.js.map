{"version":3,"file":"Item.js","sources":["../../../src/cascader/components/Item.tsx"],"sourcesContent":["import { PropType } from 'vue';\nimport { ChevronRightIcon } from 'tdesign-icons-vue';\nimport { prefix } from '../../config';\n\n// utils\nimport CLASSNAMES from '../../utils/classnames';\nimport ripple from '../../utils/ripple';\nimport mixins from '../../utils/mixins';\n\n// common logic\nimport { getFullPathLabel } from '../utils/helper';\nimport { getCascaderItemClass, getCascaderItemIconClass, getLabelIsEllipsis } from '../utils/item';\nimport { getKeepAnimationMixins } from '../../config-provider/config-receiver';\n\n// component\nimport Loading from '../../loading';\nimport Checkbox, { CheckboxProps } from '../../checkbox/index';\nimport Tooltip from '../../tooltip/index';\n\n// type\nimport { ClassName } from '../../common';\nimport {\n  ContextType, CascaderContextType, CascaderItemPropsType, TreeNodeValue, TreeNode,\n} from '../interface';\n\nconst name = `${prefix}-cascader-item`;\nconst ComponentClassName = `${prefix}-cascader__item`;\n\nconst keepAnimationMixins = getKeepAnimationMixins();\n\nexport default mixins(keepAnimationMixins).extend({\n  name,\n\n  directives: { ripple },\n  components: {\n    Tooltip,\n  },\n  props: {\n    node: {\n      type: Object as PropType<CascaderItemPropsType['node']>,\n      default() {\n        return {} as TreeNode;\n      },\n    },\n    cascaderContext: {\n      type: Object as PropType<CascaderItemPropsType['cascaderContext']>,\n    },\n  },\n\n  computed: {\n    itemClass(): ClassName {\n      return getCascaderItemClass(prefix, this.node, CLASSNAMES, this.cascaderContext);\n    },\n    iconClass(): ClassName {\n      return getCascaderItemIconClass(prefix, this.node, CLASSNAMES, this.cascaderContext);\n    },\n  },\n  render() {\n    const {\n      node, itemClass, iconClass, cascaderContext,\n    } = this;\n\n    const handleClick = (e: Event) => {\n      e.stopPropagation();\n      const ctx: ContextType = {\n        e,\n        node,\n      };\n      this.$emit('click', ctx);\n    };\n\n    const handleChange: CheckboxProps['onChange'] = (e) => {\n      const ctx = {\n        e,\n        node,\n      };\n      this.$emit('change', ctx);\n    };\n\n    const handleMouseenter = (e: Event) => {\n      e.stopPropagation();\n      const ctx: ContextType = {\n        e,\n        node,\n      };\n      this.$emit('mouseenter', ctx);\n    };\n\n    function RenderLabelInner(node: TreeNode, cascaderContext: CascaderContextType) {\n      const { filterActive, inputVal } = cascaderContext;\n      const labelText = filterActive ? getFullPathLabel(node) : node.label;\n      if (filterActive) {\n        const texts = labelText.split(inputVal);\n        const doms = [];\n        for (let index = 0; index < texts.length; index++) {\n          doms.push(<span key={index}>{texts[index]}</span>);\n          if (index === texts.length - 1) break;\n          doms.push(\n            <span key={`${index}filter`} className={`${name}-label--filter`}>\n              {inputVal}\n            </span>,\n          );\n        }\n        return doms;\n      }\n      return labelText;\n    }\n\n    function RenderLabelContent(node: TreeNode, cascaderContext: CascaderContextType) {\n      const label = RenderLabelInner(node, cascaderContext);\n      const isEllipsis = getLabelIsEllipsis(node, cascaderContext.size);\n      const labelNode = (\n        <span class={[`${ComponentClassName}-label`]} role=\"label\">\n          {label}\n        </span>\n      );\n      if (isEllipsis) {\n        return (\n          <Tooltip content={node.label} placement=\"top-left\">\n            {labelNode}\n          </Tooltip>\n        );\n      }\n      return labelNode;\n    }\n\n    function RenderCheckBox(\n      node: TreeNode,\n      cascaderContext: CascaderContextType,\n      handleChange: CheckboxProps['onChange'],\n    ) {\n      const {\n        checkProps, value, max, size,\n      } = cascaderContext;\n      const label = RenderLabelInner(node, cascaderContext);\n      return (\n        <Checkbox\n          checked={node.checked}\n          indeterminate={node.indeterminate}\n          disabled={node.isDisabled() || ((value as TreeNodeValue[]).length >= max && max !== 0)}\n          name={node.value}\n          size={size}\n          onChange={handleChange}\n          {...checkProps}\n        >\n          {label}\n        </Checkbox>\n      );\n    }\n\n    return (\n      <li v-ripple={this.keepAnimation.ripple} class={itemClass} onClick={handleClick} onMouseenter={handleMouseenter}>\n        {cascaderContext.multiple\n          ? RenderCheckBox(node, cascaderContext, handleChange)\n          : RenderLabelContent(node, cascaderContext)}\n        {node.children\n          && (node.loading ? <Loading class={iconClass} size=\"small\" /> : <ChevronRightIcon class={iconClass} />)}\n      </li>\n    );\n  },\n});\n"],"names":["name","prefix","ComponentClassName","keepAnimationMixins","getKeepAnimationMixins","mixins","extend","directives","ripple","components","Tooltip","props","node","type","Object","cascaderContext","computed","itemClass","getCascaderItemClass","CLASSNAMES","iconClass","getCascaderItemIconClass","render","handleClick","e","stopPropagation","ctx","$emit","handleChange","handleMouseenter","RenderLabelInner","node2","cascaderContext2","filterActive","inputVal","labelText","getFullPathLabel","label","texts","split","doms","index","length","push","RenderLabelContent","isEllipsis","getLabelIsEllipsis","size","labelNode","RenderCheckBox","handleChange2","checkProps","value","max","_mergeJSXProps","checked","indeterminate","isDisabled","keepAnimation","multiple","children","loading"],"mappings":"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"}