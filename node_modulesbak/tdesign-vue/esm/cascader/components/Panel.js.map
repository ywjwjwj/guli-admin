{"version":3,"file":"Panel.js","sources":["../../../src/cascader/components/Panel.tsx"],"sourcesContent":["import Vue, { PropType } from 'vue';\nimport { prefix } from '../../config';\n\n// utils\nimport { renderTNodeJSXDefault } from '../../utils/render-tnode';\nimport getLocalRecevierMixins, { CascaderConfig } from '../../config-provider/config-receiver';\nimport mixins from '../../utils/mixins';\n\n// common logic\nimport { getPanels, expendClickEffect, valueChangeEffect } from '../utils/panel';\n\n// Component\nimport Item from './Item';\n\n// type\nimport {\n  ContextType, TreeNode, CascaderContextType, CascaderPanelProps,\n} from '../interface';\nimport CascaderProps from '../props';\n\nconst name = `${prefix}-cascader`;\n\nexport default mixins(getLocalRecevierMixins<CascaderPanelProps & Vue, CascaderConfig>('cascader')).extend({\n  name: `${name}-panel`,\n  props: {\n    empty: CascaderProps.empty,\n    trigger: CascaderProps.trigger,\n    onChange: CascaderProps.onChange,\n    cascaderContext: {\n      type: Object as PropType<CascaderContextType>,\n    },\n  },\n\n  computed: {\n    panels(): TreeNode[][] {\n      return getPanels(this.cascaderContext.treeNodes);\n    },\n  },\n\n  render() {\n    const {\n      cascaderContext: { filterActive, treeNodes, inputWidth },\n      cascaderContext,\n      panels,\n    } = this;\n\n    const handleExpand = (ctx: ContextType, trigger: 'hover' | 'click') => {\n      const { node } = ctx;\n      const { trigger: propsTrigger, cascaderContext } = this;\n\n      expendClickEffect(propsTrigger, trigger, node, cascaderContext);\n    };\n\n    const handleChange = (ctx: ContextType) => {\n      const { node } = ctx;\n      const { cascaderContext } = this;\n\n      valueChangeEffect(node, cascaderContext);\n    };\n\n    // innerComponents\n    const renderEmpty = renderTNodeJSXDefault(\n      this,\n      'empty',\n      <div class={`${name}__panel--empty`}>{this.t(this.global.empty)}</div>,\n    );\n\n    const renderItem = (node: TreeNode) => (\n      <Item\n        key={node.value}\n        node={node}\n        cascaderContext={cascaderContext}\n        onClick={(ctx: ContextType) => {\n          handleExpand(ctx, 'click');\n        }}\n        onMouseenter={(ctx: ContextType) => {\n          handleExpand(ctx, 'hover');\n        }}\n        onChange={handleChange}\n      />\n    );\n\n    const panelsContainer = panels.map((panel: TreeNode[], index: number) => (\n      <ul\n        class={[`${name}__menu`, 'narrow-scrollbar', { [`${name}__menu--segment`]: index !== panels.length - 1 }]}\n        key={index}\n      >\n        {panel.map((node: TreeNode) => renderItem(node))}\n      </ul>\n    ));\n\n    const filterPanelsContainer = (\n      <ul class={[`${name}__menu`, 'narrow-scrollbar', `${name}__menu--segment`, `${name}__menu--filter`]}>\n        {treeNodes.map((node: TreeNode) => renderItem(node))}\n      </ul>\n    );\n\n    const renderPanels = filterActive ? filterPanelsContainer : panelsContainer;\n\n    return (\n      <div\n        class={[`${name}__panel`, { [`${name}--normal`]: panels.length }]}\n        style={{\n          width: panels.length === 0 ? `${inputWidth}px` : null,\n        }}\n      >\n        {panels && panels.length ? renderPanels : renderEmpty}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","mixins","getLocalRecevierMixins","extend","props","empty","CascaderProps","trigger","onChange","cascaderContext","type","Object","computed","panels","getPanels","treeNodes","render","filterActive","inputWidth","handleExpand","ctx","node","propsTrigger","cascaderContext2","expendClickEffect","handleChange","valueChangeEffect","renderEmpty","renderTNodeJSXDefault","t","global","renderItem","value","panelsContainer","map","panel","index","length","filterPanelsContainer","renderPanels","width"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,IAAI,GAAMC,EAAAA,CAAAA,MAAAA,CAAAA,MAAN,EAAV,WAAA,CAAA,CAAA;AACA,YAAeC,MAAM,CAACC,uBAAsB,CAAC,UAAD,CAAvB,CAAN,CAA2CC,MAA3C,CAAkD;AAC/DJ,EAAAA,IAAI,EAAKA,EAAAA,CAAAA,MAAAA,CAAAA,IAAL,EAD2D,QAAA,CAAA;AAE/DK,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,KAAa,CAACD,KADhB;AAELE,IAAAA,OAAO,EAAED,KAAa,CAACC,OAFlB;AAGLC,IAAAA,QAAQ,EAAEF,KAAa,CAACE,QAHnB;AAILC,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAEC,MAAAA;AADS,KAAA;AAJZ,GAFwD;AAU/DC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,EACC,SAAA,MAAA,GAAA;AACP,MAAA,OAAOC,SAAS,CAAC,IAAA,CAAKL,eAAL,CAAqBM,SAAtB,CAAhB,CAAA;AACD,KAAA;AAHO,GAVqD;AAe/DC,EAAAA,MAf+D,EAetD,SAAA,MAAA,GAAA;AAAA,IAAA,IAAA,KAAA,GAAA,IAAA,CAAA;;AAAA,IAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AACP,IAII,IAAA,qBAAA,GAAA,IAJJ,CACEP,eADF;AAAA,QACqBQ,YADrB,yBACqBA,YADrB;AAAA,QACmCF,SADnC,yBACmCA,SADnC;AAAA,QAC8CG,UAD9C,yBAC8CA,UAD9C;AAAA,QAEET,eAFF,GAII,IAJJ,CAEEA,eAFF;AAAA,QAGEI,MAHF,GAII,IAJJ,CAGEA,MAHF,CAAA;;AAKA,IAAMM,IAAAA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMb,OAAN,EAAkB;AACrC,MAAA,IAAQc,IAAR,GAAiBD,GAAjB,CAAQC,IAAR,CAAA;AACA,MAAA,IAAiBC,YAAjB,GAAqE,KAArE,CAAQf,OAAR;AAAA,UAAgDgB,gBAAhD,GAAqE,KAArE,CAA+Bd,eAA/B,CAAA;AACAe,MAAAA,iBAAiB,CAACF,YAAD,EAAef,OAAf,EAAwBc,IAAxB,EAA8BE,gBAA9B,CAAjB,CAAA;AACD,KAJD,CAAA;;AAKA,IAAA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACL,GAAD,EAAS;AAC5B,MAAA,IAAQC,IAAR,GAAiBD,GAAjB,CAAQC,IAAR,CAAA;AACA,MAAA,IAAyBE,gBAAzB,GAA8C,KAA9C,CAAQd,eAAR,CAAA;AACAiB,MAAAA,iBAAiB,CAACL,IAAD,EAAOE,gBAAP,CAAjB,CAAA;AACD,KAJD,CAAA;;AAKA,IAAA,IAAMI,WAAW,GAAGC,qBAAqB,CAAC,IAAD,EAAO,OAAP,EAAA,CAAA,CAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAA+B7B,IAA/B,EAAA,gBAAA,CAAA;AAAA,KAAsD,EAAA,CAAA,IAAA,CAAK8B,CAAL,CAAO,IAAA,CAAKC,MAAL,CAAYzB,KAAnB,CAAtD,CAAzC,CAAA,CAAA,CAAA;;AACA,IAAA,IAAM0B,UAAU,GAAG,SAAbA,UAAa,CAACV,IAAD,EAAA;AAAA,MAAA,OAAA,CAAA,CAAA,IAAA,EAAA;AAAA,QAAqBA,KAAAA,EAAAA,IAAI,CAACW,KAA1B;AAAA,QAAA,OAAA,EAAA;AAAA,UAAA,MAAA,EAAuCX,IAAvC;AAAA,UAA8DZ,iBAAAA,EAAAA,eAAAA;AAA9D,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAwF,OAAA,EAAA,SAAA,KAAA,CAACW,GAAD,EAAS;AAClHD,YAAAA,YAAY,CAACC,GAAD,EAAM,OAAN,CAAZ,CAAA;AACD,WAFkB;AAAA,UAEF,YAAA,EAAA,SAAA,UAAA,CAACA,GAAD,EAAS;AACxBD,YAAAA,YAAY,CAACC,GAAD,EAAM,OAAN,CAAZ,CAAA;AACD,WAJkB;AAAA,UAINK,QAAAA,EAAAA,YAAAA;AAJM,SAAA;AAAA,OAAA,CAAA,CAAA;AAAA,KAAnB,CAAA;;AAKA,IAAMQ,IAAAA,eAAe,GAAGpB,MAAM,CAACqB,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAA;AAAA,MAAA,OAAA,CAAA,CAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAA6B,CAAIrC,EAAAA,CAAAA,MAAAA,CAAAA,IAAJ,EAAkB,QAAA,CAAA,EAAA,kBAAlB,gCAA4CA,IAA5C,EAAA,iBAAA,CAAA,EAAoEqC,KAAK,KAAKvB,MAAM,CAACwB,MAAP,GAAgB,CAA9F,CAA7B,CAAA;AAAA,QAAsID,KAAAA,EAAAA,KAAAA;AAAtI,OAAA,EAAA,CAA8ID,KAAK,CAACD,GAAN,CAAU,UAACb,IAAD,EAAA;AAAA,QAAUU,OAAAA,UAAU,CAACV,IAAD,CAApB,CAAA;AAAA,OAAV,CAA9I,CAAA,CAAA,CAAA;AAAA,KAAX,CAAxB,CAAA;AACA,IAAA,IAAMiB,qBAAqB,GAAA,CAAA,CAAA,IAAA,EAAA;AAAA,MAAA,OAAA,EAAc,WAAIvC,IAAJ,EAAA,QAAA,CAAA,EAAkB,kBAAlB,EAAyCA,EAAAA,CAAAA,MAAAA,CAAAA,IAAzC,gCAAmEA,IAAnE,EAAA,gBAAA,CAAA,CAAA;AAAd,KAAA,EAAA,CAAyGgB,SAAS,CAACmB,GAAV,CAAc,UAACb,IAAD,EAAA;AAAA,MAAUU,OAAAA,UAAU,CAACV,IAAD,CAApB,CAAA;AAAA,KAAd,CAAzG,CAA3B,CAAA,CAAA;AACA,IAAA,IAAMkB,YAAY,GAAGtB,YAAY,GAAGqB,qBAAH,GAA2BL,eAA5D,CAAA;AACA,IAAA,OAAA,CAAA,CAAA,KAAA,EAAA;AAAA,MAAmB,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAIlC,IAAJ,EAAyBA,SAAAA,CAAAA,EAAAA,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAzB,eAA0Cc,MAAM,CAACwB,MAAjD,CAAnB,CAAA;AAAA,MAAsF,OAAA,EAAA;AACpFG,QAAAA,KAAK,EAAE3B,MAAM,CAACwB,MAAP,KAAkB,CAAlB,GAAyBnB,EAAAA,CAAAA,MAAAA,CAAAA,UAAzB,EAA0C,IAAA,CAAA,GAAA,IAAA;AADmC,OAAA;AAAtF,KAEIL,EAAAA,CAAAA,MAAM,IAAIA,MAAM,CAACwB,MAAjB,GAA0BE,YAA1B,GAAyCZ,WAF7C,CAAA,CAAA,CAAA;AAGD,GAAA;AA3C8D,CAAlD,CAAf;;;;"}