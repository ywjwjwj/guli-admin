import { TdMenuInterface } from './const';
declare const _default: import("vue").ComponentOptions<import("vue").default, import("@vue/composition-api").ShallowUnwrapRef<{
    menu: TdMenuInterface;
    active: import("@vue/composition-api").ComputedRef<boolean>;
    classes: import("@vue/composition-api").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    handleClick: () => void;
}> & import("@vue/composition-api").Data, {}, {}, {
    content: {
        type: import("vue").PropType<string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    href: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: import("vue").PropType<(h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue>;
    };
    replace: BooleanConstructor;
    router: {
        type: import("vue").PropType<Record<string, any>>;
    };
    target: {
        type: import("vue").PropType<"_self" | "_blank" | "_parent" | "_top">;
        validator(val: "_self" | "_blank" | "_parent" | "_top"): boolean;
    };
    to: {
        type: import("vue").PropType<import("./type").MenuRoute>;
    };
    value: {
        type: import("vue").PropType<import("./type").MenuValue>;
    };
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}, {
    replace: boolean;
    disabled: boolean;
    href: string;
} & {
    default?: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    content?: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    value?: import("./type").MenuValue;
    target?: "_self" | "_blank" | "_parent" | "_top";
    to?: unknown;
    icon?: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    onClick?: (context: {
        e: MouseEvent;
    }) => void;
    router?: unknown;
}> & Omit<import("vue").VueConstructor<import("vue").default>, never> & (new (...args: any[]) => import("@vue/composition-api").ComponentRenderProxy<{
    replace: boolean;
    disabled: boolean;
    href: string;
} & {
    default?: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    content?: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    value?: import("./type").MenuValue;
    target?: "_self" | "_blank" | "_parent" | "_top";
    to?: unknown;
    icon?: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    onClick?: (context: {
        e: MouseEvent;
    }) => void;
    router?: unknown;
}, import("@vue/composition-api").ShallowUnwrapRef<{
    menu: TdMenuInterface;
    active: import("@vue/composition-api").ComputedRef<boolean>;
    classes: import("@vue/composition-api").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    handleClick: () => void;
}>, import("@vue/composition-api").Data, {}, {}, {}, {}, {}, {
    replace: boolean;
    disabled: boolean;
    href: string;
} & {
    default?: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    content?: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    value?: import("./type").MenuValue;
    target?: "_self" | "_blank" | "_parent" | "_top";
    to?: unknown;
    icon?: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    onClick?: (context: {
        e: MouseEvent;
    }) => void;
    router?: unknown;
}, {
    replace: boolean;
    disabled: boolean;
    href: string;
}, true>);
export default _default;
