{"version":3,"file":"row-draggable.js","sources":["../../../../src/table/primary-table/mixins/row-draggable.tsx"],"sourcesContent":["import Vue from 'vue';\nimport { DataType, TdPrimaryTableProps } from '../../type';\nimport { prefix } from '../../../config';\nimport { emitEvent } from '../../../utils/event';\n\nexport interface RowDragEventArgs {\n  index: number,\n  row: any,\n  targetElm: HTMLElement\n}\n\nexport default Vue.extend({\n  name: `${prefix}-primary-table-row-draggable`,\n  data() {\n    return {\n      draggingRowCurrentIndex: -1,\n      currentRowData: null,\n    };\n  },\n  computed: {\n    dragging(): boolean {\n      return this.draggingRowCurrentIndex !== -1;\n    },\n  },\n  methods: {\n    onDragStart({ index, row }: RowDragEventArgs) {\n      this.draggingRowCurrentIndex = index;\n      this.currentRowData = row;\n      this.addDragEndListener();\n    },\n    onDragOver({ index: overIndex, row, targetElm }: RowDragEventArgs) {\n      // target行在过渡时（即有v-move）触发了dragover事件，无需处理交换;\n      if ([...targetElm.classList].includes('v-move')) return;\n\n      const { draggingRowCurrentIndex } = this;\n      if (draggingRowCurrentIndex === -1 || draggingRowCurrentIndex === overIndex) return;\n\n      this.emitChange(this.currentRowData, row, draggingRowCurrentIndex, overIndex);\n      this.draggingRowCurrentIndex = overIndex;\n    },\n    addDragEndListener() {\n      const onDragEnd = () => {\n        this.draggingRowCurrentIndex = -1;\n        document.removeEventListener('dragend', onDragEnd);\n      };\n      document.addEventListener('dragend', onDragEnd);\n    },\n    emitChange(current: DataType, target: DataType, currentIndex: number, targetIndex: number) {\n      emitEvent<Parameters<TdPrimaryTableProps['onDragSort']>>(this, 'drag-sort', {\n        current, target, currentIndex, targetIndex,\n      });\n    },\n  },\n});\n"],"names":["Vue","extend","name","prefix","data","draggingRowCurrentIndex","currentRowData","computed","dragging","methods","onDragStart","index","row","addDragEndListener","onDragOver","overIndex","targetElm","classList","includes","emitChange","onDragEnd","document","removeEventListener","addEventListener","current","target","currentIndex","targetIndex","emitEvent"],"mappings":";;;;;;;;;;;;;;;;AAGA,mBAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAKC,EAAAA,CAAAA,MAAAA,CAAAA,MAAL,EADoB,8BAAA,CAAA;AAExBC,EAAAA,IAFwB,EAEjB,SAAA,IAAA,GAAA;AACL,IAAO,OAAA;AACLC,MAAAA,uBAAuB,EAAE,CAAC,CADrB;AAELC,MAAAA,cAAc,EAAE,IAAA;AAFX,KAAP,CAAA;AAID,GAPuB;AAQxBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QADQ,EACG,SAAA,QAAA,GAAA;AACT,MAAA,OAAO,IAAKH,CAAAA,uBAAL,KAAiC,CAAC,CAAzC,CAAA;AACD,KAAA;AAHO,GARc;AAaxBI,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,EACqB,SAAA,WAAA,CAAA,IAAA,EAAA;AAAA,MAAdC,IAAAA,KAAc,QAAdA,KAAc;AAAA,UAAPC,GAAO,QAAPA,GAAO,CAAA;AAC1B,MAAKP,IAAAA,CAAAA,uBAAL,GAA+BM,KAA/B,CAAA;AACA,MAAKL,IAAAA,CAAAA,cAAL,GAAsBM,GAAtB,CAAA;AACA,MAAA,IAAA,CAAKC,kBAAL,EAAA,CAAA;AACD,KALM;AAMPC,IAAAA,UANO,EAM0C,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,MAA7BC,IAAAA,SAA6B,SAApCJ,KAAoC;AAAA,UAAlBC,GAAkB,SAAlBA,GAAkB;AAAA,UAAbI,SAAa,SAAbA,SAAa,CAAA;AAC/C,MAAI,IAAA,kBAAA,CAAIA,SAAS,CAACC,SAAd,EAAyBC,QAAzB,CAAkC,QAAlC,CAAJ,EACE,OAAA;AACF,MAAA,IAAQb,uBAAR,GAAoC,IAApC,CAAQA,uBAAR,CAAA;AACA,MAAIA,IAAAA,uBAAuB,KAAK,CAAC,CAA7B,IAAkCA,uBAAuB,KAAKU,SAAlE,EACE,OAAA;AACF,MAAKI,IAAAA,CAAAA,UAAL,CAAgB,IAAKb,CAAAA,cAArB,EAAqCM,GAArC,EAA0CP,uBAA1C,EAAmEU,SAAnE,CAAA,CAAA;AACA,MAAKV,IAAAA,CAAAA,uBAAL,GAA+BU,SAA/B,CAAA;AACD,KAdM;AAePF,IAAAA,kBAfO,EAec,SAAA,kBAAA,GAAA;AAAA,MAAA,IAAA,KAAA,GAAA,IAAA,CAAA;;AACnB,MAAA,IAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAA,KAAI,CAACf,uBAAL,GAA+B,CAAC,CAAhC,CAAA;AACAgB,QAAAA,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,EAAwCF,SAAxC,CAAA,CAAA;AACD,OAHD,CAAA;;AAIAC,MAAAA,QAAQ,CAACE,gBAAT,CAA0B,SAA1B,EAAqCH,SAArC,CAAA,CAAA;AACD,KArBM;AAsBPD,IAAAA,UAtBO,sBAsBIK,OAtBJ,EAsBaC,MAtBb,EAsBqBC,YAtBrB,EAsBmCC,WAtBnC,EAsBgD;AACrDC,MAAAA,SAAS,CAAC,IAAD,EAAO,WAAP,EAAoB;AAC3BJ,QAAAA,OAAO,EAAPA,OAD2B;AAE3BC,QAAAA,MAAM,EAANA,MAF2B;AAG3BC,QAAAA,YAAY,EAAZA,YAH2B;AAI3BC,QAAAA,WAAW,EAAXA,WAAAA;AAJ2B,OAApB,CAAT,CAAA;AAMD,KAAA;AA7BM,GAAA;AAbe,CAAX,CAAf;;;;"}