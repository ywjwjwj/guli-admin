{"version":3,"file":"tree-select.js","sources":["../../../src/table/enhanced-table/tree-select.tsx"],"sourcesContent":["import Vue from 'vue';\nimport get from 'lodash/get';\nimport baseTableProps from '../base-table-props';\nimport enhancedTableProps from '../enhanced-table-props';\nimport { TdPrimaryTableProps, TableRowData } from '../type';\nimport { emitEvent } from '../../utils/event';\nimport { PrimaryTableCol } from '..';\nimport primaryTableProps from '../primary-table-props';\nimport TableTreeStore, { KeysType } from './tree-store';\n\nexport const childreMap = new Map();\n\nexport interface GetChildrenDataReturnValue {\n  allChildren: Array<any>;\n  allChildrenKeys: Array<string | number>;\n}\nexport function getChildrenData(\n  treeDataMap: InstanceType<typeof TableTreeStore>['treeDataMap'],\n  data: TableRowData,\n  childrenKey: string,\n  rowKey: string,\n  r?: GetChildrenDataReturnValue,\n): GetChildrenDataReturnValue {\n  if (childreMap.get(data)) return childreMap.get(data);\n  const result = r || { allChildren: [], allChildrenKeys: [] };\n  const children = get(data, childrenKey);\n  if (!children || !children.length) return result;\n  const selectableChildren = children.filter((item: TableRowData) => (\n    !treeDataMap.get(get(item, rowKey))?.disabled\n  ));\n  result.allChildren = result.allChildren.concat(selectableChildren);\n  const childrenKeys = selectableChildren.map((item: TableRowData) => get(item, rowKey));\n  result.allChildrenKeys = result.allChildrenKeys.concat(childrenKeys);\n  for (let i = 0, len = children.length; i < len; i++) {\n    const tItem = children[i];\n    const c = get(tItem, childrenKey);\n    if (c?.length) {\n      const nextLevelData = getChildrenData(treeDataMap, tItem, childrenKey, rowKey, result);\n      result.allChildren = result.allChildren.concat(nextLevelData.allChildren);\n      result.allChildrenKeys = result.allChildrenKeys.concat(nextLevelData.allChildrenKeys);\n    }\n  }\n  return result;\n}\n\nexport interface RemoveParams {\n  // 当前选中的数据\n  selectedRowKeys: Array<string | number>;\n  // 需要移除的数据\n  removeKeys: Array<string | number>;\n}\n\nexport interface RemainData {\n  data: Array<any>;\n  keys: Array<string | number>;\n}\n\nexport function removeChildrenKeys(p: RemoveParams, r?: RemainData): RemainData {\n  const { selectedRowKeys, removeKeys } = p;\n  const result = r || { data: [], keys: [] };\n  for (let i = 0, len = selectedRowKeys.length; i < len; i++) {\n    const key = selectedRowKeys[i];\n    if (!removeKeys.includes(key)) {\n      result.keys.push(key);\n    }\n  }\n  return result;\n}\n\nexport interface GetKeyDataParams {\n  treeDataMap: InstanceType<typeof TableTreeStore>['treeDataMap'];\n  data: Array<any>;\n  column: PrimaryTableCol;\n  keys: KeysType;\n}\n\nexport interface GetRowDataParams {\n  treeDataMap: InstanceType<typeof TableTreeStore>['treeDataMap'];\n  selectedRowKeys: Array<string | number>;\n}\n\nexport function getRowDataByKeys(p: GetRowDataParams) {\n  const { treeDataMap, selectedRowKeys } = p;\n  const result = [];\n  for (let i = 0, len = selectedRowKeys.length; i < len; i++) {\n    const key = selectedRowKeys[i];\n    result.push(treeDataMap.get(key));\n  }\n  return result;\n}\n\ntype SelectChangeParams = Parameters<TdPrimaryTableProps['onSelectChange']>;\n\nexport default Vue.extend({\n  props: {\n    data: baseTableProps.data,\n    rowKey: baseTableProps.rowKey,\n    columns: primaryTableProps.columns,\n    tree: enhancedTableProps.tree,\n  },\n\n  data() {\n    return {\n      dataSource: this.data,\n      store: new TableTreeStore() as InstanceType<typeof TableTreeStore>,\n    };\n  },\n\n  computed: {\n    childrenKey(): string {\n      return this.tree?.childrenKey || 'children';\n    },\n    rowDataKeys(): KeysType {\n      return {\n        rowKey: this.rowKey,\n        childrenKey: this.childrenKey,\n      };\n    },\n  },\n\n  methods: {\n    onInnerSelectChange(rowKeys: SelectChangeParams[0], extraData: SelectChangeParams[1]) {\n      if (extraData.currentRowKey === 'CHECK_ALL_BOX') {\n        this.handleSelectAll(extraData);\n      } else {\n        this.handleSelect(rowKeys, extraData);\n      }\n    },\n\n    handleSelectAll(extraData: SelectChangeParams[1]) {\n      const newRowKeys: Array<string | number> = [];\n      const newRowData: TableRowData[] = [];\n      if (extraData.type === 'check') {\n        const arr = [...this.store.treeDataMap.values()];\n        for (let i = 0, len = arr.length; i < len; i++) {\n          const item = arr[i];\n          if (!item.disabled) {\n            newRowData.push(item.row);\n            newRowKeys.push(get(item.row, this.rowKey));\n          }\n        }\n      }\n      const newExtraData = {\n        ...extraData,\n        selectedRowData: newRowData || [],\n      };\n      emitEvent<SelectChangeParams>(this, 'select-change', newRowKeys, newExtraData);\n      this.$emit('update:selectedRowKeys', newRowKeys, newExtraData);\n    },\n\n    handleSelect(rowKeys: SelectChangeParams[0], extraData: SelectChangeParams[1]) {\n      let newRowKeys = [...rowKeys];\n      if (this?.tree.checkStrictly === false) {\n        if (extraData?.type === 'check') {\n          const result = getChildrenData(this.store.treeDataMap, extraData.currentRowData, this.childrenKey, this.rowKey);\n          const { allChildrenKeys } = result;\n          childreMap.set(extraData.currentRowData, result);\n          newRowKeys = [...new Set(newRowKeys.concat(allChildrenKeys))];\n        } else if (extraData?.type === 'uncheck') {\n          const children = getChildrenData(this.store.treeDataMap, extraData.currentRowData, this.childrenKey, this.rowKey);\n          const result = removeChildrenKeys({\n            selectedRowKeys: rowKeys,\n            removeKeys: children.allChildrenKeys,\n          });\n          newRowKeys = result.keys;\n        }\n      }\n      const newRowData = getRowDataByKeys({ treeDataMap: this.store.treeDataMap, selectedRowKeys: newRowKeys });\n      const newExtraData = {\n        ...extraData,\n        selectedRowData: newRowData,\n      };\n      emitEvent<SelectChangeParams>(this, 'select-change', newRowKeys, newExtraData);\n      this.$emit('update:selectedRowKeys', newRowKeys, newExtraData);\n    },\n  },\n});\n"],"names":["childreMap","Map","getChildrenData","treeDataMap","data","childrenKey","rowKey","r","get","result","allChildren","allChildrenKeys","children","length","selectableChildren","filter","item","disabled","concat","childrenKeys","map","i","len","tItem","c","nextLevelData","removeChildrenKeys","p","selectedRowKeys","removeKeys","keys","key","includes","push","getRowDataByKeys","Vue","extend","props","baseTableProps","columns","primaryTableProps","tree","enhancedTableProps","dataSource","store","TableTreeStore","computed","rowDataKeys","methods","onInnerSelectChange","rowKeys","extraData","currentRowKey","handleSelectAll","handleSelect","newRowKeys","newRowData","type","arr","values","row","newExtraData","selectedRowData","emitEvent","$emit","checkStrictly","currentRowData","set","Set"],"mappings":"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"}