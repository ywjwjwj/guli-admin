{"version":3,"file":"table-cell.js","sources":["../../../src/table/base-table/table-cell.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport { prefix } from '../../config';\nimport Popup from '../../popup';\nimport { isNodeOverflow } from '../../utils/dom';\nimport { TdInstance } from '../util/interface';\nimport { getRecord } from '../util/common';\nimport { emitEvent } from '../../utils/event';\nimport { TdBaseTableProps } from '../type';\n\nexport const ELLIPSIS_CLASS_NAME = `${prefix}-text-ellipsis`;\n\nconst overlayStyle = {\n  width: '100%',\n  maxWidth: '400px',\n  wordBreak: 'break-all',\n};\n\nexport default Vue.extend({\n  name: `${prefix}-table-cell`,\n  props: {\n    cellData: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      offsetLeft: 0,\n      isBoundary: false,\n      isCutOff: false,\n    };\n  },\n  methods: {\n    init() {\n      const { fixed } = this.cellData?.col;\n      const { $children: children } = this.$parent;\n      // 计算当前固定列偏移的宽度\n      if (fixed) {\n        let offsetLeft = 0;\n        const fixedColumns = children.filter((el: TdInstance) => el?.cellData?.col?.fixed === fixed);\n        const indexInFixedColumns = fixedColumns.findIndex((el: Vue) => el === this);\n        fixedColumns.forEach((el: any, cur) => {\n          if ((fixed === 'right' && cur > indexInFixedColumns) || (fixed === 'left' && cur < indexInFixedColumns)) {\n            const width = parseInt(el.cellData?.col.with, 10);\n            const { clientWidth } = el.$el;\n            offsetLeft += width > 0 ? width : clientWidth;\n          }\n        });\n        this.isBoundary = fixed === 'left' ? indexInFixedColumns === fixedColumns.length - 1 : indexInFixedColumns === 0;\n        this.offsetLeft = offsetLeft;\n      }\n      this.isCutOff = isNodeOverflow(this.$el);\n    },\n  },\n  render(h) {\n    const { cellData } = this;\n    const {\n      col, colIndex, row, rowIndex, customData, customRender, withoutBorder, withBorder,\n    } = cellData;\n    const {\n      colKey, attrs, align, ellipsis, width, className, title, fixed,\n    } = col;\n\n    // 固定列 单元格属性\n    const style: Record<string, any> = {\n      ...col.attrs?.style,\n    };\n    const fixedClass = [];\n    // 普通样式\n    const attrClass = attrs?.class || [];\n    if (fixed) {\n      style.position = 'sticky';\n      style[fixed] = `${this.offsetLeft}px`;\n      fixedClass.push(`${prefix}-table__cell--fixed-${fixed}`);\n      if (this.isBoundary) {\n        fixedClass.push(`${prefix}-table__cell--fixed-${fixed}-${fixed === 'left' ? 'last' : 'first'}`);\n      }\n    }\n    if (align) {\n      attrClass.push(`${prefix}-align-${align}`);\n    }\n    if (width && !fixed) {\n      style.overflow = 'hidden';\n    }\n    if (withoutBorder === true) {\n      style.borderLeftWidth = '0px';\n    }\n    if (withBorder === true) {\n      style.borderLeftWidth = '1px';\n    }\n\n    if (ellipsis === true || typeof ellipsis === 'function') {\n      attrClass.push(`${prefix}-text-ellipsis`);\n    }\n    if (className) {\n      if (typeof className === 'function') {\n        attrClass.push(\n          className({\n            type: cellData.type,\n            col,\n            colIndex,\n            row,\n            rowIndex,\n          }),\n        );\n      } else {\n        attrClass.push(className);\n      }\n    }\n    if (['single', 'multiple'].indexOf(col.type) > -1) {\n      attrClass.push(`${prefix}-table__cell--selectable`);\n    }\n    const record = getRecord(row);\n    // 自定义单元格渲染\n    let cellContent: VNode;\n    if (typeof customRender === 'function') {\n      const { type, func } = customData;\n      const baseData = {\n        col,\n        colIndex,\n        row,\n        rowIndex,\n        record,\n      };\n      if (func === 'title') {\n        cellContent = customRender(h, { col, colIndex, type });\n      } else if (func === 'cell') {\n        cellContent = customRender(h, baseData);\n      } else if (func === 'render') {\n        cellContent = customRender(h, { type, ...baseData });\n      }\n    } else {\n      cellContent = this.$createElement(title || '');\n    }\n\n    const tdAttrs = {\n      attrs: {\n        ...attrs,\n        class: [...fixedClass, ...attrClass].filter((notEmpty) => notEmpty).join(' '),\n        key: colKey,\n      },\n      style,\n      on: {\n        click: (e: MouseEvent) => {\n          emitEvent<Parameters<TdBaseTableProps['onCellClick']>>(this, 'cell-click', {\n            col,\n            colIndex,\n            row,\n            rowIndex,\n            e,\n          });\n        },\n      },\n    };\n    let newCellContent = cellContent;\n    // 如果被截断给加上 Tooltip 提示\n    if (ellipsis && this.isCutOff) {\n      let popupCellContent = cellContent;\n      if (typeof ellipsis === 'function') {\n        popupCellContent = ellipsis(h, {\n          row,\n          col,\n          rowIndex,\n          colIndex,\n        });\n      }\n      // 处理自定义节点的超出省略显示\n      this.$nextTick(() => {\n        if (cellContent?.elm) {\n          const elm = cellContent.elm as HTMLElement;\n          elm.classList?.remove?.(ELLIPSIS_CLASS_NAME);\n          elm.classList?.add?.(ELLIPSIS_CLASS_NAME);\n        }\n      });\n      newCellContent = (\n        <Popup\n          style=\"display: inline;\"\n          overlayStyle={overlayStyle}\n          placement=\"bottom-left\"\n          showArrow={false}\n          content={() => popupCellContent}\n        >\n          {cellContent}\n        </Popup>\n      );\n    }\n    return <td {...tdAttrs}>{newCellContent}</td>;\n  },\n  mounted() {\n    this.init();\n  },\n  updated() {\n    this.init();\n  },\n});\n"],"names":["ELLIPSIS_CLASS_NAME","prefix","overlayStyle","width","maxWidth","wordBreak","Vue","extend","name","props","cellData","type","Object","data","offsetLeft","isBoundary","isCutOff","methods","init","col","fixed","children","$parent","$children","fixedColumns","filter","el","indexInFixedColumns","findIndex","forEach","cur","parseInt","clientWidth","$el","length","isNodeOverflow","render","h","colIndex","row","rowIndex","customData","customRender","withoutBorder","withBorder","colKey","attrs","align","ellipsis","className","title","style","fixedClass","attrClass","position","push","overflow","borderLeftWidth","indexOf","record","getRecord","cellContent","func","baseData","$createElement","tdAttrs","notEmpty","join","key","on","click","e","emitEvent","newCellContent","popupCellContent","$nextTick","elm","classList","remove","add","mounted","updated"],"mappings":"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"}