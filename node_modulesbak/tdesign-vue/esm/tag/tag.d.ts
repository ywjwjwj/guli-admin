import Vue from 'vue';
import { ScopedSlotReturnValue } from 'vue/types/vnode';
import { TagConfig } from '../config-provider/config-receiver';
import { ClassName, Styles } from '../common';
declare const _default: import("vue/types/vue").ExtendedVue<{
    t<T>(pattern: T, placement?: import("../config-provider/config-receiver").Placement): string;
} & {
    global: TagConfig;
} & Record<never, any> & import("../config-provider/config-receiver").ConfigComponent & Vue, unknown, {
    handleClose(e: MouseEvent): void;
    handleClick(e: MouseEvent): void;
    getCloseIcon(): ScopedSlotReturnValue;
}, {
    tagClass: ClassName;
    tagStyle: Styles;
}, {
    closable: boolean;
    content: string | number | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    default: string | number | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    disabled: boolean;
    icon: any;
    maxWidth: string | number;
    shape: "square" | "round" | "mark";
    size: import("../common").SizeEnum;
    theme: "default" | "success" | "primary" | "danger" | "warning";
    variant: "outline" | "dark" | "light" | "light-outline";
    onClick: (context: {
        e: MouseEvent;
    }) => void;
    onClose: (context: {
        e: MouseEvent;
    }) => void;
}>;
export default _default;
