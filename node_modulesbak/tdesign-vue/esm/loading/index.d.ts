import { TdLoadingProps } from './type';
import './style';
export declare type LoadingProps = TdLoadingProps;
export * from './type';
export * from './plugin';
export { default as LoadingPlugin } from './plugin';
export declare const Loading: import("vue/types/vue").ExtendedVue<import("vue").default, {
    delayShowLoading: boolean;
}, {
    countDelay(): void;
}, {
    styles: import("../common").Styles;
    showText: boolean;
    baseClasses: import("../common").ClassName;
    hasContent: boolean;
    withContentClasses: import("../common").ClassName;
    fullScreenClasses: import("../common").ClassName;
    attachClasses: import("../common").ClassName;
    normalClasses: import("../common").ClassName;
    lockFullscreen: boolean;
    delayCounted: boolean;
    showWrapLoading: boolean;
    showFullScreenLoading: boolean;
    showAttachedLoading: boolean;
}, {
    attach: import("../common").AttachNode;
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    delay: number;
    fullscreen: boolean;
    indicator: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    inheritColor: boolean;
    loading: boolean;
    preventScrollThrough: boolean;
    showOverlay: boolean;
    size: string;
    text: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    zIndex: number;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, {
    delayShowLoading: boolean;
}, {
    countDelay(): void;
}, {
    styles: import("../common").Styles;
    showText: boolean;
    baseClasses: import("../common").ClassName;
    hasContent: boolean;
    withContentClasses: import("../common").ClassName;
    fullScreenClasses: import("../common").ClassName;
    attachClasses: import("../common").ClassName;
    normalClasses: import("../common").ClassName;
    lockFullscreen: boolean;
    delayCounted: boolean;
    showWrapLoading: boolean;
    showFullScreenLoading: boolean;
    showAttachedLoading: boolean;
}, {
    attach: import("../common").AttachNode;
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    delay: number;
    fullscreen: boolean;
    indicator: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    inheritColor: boolean;
    loading: boolean;
    preventScrollThrough: boolean;
    showOverlay: boolean;
    size: string;
    text: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    zIndex: number;
}>>;
export default Loading;
