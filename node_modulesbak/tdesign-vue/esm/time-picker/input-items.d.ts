import Vue from 'vue';
import { TimePickerConfig } from '../config-provider/config-receiver';
import { TimeInputType, InputTime, EPickerCols } from './interface';
declare const _default: import("vue/types/vue").ExtendedVue<{
    t<T>(pattern: T, placement?: import("../config-provider/config-receiver").Placement): string;
} & {
    global: TimePickerConfig;
} & Record<never, any> & import("../config-provider/config-receiver").ConfigComponent & Vue, {
    timeArr: EPickerCols[];
}, {
    onInput(e: Event, type: TimeInputType, index: number): void;
    onBlur(e: FocusEvent, trigger: TimeInputType, index: number, input: number): void;
    onFocus(e: FocusEvent, trigger: TimeInputType, index: number, input: number): void;
    onKeydown(e: any, type: TimeInputType, index: number): void;
    onToggleMeridiem(index: number): void;
    setInputValue(v: string | number, input: HTMLInputElement): void;
    switchRenderComponent(): any;
}, {
    displayTimeList: InputTime[];
}, {
    format: string;
    dayjs: any;
    placeholder: string;
    allowInput: boolean;
    isRangePicker: boolean;
    disabled: boolean;
    steps: unknown[];
}>;
export default _default;
