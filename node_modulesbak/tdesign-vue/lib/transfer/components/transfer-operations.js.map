{"version":3,"file":"transfer-operations.js","sources":["../../../src/transfer/components/transfer-operations.tsx"],"sourcesContent":["import Vue, { PropType, CreateElement } from 'vue';\nimport { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-vue';\nimport TButton from '../../button';\nimport { prefix } from '../../config';\nimport { TNode } from '../../common';\n\nexport default Vue.extend({\n  name: 'TTransferOperations',\n  props: {\n    // 控制左按钮的禁用与否\n    leftDisabled: {\n      type: Boolean,\n      required: true,\n    },\n    // 控制右按钮的禁用与否\n    rightDisabled: {\n      type: Boolean,\n      required: true,\n    },\n    operation: {\n      type: [String, Array, Function, Boolean] as PropType<\n        Array<string | TNode> | TNode<{ direction: 'left' | 'right' }>\n      >,\n    },\n  },\n  methods: {\n    moveToRight() {\n      this.$emit('moveToRight');\n    },\n    moveToLeft() {\n      this.$emit('moveToLeft');\n    },\n    getIconRight() {\n      return <ChevronRightIcon />;\n    },\n    getIconLeft() {\n      return <ChevronLeftIcon />;\n    },\n    getIcon(direction: 'left' | 'right') {\n      if (typeof this.operation === 'function') {\n        return null;\n      }\n      if (direction === 'right' && this.operation && typeof this.operation[0] === 'function') {\n        return null;\n      }\n      if (direction === 'left' && this.operation && typeof this.operation[1] === 'function') {\n        return null;\n      }\n\n      if (this.$scopedSlots.operation) {\n        return null;\n      }\n\n      return direction === 'left' ? this.getIconLeft : this.getIconRight;\n    },\n    // right:去右边，left:去左边\n    _renderButton(h: CreateElement, direction: 'left' | 'right') {\n      if (typeof this.$scopedSlots.operation === 'function') {\n        return this.$scopedSlots.operation({\n          direction,\n        });\n      }\n      if (typeof this.operation === 'function') {\n        const renderContent = this.operation;\n        return renderContent(h, { direction });\n      }\n      let renderContent: string | TNode;\n      if (Array.isArray(this.operation)) {\n        const [left, right] = this.operation;\n        renderContent = direction === 'right' ? right : left;\n      } else {\n        renderContent = '';\n      }\n      return renderContent;\n    },\n  },\n  render(h) {\n    const { leftDisabled, rightDisabled } = this.$props;\n    return (\n      <div class={`${prefix}-transfer__operations`}>\n        <TButton\n          variant={rightDisabled ? 'outline' : 'base'}\n          key={rightDisabled ? 'right-outline' : 'right-base'}\n          disabled={rightDisabled}\n          onClick={this.moveToRight}\n          icon={this.getIcon('right')}\n        >\n          {this._renderButton(h, 'right')}\n        </TButton>\n        <TButton\n          variant={leftDisabled ? 'outline' : 'base'}\n          key={leftDisabled ? 'left-outline' : 'left-base'}\n          disabled={leftDisabled}\n          onClick={this.moveToLeft}\n          icon={this.getIcon('left')}\n        >\n          {this._renderButton(h, 'left')}\n        </TButton>\n      </div>\n    );\n  },\n});\n"],"names":["Vue","extend","name","props","leftDisabled","type","Boolean","required","rightDisabled","operation","String","Array","Function","methods","moveToRight","$emit","moveToLeft","getIconRight","ChevronRightIcon","getIconLeft","ChevronLeftIcon","getIcon","direction","$scopedSlots","_renderButton","h","renderContent2","renderContent","isArray","_slicedToArray","left","right","render","$props","prefix","TButton"],"mappings":"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"}