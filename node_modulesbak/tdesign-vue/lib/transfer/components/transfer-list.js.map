{"version":3,"file":"transfer-list.js","sources":["../../../src/transfer/components/transfer-list.tsx"],"sourcesContent":["import { VNode, PropType } from 'vue';\nimport mixins from '../../utils/mixins';\nimport { prefix } from '../../config';\nimport {\n  EmptyType,\n  SearchEvent,\n  SearchOption,\n  TransferValue,\n  TdTransferProps,\n  TransferListType,\n  TransferItemOption,\n} from '../interface';\nimport { PageInfo, TdPaginationProps, Pagination as TPagination } from '../../pagination';\nimport { Checkbox as TCheckbox, CheckboxGroup as TCheckboxGroup, CheckboxProps } from '../../checkbox';\nimport { findTopNode, getLeefCount, getDataValues } from '../utils';\nimport ripple from '../../utils/ripple';\nimport Search from './transfer-search';\nimport { renderTNodeJSXDefault } from '../../utils/render-tnode';\nimport { getKeepAnimationMixins } from '../../config-provider/config-receiver';\n\nconst keepAnimationMixins = getKeepAnimationMixins();\n\nexport default mixins(keepAnimationMixins).extend({\n  name: 'TTransferList',\n  components: {\n    Search,\n    TCheckbox,\n    TCheckboxGroup,\n  },\n  directives: {\n    ripple,\n  },\n  props: {\n    checkboxProps: {\n      type: Object as PropType<CheckboxProps>,\n      default: () => ({}),\n    },\n    dataSource: {\n      type: Array as PropType<Array<TransferItemOption>>,\n      default(): Array<TransferItemOption> {\n        return [];\n      },\n    },\n    listType: {\n      type: String as PropType<TransferListType>,\n      default: 'target' as TransferListType,\n    },\n    title: {\n      type: [String, Function],\n    },\n    checkedValue: {\n      type: Array as PropType<Array<TransferValue>>,\n      default(): Array<TransferValue> {\n        return [];\n      },\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    search: {\n      type: [Boolean, Object] as PropType<SearchOption>,\n      default: false,\n    },\n    transferItem: Function as PropType<TdTransferProps['transferItem']>,\n    empty: {\n      type: [Function, String] as PropType<EmptyType>,\n    },\n    pagination: [Boolean, Object],\n    footer: [Function, String],\n    checkAll: Boolean,\n    t: Function,\n    global: Object,\n    isTreeMode: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      filterValue: '', // 搜索框输入内容,\n      // 用于兼容处理 Pagination 的非受控属性（非受控属性仅有 change 事件变化，无 props 变化，因此只需监听事件）\n      defaultCurrent: 1,\n      // 用于兼容处理 Pagination 的非受控属性\n      defaultPageSize: 0,\n    };\n  },\n  computed: {\n    // this.defaultCurrent 属于分页组件抛出的事件参数，非受控的情况也会有该事件触发\n    // this.pagination.defaultCurrent 为表格组件传入的非受控属性\n    currentPage(): number {\n      return this.pagination.current || this.defaultCurrent || this.pagination.defaultCurrent;\n    },\n    pageSize(): number {\n      return this.pagination.pageSize || this.defaultPageSize || this.pagination.defaultPageSize;\n    },\n    pageTotal(): number {\n      return (this.filteredData && this.filteredData.length) || 0;\n    },\n    filteredData(): Array<TransferItemOption> {\n      return this.dataSource.filter((item: TransferItemOption) => {\n        const label = item && item.label.toString();\n        return label.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n      });\n    },\n    curPageData(): Array<TransferItemOption> {\n      let pageData = this.filteredData;\n      if (!this.pagination) return pageData;\n      if (this.pageSize === 0) return pageData;\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      const endIndex = this.currentPage * this.pageSize;\n      pageData = pageData.slice(startIndex, endIndex);\n      return pageData;\n    },\n    paginationProps(): TdPaginationProps {\n      const defaultPaginationProps: TdPaginationProps = {\n        size: 'small',\n        theme: 'simple',\n        totalContent: false,\n        pageSizeOptions: [],\n      };\n      return typeof this.pagination === 'object'\n        ? {\n          ...defaultPaginationProps,\n          ...this.pagination,\n          current: this.currentPage,\n          total: this.pageTotal,\n          pageSize: this.pageSize,\n        }\n        : {};\n    },\n    hasFooter(): boolean {\n      return !!this.$slots.default;\n    },\n    indeterminate(): boolean {\n      return !this.isAllChecked && this.checkedValue.length > 0;\n    },\n    isAllChecked(): boolean {\n      return (\n        this.checkedValue.length > 0\n        && this.dataSource.every((item) => item.disabled || this.checkedValue.includes(item.value))\n      );\n    },\n    totalCount(): number {\n      return getLeefCount(this.dataSource);\n    },\n  },\n  methods: {\n    handlePaginationChange(pageInfo: PageInfo): void {\n      this.$emit('pageChange', pageInfo);\n      this.defaultCurrent = pageInfo.current;\n      this.defaultPageSize = pageInfo.pageSize;\n    },\n    handleCheckedChange(val: Array<TransferValue>): void {\n      this.$emit('checkedChange', val);\n    },\n    handleCheckedAllChange(checked: boolean): void {\n      if (checked) {\n        const allValue = getDataValues(this.dataSource, [], { isTreeMode: this.isTreeMode, include: false });\n        this.handleCheckedChange(allValue);\n      } else {\n        this.handleCheckedChange([]);\n      }\n    },\n    scroll(e: Event): void {\n      this.$emit('scroll', e);\n    },\n    handleSearch(e: any): void {\n      const event: SearchEvent = {\n        query: e.value,\n        type: this.listType as TransferListType,\n        e: e.e,\n        trigger: e.trigger,\n      };\n      this.$emit('search', event);\n    },\n    renderTitle() {\n      const defaultNode = this.title && typeof this.title === 'string' ? <template>{this.title}</template> : null;\n      const titleNode = renderTNodeJSXDefault(this, 'title', {\n        defaultNode,\n        params: {\n          type: this.listType,\n        },\n      });\n      return <span>{titleNode}</span>;\n    },\n    renderContent() {\n      const rootNode = findTopNode(this);\n      const defaultNode = (\n        <TCheckboxGroup value={this.checkedValue} onChange={this.handleCheckedChange}>\n          {this.curPageData.map((item, index) => (\n            <TCheckbox\n              disabled={this.disabled || item.disabled}\n              value={item.value}\n              class={[`${prefix}-transfer__list-item`]}\n              key={item.key}\n              v-ripple={this.keepAnimation.ripple}\n              {...{ props: this.checkboxProps }}\n            >\n              {renderTNodeJSXDefault(this, 'transferItem', {\n                defaultNode: <span>{item.label}</span>,\n                params: { data: item.data, index, type: this.listType },\n              })}\n            </TCheckbox>\n          ))}\n        </TCheckboxGroup>\n      );\n\n      return (\n        <div class={`${prefix}-transfer__list-content narrow-scrollbar`} onScroll={this.scroll}>\n          {renderTNodeJSXDefault(rootNode, 'tree', {\n            defaultNode,\n            params: {\n              data: this.curPageData,\n              value: this.checkedValue,\n              onChange: this.handleCheckedChange,\n            },\n          })}\n        </div>\n      );\n    },\n    renderEmpty() {\n      const empty = this.empty || this.t(this.global.empty);\n      const defaultNode: VNode = typeof empty === 'string' ? <span>{empty}</span> : null;\n      return (\n        <div class={`${prefix}-transfer__empty`}>\n          {renderTNodeJSXDefault(this, 'empty', {\n            defaultNode,\n            params: {\n              type: this.listType,\n            },\n          })}\n        </div>\n      );\n    },\n    renderFooter() {\n      const defaultNode = typeof this.footer === 'string' ? <div class={`${prefix}-transfer__footer`}>{this.footer}</div> : null;\n      return renderTNodeJSXDefault(this, 'footer', {\n        defaultNode,\n        params: {\n          type: this.listType,\n        },\n      });\n    },\n  },\n  render() {\n    return (\n      <div class={`${prefix}-transfer__list ${prefix}-transfer__list-${this.listType}`}>\n        <div class={`${prefix}-transfer__list-header`}>\n          <div>\n            {this.checkAll && (\n              <TCheckbox\n                disabled={this.disabled || !this.dataSource.length}\n                checked={this.isAllChecked}\n                indeterminate={this.indeterminate}\n                onChange={this.handleCheckedAllChange}\n              />\n            )}\n            <span>\n              {this.t(this.global.title, {\n                checked: this.checkedValue.length,\n                total: this.totalCount,\n              })}\n            </span>\n          </div>\n          {this.renderTitle()}\n        </div>\n        <div class={[`${prefix}-transfer__list-body`, this.search ? `${prefix}-transfer__list--with-search` : '']}>\n          {this.search && (\n            <search\n              searchValue={this.filterValue}\n              placeholder={this.t(this.global.placeholder)}\n              onChange={(e: string) => (this.filterValue = e)}\n              disabled={this.disabled}\n              search={this.search}\n              onSearch={this.handleSearch}\n            />\n          )}\n          {this.curPageData.length > 0 ? this.renderContent() : this.renderEmpty()}\n        </div>\n        {this.pagination && this.pageSize > 0 && this.pageTotal > 0 && (\n          <div class={`${prefix}-transfer__list-pagination`}>\n            <TPagination props={this.paginationProps} onChange={this.handlePaginationChange} />\n          </div>\n        )}\n        {this.renderFooter()}\n      </div>\n    );\n  },\n});\n"],"names":["keepAnimationMixins","getKeepAnimationMixins","mixins","extend","name","components","Search","TCheckbox","TCheckboxGroup","directives","ripple","props","checkboxProps","type","Object","dataSource","Array","listType","String","title","Function","checkedValue","disabled","Boolean","search","transferItem","empty","pagination","footer","checkAll","t","global","isTreeMode","data","filterValue","defaultCurrent","defaultPageSize","computed","currentPage","current","pageSize","pageTotal","filteredData","length","filter","item","label","toString","toLowerCase","indexOf","curPageData","pageData","startIndex","endIndex","slice","paginationProps","defaultPaginationProps","size","theme","totalContent","pageSizeOptions","_typeof","total","hasFooter","$slots","indeterminate","isAllChecked","every","includes","value","totalCount","getLeefCount","methods","handlePaginationChange","pageInfo","$emit","handleCheckedChange","val","handleCheckedAllChange","checked","allValue","getDataValues","include","scroll","e","handleSearch","event","query","trigger","renderTitle","defaultNode","titleNode","renderTNodeJSXDefault","params","renderContent","rootNode","findTopNode","map","index","prefix","key","keepAnimation","onChange","renderEmpty","renderFooter","render","placeholder","TPagination","_mergeJSXProps"],"mappings":"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"}