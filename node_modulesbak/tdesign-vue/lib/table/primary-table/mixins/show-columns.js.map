{"version":3,"file":"show-columns.js","sources":["../../../../src/table/primary-table/mixins/show-columns.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport { SettingIcon } from 'tdesign-icons-vue';\n\nimport { DialogPlugin } from '../../../dialog/plugin';\nimport Checkbox from '../../../checkbox';\nimport CheckboxGroup from '../../../checkbox/group';\nimport primaryTableProps from '../../primary-table-props';\nimport { TdPrimaryTableProps } from '../../type';\nimport { prefix } from '../../../config';\nimport { renderTNodeJSXDefault } from '../../../utils/render-tnode';\n\nexport default Vue.extend({\n  name: `${prefix}-primary-show-columns`,\n  props: {\n    columnController: primaryTableProps.columnController,\n    columns: primaryTableProps.columns,\n    showColumns: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      showColumnKeys: this.columns.map(({ colKey }) => colKey), // dialog 确定后才重新赋值\n      showColumnCheckboxKeys: this.columns.map(({ colKey }) => colKey), // 多选框状态\n      isShowColumnsDlg: false,\n    };\n  },\n  computed: {\n    showColumnCheckboxOpts(): Record<string, any> {\n      const enbledKeys = new Set(this.columnController?.fields || this.columns.map(({ colKey }) => colKey));\n\n      return this.columns\n        .filter(({ colKey, title }) => colKey && title) // 去空\n        .map(({ colKey, title }) => ({\n          label: title,\n          value: colKey,\n          disabled: !enbledKeys.has(colKey),\n        }));\n    },\n    isAllShowColumns(): boolean {\n      return this.showColumnCheckboxOpts.every(({ value }: Record<string, any>) => this.showColumnCheckboxKeys.includes(value));\n    },\n    isSomeShowColumns(): boolean {\n      return (\n        !this.isAllShowColumns\n        && this.showColumnCheckboxOpts.some(({ value }: Record<string, any>) => this.showColumnCheckboxKeys.includes(value))\n      );\n    },\n  },\n  methods: {\n    getShowColumns(columns: TdPrimaryTableProps['columns']): TdPrimaryTableProps['columns'] {\n      return columns.filter(\n        ({ colKey }) => this.showColumnKeys.includes(colKey)\n          || !this.showColumnCheckboxOpts.map(({ value }: Record<string, any>) => value).includes(colKey),\n      );\n    },\n\n    renderShowColumns(): VNode {\n      const handleCheckChange = (vals: string[]) => {\n        this.showColumnCheckboxKeys = vals;\n      };\n\n      const handleToggleColumnController = () => {\n        const dialogTmp = DialogPlugin.confirm({\n          header: '自定义设置表格列',\n          body: () => {\n            const defaultNode = (\n              <div\n                class={`${prefix}-table__column-controller ${prefix}-table__column-controller--${\n                  this.columnController.displayType === 'fixed-width' ? 'fixed' : 'auto'\n                }`}\n              >\n                <div class={`${prefix}-table__column-controller-body`}>\n                  <p class={`${prefix}-table__column-controller-desc`}>请选择需要在表格中显示的数据列</p>\n                  <div class={`${prefix}-table__column-controller-block`}>\n                    <Checkbox\n                      indeterminate={this.isSomeShowColumns}\n                      checked={this.isAllShowColumns}\n                      onChange={this.handleClickAllShowColumns}\n                    >\n                      全选\n                    </Checkbox>\n                  </div>\n                  <div class={`${prefix}-table__column-controller-block`}>\n                    <CheckboxGroup\n                      options={this.showColumnCheckboxOpts}\n                      value={this.showColumnCheckboxKeys}\n                      onChange={handleCheckChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n            return renderTNodeJSXDefault(this, 'columnControllerContent', defaultNode);\n          },\n          confirmBtn: '确认',\n          cancelBtn: '取消',\n          width: 612,\n          onConfirm: () => {\n            this.showColumnKeys = [...this.showColumnCheckboxKeys];\n            dialogTmp.hide();\n          },\n          onClose: () => {\n            dialogTmp.hide();\n          },\n        });\n      };\n      return (\n        <div class={`${prefix}-table__top-content`}>\n          <t-button theme=\"default\" variant=\"outline\" onClick={handleToggleColumnController}>\n            <SettingIcon slot=\"icon\" />\n            自定义列\n          </t-button>\n        </div>\n      );\n    },\n\n    handleClickAllShowColumns(): void {\n      if (this.isAllShowColumns) {\n        this.showColumnCheckboxKeys = this.showColumnCheckboxOpts\n          .filter((item: any) => item.disabled)\n          .map(({ value }: Record<string, any>) => value);\n      } else {\n        this.showColumnCheckboxKeys = this.showColumnCheckboxOpts.map(({ value }: Record<string, any>) => value);\n      }\n    },\n\n    updateColumns(): void {\n      const keys = this.columns.map(({ colKey }) => colKey);\n\n      this.showColumnKeys = keys;\n      this.showColumnCheckboxKeys = keys;\n    },\n  },\n  watch: {\n    columns: {\n      deep: true,\n      handler() {\n        this.updateColumns();\n      },\n    },\n  },\n});\n"],"names":["Vue","extend","name","prefix","props","columnController","primaryTableProps","columns","showColumns","type","Boolean","data","showColumnKeys","map","colKey","showColumnCheckboxKeys","isShowColumnsDlg","computed","showColumnCheckboxOpts","enbledKeys","Set","fields","filter","title","label","value","disabled","has","isAllShowColumns","every","includes","isSomeShowColumns","some","methods","getShowColumns","renderShowColumns","handleCheckChange","vals","handleToggleColumnController","dialogTmp","DialogPlugin","confirm","header","body","defaultNode","displayType","Checkbox","handleClickAllShowColumns","CheckboxGroup","renderTNodeJSXDefault","confirmBtn","cancelBtn","width","onConfirm","_toConsumableArray","hide","onClose","SettingIcon","item","updateColumns","keys","watch","deep","handler"],"mappings":"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"}