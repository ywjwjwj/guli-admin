/**
 * tdesign v0.38.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var dayjs = require('dayjs');
var timePicker_props = require('../props.js');
var timePicker_interface = require('../interface.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BooleanType = {
  type: Boolean,
  "default": true,
  validator: function validator(v) {
    return typeof v === "boolean";
  }
};
var panelProps = function panelProps() {
  return {
    disabled: _objectSpread(_objectSpread({}, BooleanType), {
      "default": false
    }),
    isFocus: _objectSpread(_objectSpread({}, BooleanType), {
      "default": false
    }),
    value: {
      type: Array,
      "default": function _default() {
        return [dayjs__default["default"]()];
      }
    },
    format: {
      type: String,
      "default": "HH:mm:ss"
    },
    steps: _objectSpread({
      type: Array
    }, {
      "default": [1, 1, 1]
    }),
    isShowPanel: _objectSpread(_objectSpread({}, BooleanType), {
      "default": false
    }),
    hideDisabledTime: _objectSpread({}, timePicker_props["default"].hideDisabledTime),
    disableTime: _objectSpread({}, timePicker_props["default"].disableTime),
    isFooterDisplay: _objectSpread({}, BooleanType)
  };
};
var panelColProps = function panelColProps() {
  return {
    format: {
      type: String,
      "default": "HH:mm:ss"
    },
    cols: {
      type: Array,
      "default": function _default() {
        return [timePicker_interface.EPickerCols.hour, timePicker_interface.EPickerCols.minute, timePicker_interface.EPickerCols.second];
      }
    },
    value: _objectSpread({
      type: Object
    }, {
      "default": function _default() {
        return dayjs__default["default"]();
      }
    }),
    range: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    steps: _objectSpread({
      type: Array
    }, {
      "default": [1, 1, 1]
    }),
    hideDisabledTime: _objectSpread({}, timePicker_props["default"].hideDisabledTime),
    disableTime: _objectSpread({}, timePicker_props["default"].disableTime),
    localeMeridiems: {
      type: Array
    }
  };
};

exports.panelColProps = panelColProps;
exports.panelProps = panelProps;
//# sourceMappingURL=props.js.map
