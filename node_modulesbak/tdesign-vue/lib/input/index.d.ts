import { TdInputProps } from './type';
import './style';
export * from './type';
export declare type InputProps = TdInputProps;
export declare type InputBlurEventParams = Parameters<InputProps['onBlur']>;
export declare type InputFocustEventParams = Parameters<InputProps['onFocus']>;
export declare const Addon: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    renderAddon(h: import("vue").CreateElement, type: string, addon: string | Function): import("vue/types/vnode").ScopedSlotReturnValue;
}, unknown, {
    prepend: string | Function;
    append: string | Function;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    renderAddon(h: import("vue").CreateElement, type: string, addon: string | Function): import("vue/types/vnode").ScopedSlotReturnValue;
}, unknown, {
    prepend: string | Function;
    append: string | Function;
}>>;
export declare const Input: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    updateData(this: any, propName: string, v: any, ...args: any[]): any;
}, unknown, {
    [x: string]: any;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    updateData(this: any, propName: string, v: any, ...args: any[]): any;
}, unknown, {
    [x: string]: any;
}>>;
export declare const InputGroup: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, {
    classes: import("../common").ClassName;
}, {
    separate: boolean;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, {
    classes: import("../common").ClassName;
}, {
    separate: boolean;
}>>;
export default Input;
