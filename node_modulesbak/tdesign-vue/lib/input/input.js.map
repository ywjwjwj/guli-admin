{"version":3,"file":"input.js","sources":["../../src/input/input.tsx"],"sourcesContent":["import Vue, { CreateElement, VNode } from 'vue';\nimport { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } from 'tdesign-icons-vue';\nimport camelCase from 'lodash/camelCase';\nimport kebabCase from 'lodash/kebabCase';\nimport { InputValue, TdInputProps } from './type';\nimport { getCharacterLength, omit } from '../utils/helper';\nimport getConfigReceiverMixins, { InputConfig } from '../config-provider/config-receiver';\nimport mixins from '../utils/mixins';\nimport { ClassName } from '../common';\nimport CLASSNAMES from '../utils/classnames';\nimport { emitEvent } from '../utils/event';\nimport { prefix } from '../config';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\n\nconst name = `${prefix}-input`;\nconst INPUT_WRAP_CLASS = `${prefix}-input__wrap`;\nconst INPUT_TIPS_CLASS = `${prefix}-input__tips`;\n\nfunction getValidAttrs(obj: object): object {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\ninterface InputInstance extends Vue {\n  composing: boolean;\n}\n\nexport default mixins(getConfigReceiverMixins<InputInstance, InputConfig>('input')).extend({\n  name: 'TInput',\n  inheritAttrs: false,\n  props: { ...props },\n  data() {\n    return {\n      formDisabled: undefined,\n      isHover: false,\n      focused: false,\n      renderType: this.type,\n      inputValue: this.value,\n    };\n  },\n  computed: {\n    tDisabled(): boolean {\n      return this.formDisabled || this.disabled;\n    },\n    tPlaceholder(): string {\n      return this.placeholder ?? this.t(this.global.placeholder);\n    },\n    showClear(): boolean {\n      return (\n        (this.value && !this.disabled && this.clearable && this.isHover && !this.readonly) || this.showClearIconOnEmpty\n      );\n    },\n    inputAttrs(): Record<string, any> {\n      return getValidAttrs({\n        autofocus: this.autofocus,\n        disabled: this.tDisabled,\n        readonly: this.readonly,\n        autocomplete: this.autocomplete,\n        placeholder: this.tPlaceholder,\n        maxlength: this.maxlength,\n        name: this.name || undefined,\n        type: this.renderType,\n        unselectable: this.readonly ? 'on' : 'off',\n      });\n    },\n    inputClasses(): ClassName {\n      return [\n        name,\n        CLASSNAMES.SIZE[this.size] || '',\n        {\n          [CLASSNAMES.STATUS.disabled]: this.tDisabled,\n          [CLASSNAMES.STATUS.focused]: this.focused,\n          [`${prefix}-is-${this.status}`]: this.status,\n          [`${prefix}-align-${this.align}`]: this.align !== 'left',\n          [`${prefix}-is-disabled`]: this.tDisabled,\n          [`${prefix}-is-readonly`]: this.readonly,\n          [`${name}--focused`]: this.focused,\n          [`${name}--auto-width`]: this.autoWidth,\n        },\n      ];\n    },\n  },\n  watch: {\n    autofocus: {\n      handler(val) {\n        if (val === true) {\n          this.$nextTick(() => {\n            (this.$refs.inputRef as HTMLInputElement).focus();\n          });\n        }\n      },\n      immediate: true,\n    },\n    value: {\n      handler(val) {\n        this.inputValue = val;\n      },\n      immediate: true,\n    },\n  },\n\n  created() {\n    this.composing = false;\n    if (this.autoWidth) {\n      this.addListenders();\n    }\n  },\n  methods: {\n    addListenders() {\n      this.$watch(\n        () => this.value + this.placeholder,\n        () => {\n          if (!this.autoWidth) return;\n          this.$nextTick(() => {\n            this.updateInputWidth();\n          });\n        },\n        { immediate: true },\n      );\n    },\n    mouseEvent(v: boolean) {\n      this.isHover = v;\n    },\n    renderIcon(h: CreateElement, icon: string | Function | undefined, iconType: 'prefix-icon' | 'suffix-icon') {\n      if (typeof icon === 'function') {\n        return icon(h);\n      }\n\n      // 插槽名称为中划线\n      if (this.$scopedSlots[kebabCase(iconType)]) {\n        return this.$scopedSlots[kebabCase(iconType)](null);\n      }\n      // 插槽名称为驼峰\n      if (this.$scopedSlots[camelCase(iconType)]) {\n        return this.$scopedSlots[camelCase(iconType)](null);\n      }\n\n      return null;\n    },\n    setInputValue(v: InputValue = ''): void {\n      const input = this.$refs.inputRef as HTMLInputElement;\n      if (!input) return;\n      const sV = String(v);\n      if (input.value !== sV) {\n        input.value = sV;\n      }\n    },\n    focus(): void {\n      const input = this.$refs.inputRef as HTMLInputElement;\n      input?.focus();\n    },\n    blur(): void {\n      const input = this.$refs.inputRef as HTMLInputElement;\n      input?.blur();\n    },\n    handleInput(e: InputEvent): void {\n      // 中文输入的时候inputType是insertCompositionText所以中文输入的时候禁止触发。\n      const isCheckInputType = e.inputType && e.inputType === 'insertCompositionText';\n      if (e.isComposing || isCheckInputType) return;\n      this.inputValueChangeHandle(e);\n    },\n\n    handleKeydown(e: KeyboardEvent) {\n      if (this.tDisabled) return;\n      const code = e.code || e.key;\n      if (code === 'Enter' || code === 'NumpadEnter') {\n        emitEvent<Parameters<TdInputProps['onEnter']>>(this, 'enter', this.value, { e });\n      } else {\n        emitEvent<Parameters<TdInputProps['onKeydown']>>(this, 'keydown', this.value, { e });\n      }\n    },\n    handleKeyUp(e: KeyboardEvent) {\n      if (this.tDisabled) return;\n      emitEvent<Parameters<TdInputProps['onKeyup']>>(this, 'keyup', this.value, { e });\n    },\n    handleKeypress(e: KeyboardEvent) {\n      if (this.tDisabled) return;\n      emitEvent<Parameters<TdInputProps['onKeypress']>>(this, 'keypress', this.value, { e });\n    },\n    onHandlePaste(e: ClipboardEvent) {\n      if (this.tDisabled) return;\n      // @ts-ignore\n      const clipData = e.clipboardData || window.clipboardData;\n      emitEvent<Parameters<TdInputProps['onPaste']>>(this, 'paste', { e, pasteValue: clipData?.getData('text/plain') });\n    },\n    onHandleMousewheel(e: WheelEvent) {\n      emitEvent<Parameters<TdInputProps['onWheel']>>(this, 'wheel', { e });\n    },\n    emitPassword() {\n      const { renderType } = this;\n      const toggleType = renderType === 'password' ? 'text' : 'password';\n      this.renderType = toggleType;\n    },\n    emitClear(e: MouseEvent) {\n      emitEvent<Parameters<TdInputProps['onClear']>>(this, 'clear', { e });\n      emitEvent<Parameters<TdInputProps['onChange']>>(this, 'change', '', { e });\n      this.focus();\n      this.emitFocus(e);\n    },\n    emitFocus(e: FocusEvent) {\n      this.inputValue = this.value;\n      if (this.tDisabled) return;\n      this.focused = true;\n      emitEvent<Parameters<TdInputProps['onFocus']>>(this, 'focus', this.value, { e });\n    },\n    formatAndEmitBlur(e: FocusEvent) {\n      if (this.format) {\n        this.inputValue = this.format(this.value);\n      }\n      this.focused = false;\n      emitEvent<Parameters<TdInputProps['onBlur']>>(this, 'blur', this.value, { e });\n    },\n    compositionendHandler(e: InputEvent) {\n      this.inputValueChangeHandle(e);\n    },\n    onRootClick(e: MouseEvent) {\n      (this.$refs.inputRef as HTMLInputElement)?.focus();\n      this.$emit('click', e);\n    },\n    inputValueChangeHandle(e: InputEvent) {\n      const { target } = e;\n      let val = (target as HTMLInputElement).value;\n      if (this.maxcharacter && this.maxcharacter >= 0) {\n        const stringInfo = getCharacterLength(val, this.maxcharacter);\n        val = typeof stringInfo === 'object' && stringInfo.characters;\n      }\n      emitEvent<Parameters<TdInputProps['onChange']>>(this, 'change', val, { e });\n      // 受控，重要，勿删\n      this.$nextTick(() => this.setInputValue(this.value));\n    },\n\n    onInputMouseenter(e: MouseEvent) {\n      this.mouseEvent(true);\n      this.onMouseenter?.({ e });\n    },\n\n    onInputMouseleave(e: MouseEvent) {\n      this.mouseEvent(false);\n      this.onMouseleave?.({ e });\n    },\n\n    updateInputWidth() {\n      const pre = this.$refs.inputPreRef as HTMLSpanElement;\n      if (!pre) return;\n      const width = pre.offsetWidth;\n      (this.$refs.inputRef as HTMLInputElement).style.width = `${width}px`;\n    },\n  },\n\n  render(h: CreateElement): VNode {\n    const inputEvents = getValidAttrs({\n      focus: this.emitFocus,\n      blur: this.formatAndEmitBlur,\n      keydown: this.handleKeydown,\n      keyup: this.handleKeyUp,\n      keypress: this.handleKeypress,\n      paste: this.onHandlePaste,\n      // input的change事件是失去焦点或者keydown的时候执行。这与api定义的change不符，所以不做任何变化。\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      change: () => {},\n    });\n\n    const wrapperAttrs = omit(this.$attrs, Object.keys(this.inputAttrs));\n    const wrapperEvents = omit(this.$listeners, [...Object.keys(inputEvents), 'input', 'paste']);\n\n    const prefixIcon = this.renderIcon(h, this.prefixIcon, 'prefix-icon');\n    let suffixIcon = this.renderIcon(h, this.suffixIcon, 'suffix-icon');\n\n    const label = renderTNodeJSX(this, 'label');\n    const suffix = renderTNodeJSX(this, 'suffix');\n\n    const labelContent = label ? <div class={`${name}__prefix`}>{label}</div> : null;\n    const suffixContent = suffix ? <div class={`${name}__suffix`}>{suffix}</div> : null;\n\n    if (this.showClear) {\n      suffixIcon = <CloseCircleFilledIcon class={`${name}__suffix-clear`} nativeOnClick={this.emitClear} />;\n    }\n\n    if (this.type === 'password') {\n      if (this.renderType === 'password') {\n        suffixIcon = <BrowseOffIcon class={`${name}__suffix-clear`} nativeOnClick={this.emitPassword} />;\n      } else if (this.renderType === 'text') {\n        suffixIcon = <BrowseIcon class={`${name}__suffix-clear`} nativeOnClick={this.emitPassword} />;\n      }\n    }\n\n    const classes = [\n      this.inputClasses,\n      this.inputClass,\n      {\n        [`${name}--prefix`]: prefixIcon || labelContent,\n        [`${name}--suffix`]: suffixIcon || suffixContent,\n      },\n    ];\n    const inputNode = (\n      <div\n        class={classes}\n        onClick={this.onRootClick}\n        onMouseenter={this.onInputMouseenter}\n        onMouseleave={this.onInputMouseleave}\n        onwheel={this.onHandleMousewheel}\n        {...{ attrs: wrapperAttrs, on: wrapperEvents }}\n      >\n        {prefixIcon ? <span class={[`${name}__prefix`, `${name}__prefix-icon`]}>{prefixIcon}</span> : null}\n        {labelContent}\n        <input\n          {...{ attrs: this.inputAttrs, on: inputEvents }}\n          ref=\"inputRef\"\n          class={`${name}__inner`}\n          value={this.inputValue}\n          onInput={this.handleInput}\n          onCompositionend={this.compositionendHandler}\n        />\n        {this.autoWidth && (\n          <span ref=\"inputPreRef\" class={`${prefix}-input__input-pre`}>\n            {this.value || this.tPlaceholder}\n          </span>\n        )}\n        {suffixContent}\n        {suffixIcon ? (\n          <span class={[`${name}__suffix`, `${name}__suffix-icon`, { [`${name}__clear`]: this.showClear }]}>\n            {suffixIcon}\n          </span>\n        ) : null}\n      </div>\n    );\n\n    const tips = renderTNodeJSX(this, 'tips');\n    return (\n      <div class={INPUT_WRAP_CLASS}>\n        {inputNode}\n        {tips && <div class={`${INPUT_TIPS_CLASS} ${prefix}-input__tips--${this.status || 'normal'}`}>{tips}</div>}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","INPUT_WRAP_CLASS","INPUT_TIPS_CLASS","getValidAttrs","obj","newObj","Object","keys","forEach","key","mixins","getConfigReceiverMixins","extend","inheritAttrs","props","data","formDisabled","isHover","focused","renderType","type","inputValue","value","computed","tDisabled","disabled","tPlaceholder","placeholder","t","global","showClear","clearable","readonly","showClearIconOnEmpty","inputAttrs","autofocus","autocomplete","maxlength","unselectable","inputClasses","CLASSNAMES","SIZE","size","_defineProperty","STATUS","status","align","autoWidth","watch","handler","val","$nextTick","$refs","inputRef","focus","immediate","created","composing","addListenders","methods","$watch","updateInputWidth","mouseEvent","v","renderIcon","h","icon","iconType","$scopedSlots","kebabCase","camelCase","setInputValue","input","sV","String","blur","handleInput","e","isCheckInputType","inputType","isComposing","inputValueChangeHandle","handleKeydown","code","emitEvent","handleKeyUp","handleKeypress","onHandlePaste","clipData","clipboardData","window","pasteValue","getData","onHandleMousewheel","emitPassword","toggleType","emitClear","emitFocus","formatAndEmitBlur","format","compositionendHandler","onRootClick","$emit","target","maxcharacter","stringInfo","getCharacterLength","_typeof","characters","onInputMouseenter","onMouseenter","onInputMouseleave","onMouseleave","pre","inputPreRef","width","offsetWidth","style","render","inputEvents","keydown","keyup","keypress","paste","change","wrapperAttrs","omit","$attrs","wrapperEvents","$listeners","prefixIcon","suffixIcon","label","renderTNodeJSX","suffix","labelContent","suffixContent","CloseCircleFilledIcon","BrowseOffIcon","BrowseIcon","classes","inputClass","inputNode","tips"],"mappings":"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"}