{"version":3,"file":"group.js","sources":["../../src/avatar/group.tsx"],"sourcesContent":["import Vue from 'vue';\nimport { prefix } from '../config';\nimport props from './avatar-group-props';\nimport { TNodeReturnValue } from '../common';\nimport Avatar from './avatar';\nimport { renderContent, renderTNodeJSX } from '../utils/render-tnode';\n\nconst name = `${prefix}-avatar-group`;\n\nexport default Vue.extend({\n  name: 'TAvatarGroup',\n  components: {\n    Avatar,\n  },\n\n  props: {\n    ...props,\n  },\n\n  provide(): Record<string, any> {\n    return {\n      avatarGroup: this,\n    };\n  },\n\n  methods: {\n    renderEllipsisAvatar(children: Array<TNodeReturnValue>): Array<TNodeReturnValue> {\n      if (children?.length > this.max) {\n        const content = this.setEllipsisContent(children);\n        const outAvatar = children.slice(0, this.max);\n        outAvatar.push(<Avatar size={this.size} icon={this.isIcon() ? this.collapseAvatar : null}>{content}</Avatar>);\n        // 隐藏的avater通过popup展示\n        // const hideAvatar = children.slice(this.max - children.length);\n        // const popupContent = <t-popup props={{ ...this.popupProps, placement: this.placement }} >\n        //   <template slot='content'>{hideAvatar }</template>\n        //   <Avatar size={this.size} icon={this.isIcon() ? this.collapseAvatar : null}>{content}</Avatar>\n        // </t-popup>;\n        // return [outAvatar, popupContent];\n        return [outAvatar];\n      }\n      return [children];\n    },\n    setEllipsisContent(children: Array<TNodeReturnValue>) {\n      let content: any = '';\n      if (this.collapseAvatar) {\n        if (!this.isIcon()) {\n          content = renderContent(this, 'collapseAvatar', 'content');\n        }\n      } else {\n        content = `+${children.length - this.max}`;\n      }\n      return content;\n    },\n    isIcon() {\n      const content = renderTNodeJSX(this, 'collapseAvatar');\n      return content?.context instanceof Vue;\n    },\n  },\n  render() {\n    const { $scopedSlots } = this;\n    const children: TNodeReturnValue = $scopedSlots.default && $scopedSlots.default(null);\n    const { cascading, max } = this.$props;\n    const groupClass = [\n      `${name}`,\n      {\n        [`${prefix}-avatar--offset-right`]: cascading === 'right-up',\n        [`${prefix}-avatar--offset-left`]: cascading === 'left-up',\n      },\n    ];\n    let content = [children];\n\n    if (max && max >= 0) {\n      content = [this.renderEllipsisAvatar(children)];\n    }\n    return <div class={groupClass}>\n      {content}\n    </div>;\n  },\n\n});\n"],"names":["name","prefix","Vue","extend","components","Avatar","props","provide","avatarGroup","methods","renderEllipsisAvatar","children","length","max","content","setEllipsisContent","outAvatar","slice","push","size","isIcon","collapseAvatar","renderContent","renderTNodeJSX","context","render","$scopedSlots","$props","cascading","groupClass","_defineProperty"],"mappings":"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"}