/**
 * tdesign v0.38.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var helper = require('../_chunks/dep-c2bd70fb.js');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var VueCompositionAPI = require('@vue/composition-api');
var isObject = require('lodash/isObject');
var tagInput_index = require('../tag-input/index.js');
var loading_index = require('../loading/index.js');
var hooks_useDefaultValue = require('../hooks/useDefaultValue.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('../tag-input/tag-input.js');
require('tdesign-icons-vue');
require('../input/index.js');
require('../input/addon.js');
require('vue');
require('../config.js');
require('../input/input.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../config-provider/config-receiver.js');
require('lodash/mergeWith');
require('../config-provider/zh_CN_config.js');
require('../utils/mixins.js');
require('../utils/classnames.js');
require('../utils/event.js');
require('../input/props.js');
require('../utils/render-tnode.js');
require('../input/input-group.js');
require('../utils/map-props.js');
require('../utils/withInstall.js');
require('lodash/capitalize');
require('../tag-input/props.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/tag.js');
require('../tag/props.js');
require('../tag/check-tag.js');
require('../tag/check-tag-props.js');
require('../hooks/useVModel.js');
require('../hooks/tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/isString');
require('../tag-input/useHover.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../utils/dom.js');
require('raf');
require('../utils/easing.js');
require('../utils/transfer-dom.js');
require('../loading/props.js');
require('../loading/plugin.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_KEYS = {
  label: "label",
  key: "key",
  children: "children"
};
function useMultiple(props, context) {
  var _toRefs = VueCompositionAPI.toRefs(props),
      inputValue = _toRefs.inputValue;

  var classPrefix = configProvider_useConfig.usePrefixClass();
  var instance = VueCompositionAPI.getCurrentInstance();
  var tagInputRef = VueCompositionAPI.ref();

  var _useDefaultValue = hooks_useDefaultValue["default"](inputValue, props.defaultInputValue, props.onInputChange, "inputValue", "input-change"),
      _useDefaultValue2 = _slicedToArray__default["default"](_useDefaultValue, 2),
      tInputValue = _useDefaultValue2[0],
      setTInputValue = _useDefaultValue2[1];

  var iKeys = VueCompositionAPI.computed(function () {
    return _objectSpread(_objectSpread({}, DEFAULT_KEYS), props.keys);
  });
  var tags = VueCompositionAPI.computed(function () {
    if (!(props.value instanceof Array)) {
      return isObject__default["default"](props.value) ? [props.value[iKeys.value.label]] : [props.value];
    }

    return props.value.map(function (item) {
      return isObject__default["default"](item) ? item[iKeys.value.label] : item;
    });
  });
  var tPlaceholder = VueCompositionAPI.computed(function () {
    return !tags.value || !tags.value.length ? props.placeholder : "";
  });

  var onTagInputChange = function onTagInputChange(val, context2) {
    var _props$onTagChange;

    if (context2.trigger === "tag-remove") {
      var _context2$e;

      (_context2$e = context2.e) === null || _context2$e === void 0 ? void 0 : _context2$e.stopPropagation();
    }

    (_props$onTagChange = props.onTagChange) === null || _props$onTagChange === void 0 ? void 0 : _props$onTagChange.call(props, val, context2);
    instance.emit("tag-change", val, context2);
  };

  var renderSelectMultiple = function renderSelectMultiple(p, h) {
    var tagInputProps = _objectSpread(_objectSpread(_objectSpread({}, props.tagInputProps), p.commonInputProps), {}, {
      tagProps: props.tagProps,
      readonly: !props.allowInput,
      label: props.label,
      autoWidth: props.autoWidth,
      placeholder: tPlaceholder.value,
      minCollapsedNum: props.minCollapsedNum,
      collapsedItems: props.collapsedItems,
      tag: props.tag,
      valueDisplay: props.valueDisplay,
      value: tags.value,
      inputValue: tInputValue.value || "",
      inputProps: {
        readonly: !props.allowInput || props.readonly,
        inputClass: _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-input--focused"), p.popupVisible)
      },
      suffixIcon: !props.disabled && props.loading ? function () {
        return h(loading_index.Loading, {
          "attrs": {
            "loading": true,
            "size": "small"
          }
        });
      } : props.suffixIcon
    });

    return h(tagInput_index.TagInput, helper.helper([{
      "ref": "tagInputRef",
      "scopedSlots": context.slots
    }, {
      "props": tagInputProps
    }, {}, {
      "on": {
        "input-change": function inputChange(val, context2) {
          if ((context2 === null || context2 === void 0 ? void 0 : context2.trigger) === "enter") return;
          setTInputValue(val, {
            trigger: context2.trigger,
            e: context2.e
          });
        }
      }
    }, {
      "on": {
        "change": onTagInputChange,
        "clear": function clear(context2) {
          context2.e.stopPropagation();
          p.onInnerClear;
        },
        "blur": function blur(val, context2) {
          setTInputValue("", _objectSpread(_objectSpread({}, context2), {}, {
            trigger: "blur"
          }));
          instance.emit("blur", props.value, _objectSpread(_objectSpread({}, context2), {}, {
            tagInputValue: val
          }));
        },
        "focus": function focus(val, context2) {
          var _props$onFocus;

          (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, props.value, _objectSpread(_objectSpread({}, context2), {}, {
            tagInputValue: val
          }));
          instance.emit("focus", props.value, _objectSpread(_objectSpread({}, context2), {}, {
            tagInputValue: val
          }));
        }
      }
    }]));
  };

  return {
    tags: tags,
    tPlaceholder: tPlaceholder,
    tagInputRef: tagInputRef,
    renderSelectMultiple: renderSelectMultiple
  };
}

exports["default"] = useMultiple;
//# sourceMappingURL=useMultiple.js.map
