/**
 * tdesign v0.38.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var helper = require('../_chunks/dep-c2bd70fb.js');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var VueCompositionAPI = require('@vue/composition-api');
var popup_index = require('../popup/index.js');
var config = require('../config.js');
var selectInput_props = require('./props.js');
var selectInput_useSingle = require('./useSingle.js');
var selectInput_useMultiple = require('./useMultiple.js');
var selectInput_useOverlayStyle = require('./useOverlayStyle.js');
require('../popup/popup.js');
require('@babel/runtime/helpers/typeof');
require('vue');
require('@popperjs/core');
require('../utils/classnames.js');
require('../utils/dom.js');
require('raf');
require('lodash/isString');
require('../utils/easing.js');
require('../utils/render-tnode.js');
require('lodash/isObject');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');
require('../_common/js/utils/set-style.js');
require('../popup/props.js');
require('../popup/container.js');
require('../utils/map-props.js');
require('../utils/withInstall.js');
require('lodash/capitalize');
require('lodash/pick');
require('../input/index.js');
require('../input/addon.js');
require('../input/input.js');
require('@babel/runtime/helpers/toConsumableArray');
require('tdesign-icons-vue');
require('lodash/kebabCase');
require('../config-provider/config-receiver.js');
require('lodash/mergeWith');
require('../config-provider/zh_CN_config.js');
require('../utils/mixins.js');
require('../utils/event.js');
require('../input/props.js');
require('../input/input-group.js');
require('../loading/index.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/helper.js');
require('../utils/transfer-dom.js');
require('../loading/props.js');
require('../loading/plugin.js');
require('../hooks/tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('../hooks/useDefaultValue.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('../tag-input/index.js');
require('../tag-input/tag-input.js');
require('../tag-input/props.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/tag.js');
require('../tag/props.js');
require('../tag/check-tag.js');
require('../tag/check-tag-props.js');
require('../hooks/useVModel.js');
require('../tag-input/useHover.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BASE_CLASS_BORDERLESS = "".concat(config.prefix, "-select-input--borderless");
var BASE_CLASS_MULTIPLE = "".concat(config.prefix, "-select-input--multiple");
var BASE_CLASS_POPUP_VISIBLE = "".concat(config.prefix, "-select-input--popup-visible");
var BASE_CLASS_EMPTY = "".concat(config.prefix, "-select-input--empty");
var _SelectInput = VueCompositionAPI.defineComponent({
  name: "TSelectInput",
  props: _objectSpread({}, selectInput_props["default"]),
  setup: function setup(props2, context) {
    var selectInputRef = VueCompositionAPI.ref();
    var selectInputWrapRef = VueCompositionAPI.ref();

    var _toRefs = VueCompositionAPI.toRefs(props2),
        multiple = _toRefs.multiple,
        value = _toRefs.value,
        popupVisible = _toRefs.popupVisible,
        borderless = _toRefs.borderless;

    var _useSingle = selectInput_useSingle["default"](props2, context),
        commonInputProps = _useSingle.commonInputProps,
        onInnerClear = _useSingle.onInnerClear,
        renderSelectSingle = _useSingle.renderSelectSingle;

    var _useMultiple = selectInput_useMultiple["default"](props2, context),
        renderSelectMultiple = _useMultiple.renderSelectMultiple;

    var _useOverlayStyle = selectInput_useOverlayStyle["default"](props2),
        tOverlayStyle = _useOverlayStyle.tOverlayStyle,
        innerPopupVisible = _useOverlayStyle.innerPopupVisible,
        onInnerPopupVisibleChange = _useOverlayStyle.onInnerPopupVisibleChange;

    var popupClasses = VueCompositionAPI.computed(function () {
      var _popupVisible$value, _ref;

      return [(_ref = {}, _defineProperty__default["default"](_ref, BASE_CLASS_BORDERLESS, borderless.value), _defineProperty__default["default"](_ref, BASE_CLASS_MULTIPLE, multiple.value), _defineProperty__default["default"](_ref, BASE_CLASS_POPUP_VISIBLE, (_popupVisible$value = popupVisible.value) !== null && _popupVisible$value !== void 0 ? _popupVisible$value : innerPopupVisible.value), _defineProperty__default["default"](_ref, BASE_CLASS_EMPTY, value.value instanceof Array ? !value.value.length : !value.value), _ref)];
    });
    return {
      selectInputWrapRef: selectInputWrapRef,
      innerPopupVisible: innerPopupVisible,
      commonInputProps: commonInputProps,
      tOverlayStyle: tOverlayStyle,
      selectInputRef: selectInputRef,
      popupClasses: popupClasses,
      onInnerClear: onInnerClear,
      renderSelectSingle: renderSelectSingle,
      renderSelectMultiple: renderSelectMultiple,
      onInnerPopupVisibleChange: onInnerPopupVisibleChange
    };
  },
  render: function render(h) {
    var _this$popupVisible, _this$popupProps, _this$popupVisible2;

    var visibleProps = {
      visible: (_this$popupVisible = this.popupVisible) !== null && _this$popupVisible !== void 0 ? _this$popupVisible : this.innerPopupVisible
    };
    var mainContent = h(popup_index.Popup, helper.helper([{
      "ref": "selectInputRef",
      "class": this.popupClasses,
      "attrs": {
        "trigger": ((_this$popupProps = this.popupProps) === null || _this$popupProps === void 0 ? void 0 : _this$popupProps.trigger) || "click",
        "placement": "bottom-left",
        "visible": (_this$popupVisible2 = this.popupVisible) !== null && _this$popupVisible2 !== void 0 ? _this$popupVisible2 : this.innerPopupVisible,
        "content": this.panel,
        "hideEmptyPopup": true
      },
      "scopedSlots": _objectSpread(_objectSpread({}, this.$scopedSlots), {}, {
        content: this.$scopedSlots.panel
      })
    }, {
      "on": {
        "visible-change": this.onInnerPopupVisibleChange
      }
    }, {}, {
      "props": _objectSpread(_objectSpread({}, this.popupProps), {}, {
        overlayStyle: this.tOverlayStyle
      })
    }]), [this.multiple ? this.renderSelectMultiple({
      commonInputProps: this.commonInputProps,
      onInnerClear: this.onInnerClear,
      popupVisible: visibleProps.visible
    }, h) : this.renderSelectSingle(h, visibleProps.visible)]);
    if (!this.tips) return mainContent;
    return h("div", {
      "ref": "selectInputWrapRef",
      "class": "".concat(config.prefix, "-select-input__wrap")
    }, [mainContent, h("div", {
      "class": "".concat(config.prefix, "-input__tips ").concat(config.prefix, "-input__tips--").concat(this.status || "normal")
    }, [this.tips])]);
  }
});

exports["default"] = _SelectInput;
//# sourceMappingURL=select-input.js.map
