import Vue from 'vue';
import { CascaderConfig } from '../../config-provider/config-receiver';
import { TreeNode, CascaderContextType, CascaderPanelProps } from '../interface';
declare const _default: import("vue/types/vue").ExtendedVue<{
    t<T>(pattern: T, placement?: import("../../config-provider/config-receiver").Placement): string;
} & {
    global: CascaderConfig;
} & Record<never, any> & import("../../config-provider/config-receiver").ConfigComponent & CascaderPanelProps & Vue, unknown, unknown, {
    panels: TreeNode[][];
}, {
    empty: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    trigger: "click" | "hover";
    onChange: (value: import("../type").CascaderValue<import("../../common").TreeOptionData>, context: import("../type").CascaderChangeContext<import("../../common").TreeOptionData>) => void;
    cascaderContext: CascaderContextType;
}>;
export default _default;
