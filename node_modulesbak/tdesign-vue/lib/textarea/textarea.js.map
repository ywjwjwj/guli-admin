{"version":3,"file":"textarea.js","sources":["../../src/textarea/textarea.tsx"],"sourcesContent":["import Vue from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { prefix } from '../config';\nimport CLASSNAMES from '../utils/classnames';\nimport props from './props';\nimport { TextareaValue } from './type';\nimport { getPropsApiByEvent, getCharacterLength } from '../utils/helper';\nimport calcTextareaHeight from './calcTextareaHeight';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { ClassName } from '../common';\n\nconst name = `${prefix}-textarea`;\nconst TEXTAREA_TIPS_CLASS = `${prefix}-textarea__tips`;\nconst TEXTAREA_LIMIT = `${name}__limit`;\n\nfunction getValidAttrs(obj: object): object {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\nexport default Vue.extend({\n  name: 'TTextarea',\n  props: {\n    ...props,\n  },\n  data() {\n    return {\n      formDisabled: undefined,\n      focused: false,\n      mouseHover: false,\n      textareaStyle: {},\n    };\n  },\n\n  computed: {\n    tDisabled(): boolean {\n      return this.formDisabled || this.disabled;\n    },\n    textareaClasses(): ClassName {\n      return [\n        name,\n        {\n          [`${prefix}-is-disabled`]: this.tDisabled,\n          [`${prefix}-is-readonly`]: this.readonly,\n        },\n      ];\n    },\n    inputAttrs(): Record<string, any> {\n      return getValidAttrs({\n        autofocus: this.autofocus,\n        disabled: this.tDisabled,\n        readonly: this.readonly,\n        placeholder: this.placeholder,\n        maxlength: this.maxlength || undefined,\n        name: this.name || undefined,\n        unselectable: this.readonly ? 'on' : 'off',\n      });\n    },\n    characterNumber(): number {\n      const characterInfo = getCharacterLength(String(this.value || ''));\n      if (typeof characterInfo === 'object') {\n        return characterInfo.length;\n      }\n      return characterInfo;\n    },\n  },\n  mounted() {\n    this.adjustTextareaHeight();\n  },\n\n  methods: {\n    adjustTextareaHeight() {\n      if (this.autosize === true) {\n        this.textareaStyle = calcTextareaHeight(this.$refs.refTextareaElem as HTMLTextAreaElement);\n      } else if (typeof this.autosize === 'object') {\n        this.textareaStyle = calcTextareaHeight(\n          this.$refs.refTextareaElem as HTMLTextAreaElement,\n          this.autosize?.minRows,\n          this.autosize?.maxRows,\n        );\n      } else if (this.$attrs.rows) {\n        this.textareaStyle = { height: 'auto', minHeight: 'auto' };\n      }\n    },\n\n    emitEvent(name: string, value: string | number, context: object) {\n      this.$emit(name, value, context);\n      const handleName = getPropsApiByEvent(name);\n      isFunction(this[handleName]) && this[handleName](value, context);\n    },\n\n    focus(): void {\n      const input = this.$refs.refTextareaElem as HTMLInputElement;\n      input?.focus();\n    },\n    blur(): void {\n      const input = this.$refs.refTextareaElem as HTMLInputElement;\n      input?.blur();\n    },\n    handleInput(e: any): void {\n      if (e.isComposing || e.inputType === 'insertCompositionText') return;\n      this.inputValueChangeHandle(e);\n    },\n    onCompositionend(e: InputEvent) {\n      this.inputValueChangeHandle(e);\n    },\n    inputValueChangeHandle(e: InputEvent) {\n      const { target } = e;\n      let val = (target as HTMLInputElement).value;\n      if (this.maxcharacter && this.maxcharacter >= 0) {\n        const stringInfo = getCharacterLength(val, this.maxcharacter);\n        val = typeof stringInfo === 'object' && stringInfo.characters;\n      }\n      this.$emit('input', val);\n      this.emitEvent('change', val, { e });\n\n      this.$nextTick(() => this.setInputValue(val));\n      this.adjustTextareaHeight();\n    },\n\n    setInputValue(v: TextareaValue = ''): void {\n      const textareaElem = this.$refs.refTextareaElem as HTMLInputElement;\n      const sV = String(v);\n      if (!textareaElem) {\n        return;\n      }\n      if (textareaElem.value !== sV) {\n        textareaElem.value = sV;\n      }\n    },\n    emitKeyDown(e: KeyboardEvent) {\n      if (this.tDisabled) return;\n      this.emitEvent('keydown', this.value, { e });\n    },\n    emitKeyUp(e: KeyboardEvent) {\n      if (this.tDisabled) return;\n      this.emitEvent('keyup', this.value, { e });\n    },\n    emitKeypress(e: KeyboardEvent) {\n      if (this.tDisabled) return;\n      this.emitEvent('keypress', this.value, { e });\n    },\n    emitFocus(e: FocusEvent) {\n      if (this.tDisabled) return;\n      this.focused = true;\n      this.emitEvent('focus', this.value, { e });\n    },\n    emitBlur(e: FocusEvent) {\n      this.focused = false;\n      this.emitEvent('blur', this.value, { e });\n    },\n  },\n\n  render() {\n    const inputEvents = getValidAttrs({\n      focus: this.emitFocus,\n      blur: this.emitBlur,\n      keydown: this.emitKeyDown,\n      keyup: this.emitKeyUp,\n      keypress: this.emitKeypress,\n    });\n    const classes = [\n      `${name}__inner`,\n      {\n        [`${prefix}-is-${this.status}`]: this.status,\n        [CLASSNAMES.STATUS.disabled]: this.tDisabled,\n        [CLASSNAMES.STATUS.focused]: this.focused,\n        [`${prefix}-resize-none`]: typeof this.autosize === 'object',\n      },\n    ];\n    const tips = renderTNodeJSX(this, 'tips');\n    return (\n      <div class={this.textareaClasses}>\n        <textarea\n          onInput={this.handleInput}\n          onCompositionend={this.onCompositionend}\n          {...{ attrs: { ...this.$attrs, ...this.inputAttrs }, on: inputEvents }}\n          value={this.value}\n          class={classes}\n          style={this.textareaStyle}\n          ref=\"refTextareaElem\"\n        ></textarea>\n        {this.maxcharacter && <span class={TEXTAREA_LIMIT}>{`${this.characterNumber}/${this.maxcharacter}`}</span>}\n        {!this.maxcharacter && this.maxlength ? (\n          <span class={TEXTAREA_LIMIT}>{`${this.value ? String(this.value)?.length : 0}/${this.maxlength}`}</span>\n        ) : null}\n        {tips && (\n          <div class={`${TEXTAREA_TIPS_CLASS} ${prefix}-textarea__tips--${this.status || 'normal'}`}>{tips}</div>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","TEXTAREA_TIPS_CLASS","TEXTAREA_LIMIT","getValidAttrs","obj","newObj","Object","keys","forEach","key","Vue","extend","props","data","formDisabled","focused","mouseHover","textareaStyle","computed","tDisabled","disabled","textareaClasses","_defineProperty","readonly","inputAttrs","autofocus","placeholder","maxlength","unselectable","characterNumber","characterInfo","getCharacterLength","String","value","_typeof","length","mounted","adjustTextareaHeight","methods","autosize","calcTextareaHeight","$refs","refTextareaElem","minRows","maxRows","$attrs","rows","height","minHeight","emitEvent","name2","context","$emit","handleName","getPropsApiByEvent","isFunction","focus","input","blur","handleInput","e","isComposing","inputType","inputValueChangeHandle","onCompositionend","target","val","maxcharacter","stringInfo","characters","$nextTick","setInputValue","v","textareaElem","sV","emitKeyDown","emitKeyUp","emitKeypress","emitFocus","emitBlur","render","inputEvents","keydown","keyup","keypress","classes","status","CLASSNAMES","STATUS","tips","renderTNodeJSX"],"mappings":"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"}