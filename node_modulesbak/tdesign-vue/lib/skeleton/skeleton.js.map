{"version":3,"file":"skeleton.js","sources":["../../src/skeleton/skeleton.tsx"],"sourcesContent":["import Vue from 'vue';\nimport isNumber from 'lodash/isNumber';\nimport { prefix } from '../config';\nimport { renderContent } from '../utils/render-tnode';\nimport props from './props';\nimport { SkeletonRowCol, SkeletonRowColObj, TdSkeletonProps } from './type';\nimport { ClassName, Styles } from '../common';\n\nconst name = `${prefix}-skeleton`;\n\nconst ThemeMap: Record<TdSkeletonProps['theme'], SkeletonRowCol> = {\n  text: [1],\n  avatar: [{ type: 'circle', size: '56px' }],\n  paragraph: [1, 1, { width: '70%' }],\n  'avatar-text': [[{ type: 'circle' }, { type: 'text', height: '32px' }]],\n  tab: [{ height: '30px' }, { height: '200px' }],\n  article: [\n    { type: 'rect', height: '30px', width: '100%' },\n    { type: 'rect', height: '200px', width: '100%' },\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n  ],\n};\n\nexport default Vue.extend({\n  name: 'TSkeleton',\n\n  props: { ...props },\n\n  data() {\n    return {};\n  },\n\n  methods: {\n    renderCols(_cols: Number | SkeletonRowColObj | Array<SkeletonRowColObj>) {\n      const getColItemClass = (obj: SkeletonRowColObj): ClassName => [\n        `${name}__col`,\n        `${name}--type-${obj.type || 'text'}`,\n        { [`${name}--animation-${this.animation}`]: this.animation },\n      ];\n\n      const getColItemStyle = (obj: SkeletonRowColObj): Styles => {\n        const styleName = [\n          'width',\n          'height',\n          'marginRight',\n          'marginLeft',\n          'margin',\n          'size',\n          'background',\n          'backgroundColor',\n        ];\n        const style: Styles = {};\n        styleName.forEach((name) => {\n          if (name in obj) {\n            const px = isNumber(obj[name]) ? `${obj[name]}px` : obj[name];\n            if (name === 'size') {\n              [style.width, style.height] = [px, px];\n            } else {\n              style[name] = px;\n            }\n          }\n        });\n        return style;\n      };\n\n      let cols: Array<SkeletonRowColObj> = [];\n      if (Array.isArray(_cols)) {\n        cols = _cols;\n      } else if (isNumber(_cols)) {\n        cols = new Array(_cols).fill({ type: 'text' });\n      } else {\n        cols = [_cols as SkeletonRowColObj];\n      }\n\n      return cols.map((obj) => (\n        <div class={getColItemClass(obj)} style={getColItemStyle(obj)}>\n          {typeof obj.content === 'function' ? obj.content(this.$createElement) : obj.content}\n        </div>\n      ));\n    },\n\n    renderRowCol(_rowCol?: SkeletonRowCol) {\n      const rowCol: SkeletonRowCol = _rowCol || this.rowCol;\n\n      const getBlockClass = (): ClassName => [`${name}__row`];\n\n      return rowCol.map((item) => <div class={getBlockClass()}>{this.renderCols(item)}</div>);\n    },\n  },\n\n  render() {\n    const content = renderContent(this, 'default', 'content');\n\n    if (this.$scopedSlots.default && !this.loading) {\n      return <div>{content}</div>;\n    }\n    if (!this.loading) {\n      return;\n    }\n\n    const children = [];\n    if (this.theme) {\n      children.push(this.renderRowCol(ThemeMap[this.theme]));\n    }\n    if (this.rowCol) {\n      children.push(this.renderRowCol(this.rowCol));\n    }\n    if (!this.theme && !this.rowCol) {\n      // 什么都不传时，传入默认 rowCol\n      children.push(this.renderRowCol([1, 1, 1, { width: '70%' }]));\n    }\n\n    return <div class={name}>{children}</div>;\n  },\n});\n"],"names":["name","prefix","ThemeMap","text","avatar","type","size","paragraph","width","height","tab","article","Vue","extend","props","data","methods","renderCols","_cols","getColItemClass","obj","animation","getColItemStyle","styleName","style","forEach","name2","px","isNumber","cols","Array","isArray","fill","map","content","$createElement","renderRowCol","_rowCol","rowCol","getBlockClass","item","render","renderContent","$scopedSlots","loading","children","theme","push"],"mappings":"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"}