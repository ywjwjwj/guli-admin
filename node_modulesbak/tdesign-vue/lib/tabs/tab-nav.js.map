{"version":3,"file":"tab-nav.js","sources":["../../src/tabs/tab-nav.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport debounce from 'lodash/debounce';\nimport { ChevronLeftIcon, ChevronRightIcon, AddIcon } from 'tdesign-icons-vue';\nimport { prefix } from '../config';\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport { emitEvent } from '../utils/event';\nimport { firstUpperCase } from '../utils/helper';\nimport { TdTabsProps, TdTabPanelProps } from './type';\nimport tabProps from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { TabPanelProps } from '.';\n\nconst getDomWidth = (dom: HTMLElement): number => dom?.offsetWidth || 0;\n\nconst getActiveTabEl = (navs: Array<VNode>, value: TabPanelProps['value']): HTMLElement => {\n  for (let i = 0; i < navs.length; i++) {\n    if ((navs[i].componentOptions.propsData as TdTabPanelProps).value === value) {\n      return navs[i].componentInstance?.$el as HTMLElement;\n    }\n  }\n  return null;\n};\n\ninterface GetLeftCoverWidth {\n  leftZone: HTMLElement;\n  leftIcon: HTMLElement;\n  totalWidthBeforeActiveTab: number;\n}\n\ninterface GetRightCoverWidth {\n  rightZone: HTMLElement;\n  rightIcon: HTMLElement;\n  wrap: HTMLElement;\n  totalWidthBeforeActiveTab: number;\n  activeTabWidth: number;\n}\n\n// 如果要当前tab左边对齐左操作栏的右边以展示完整的tab，需要获取左边操作栏的宽度\nconst getLeftCoverWidth = (o: GetLeftCoverWidth) => {\n  const leftOperationsZoneWidth = getDomWidth(o.leftZone);\n  const leftIconWidth = getDomWidth(o.leftIcon);\n  // 判断当前tab是不是第一个tab\n  if (o.totalWidthBeforeActiveTab === 0) {\n    // 如果是第一个tab要移动到最左边，则要减去左箭头的宽度，因为此时左箭头会被隐藏起来\n    return leftOperationsZoneWidth - leftIconWidth;\n  }\n  return leftOperationsZoneWidth;\n};\n\n// 如果要当前tab右边对齐右操作栏的左边以展示完整的tab，需要获取右边操作栏的宽度\nconst getRightCoverWidth = (o: GetRightCoverWidth) => {\n  const rightOperationsZoneWidth = getDomWidth(o.rightZone);\n  const rightIconWidth = getDomWidth(o.rightIcon as HTMLElement);\n  const wrapWidth = getDomWidth(o.wrap);\n  // 判断当前tab是不是最后一个tab，小于1是防止小数像素导致值不相等的情况\n  if (Math.abs(o.totalWidthBeforeActiveTab + o.activeTabWidth - wrapWidth) < 1) {\n    // 如果是最后一个tab，则要减去右箭头的宽度，因为此时右箭头会被隐藏\n    return rightOperationsZoneWidth - rightIconWidth;\n  }\n  return rightOperationsZoneWidth;\n};\n\nexport default Vue.extend({\n  name: 'TTabNav',\n  components: {\n    TTabNavItem,\n    ChevronLeftIcon,\n    ChevronRightIcon,\n    AddIcon,\n  },\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    value: tabProps.value,\n    placement: tabProps.placement,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n  },\n  data() {\n    return {\n      scrollLeft: 0,\n      canToLeft: false,\n      canToRight: false,\n      navBarStyle: {},\n    };\n  },\n  computed: {\n    navs(): Array<VNode> {\n      return this.panels.map((panel, index) => (\n        <TTabNavItem\n          ref={`tabItem${index}`}\n          key={panel.value}\n          index={index}\n          theme={this.theme}\n          size={this.size}\n          placement={this.placement}\n          label={renderTNodeJSX(panel, 'label', `选项卡${index + 1}`)}\n          active={panel.value === this.value}\n          disabled={this.disabled || panel.disabled}\n          removable={panel.removable}\n          value={panel.value}\n          onClick={(e: MouseEvent) => this.tabClick(e, panel)}\n          onRemove={this.removeBtnClick}\n        ></TTabNavItem>\n      ));\n    },\n    wrapTransformStyle(): { [key: string]: string } {\n      if (['left', 'right'].includes(this.placement.toLowerCase())) return {};\n      return {\n        transform: `translate(${-this.scrollLeft}px, 0)`,\n      };\n    },\n    dataCanUpdateNavBarStyle(): Array<any> {\n      return [this.scrollLeft, this.placement, this.theme, this.navs, this.value];\n    },\n    dataCanUpdateArrow(): Array<any> {\n      return [this.scrollLeft, this.placement, this.navs];\n    },\n    iconBaseClass(): { [key: string]: boolean } {\n      return {\n        [`${prefix}-tabs__btn`]: true,\n        [`${prefix}-size-m`]: this.size === 'medium',\n        [`${prefix}-size-l`]: this.size === 'large',\n      };\n    },\n    leftIconClass(): { [key: string]: boolean } {\n      return {\n        [`${prefix}-tabs__btn--left`]: true,\n        ...this.iconBaseClass,\n      };\n    },\n    rightIconClass(): { [key: string]: boolean } {\n      return {\n        [`${prefix}-tabs__btn--right`]: true,\n        ...this.iconBaseClass,\n      };\n    },\n    addIconClass(): { [key: string]: boolean } {\n      return {\n        [`${prefix}-tabs__add-btn`]: true,\n        ...this.iconBaseClass,\n      };\n    },\n    navContainerClass(): { [key: string]: boolean } {\n      return {\n        [`${prefix}-tabs__nav-container`]: true,\n        [`${prefix}-tabs__nav--card`]: this.theme === 'card',\n        [`${prefix}-is-${this.placement}`]: true,\n        [`${prefix}-is-addable`]: this.theme === 'card' && this.addable,\n      };\n    },\n    navScrollContainerClass(): { [key: string]: boolean } {\n      return {\n        [`${prefix}-tabs__nav-scroll`]: true,\n        [`${prefix}-is-scrollable`]: this.canToLeft || this.canToRight,\n      };\n    },\n    navsWrapClass(): Array<string | { [key: string]: boolean }> {\n      return [\n        `${prefix}-tabs__nav-wrap`,\n        `${prefix}-is-smooth`,\n        { [`${prefix}-is-vertical`]: this.placement === 'left' || this.placement === 'right' },\n      ];\n    },\n    navBarClass(): Array<string> {\n      return [`${prefix}-tabs__bar`, `${prefix}-is-${this.placement}`];\n    },\n    navsContainerStyle(): object {\n      return this.addable ? { 'min-height': '48px' } : null;\n    },\n  },\n  watch: {\n    dataCanUpdateArrow() {\n      this.$nextTick(() => {\n        this.calculateCanShowArrow();\n      });\n    },\n    dataCanUpdateNavBarStyle() {\n      this.$nextTick(() => {\n        this.calculateNavBarStyle();\n      });\n    },\n    value() {\n      this.$nextTick(() => {\n        this.moveActiveTabIntoView();\n      });\n    },\n    navs() {\n      this.$nextTick(() => {\n        this.fixScrollLeft();\n      });\n    },\n  },\n  methods: {\n    calculateCanShowArrow() {\n      this.calculateCanToLeft();\n      this.calculateCanToRight();\n    },\n\n    calculateCanToLeft() {\n      if (['left', 'right'].includes(this.placement.toLowerCase())) {\n        this.canToLeft = false;\n      }\n      const container = this.$refs.navsContainer as HTMLElement;\n      const wrap = this.$refs.navsWrap as HTMLElement;\n      if (!wrap || !container) {\n        this.canToLeft = false;\n      }\n      const leftOperationsZoneWidth = getDomWidth(this.$refs.leftOperationsZone as HTMLElement);\n      const leftIconWidth = getDomWidth(this.$refs.leftIcon as HTMLElement);\n      this.canToLeft = this.scrollLeft + Math.round(leftOperationsZoneWidth - leftIconWidth) > 0;\n    },\n\n    calculateCanToRight() {\n      if (['left', 'right'].includes(this.placement.toLowerCase())) {\n        this.canToRight = false;\n      }\n      const container = this.$refs.navsContainer as HTMLElement;\n      const wrap = this.$refs.navsWrap as HTMLElement;\n      if (!wrap || !container) {\n        this.canToRight = false;\n      }\n      const rightOperationsZoneWidth = getDomWidth(this.$refs.rightOperationsZone as HTMLElement);\n      const rightIconWidth = getDomWidth(this.$refs.rightIcon as HTMLElement);\n      this.canToRight = this.scrollLeft + getDomWidth(container) - (rightOperationsZoneWidth - rightIconWidth) - getDomWidth(wrap) < -1; // 小数像素不精确，所以这里判断小于-1\n    },\n\n    calculateNavBarStyle() {\n      const getNavBarStyle = () => {\n        if (this.theme === 'card') return {};\n        const getPropName = () => {\n          if (['left', 'right'].includes(this.placement.toLowerCase())) {\n            return ['height', 'top'];\n          }\n          return ['width', 'left'];\n        };\n        let offset = 0;\n        const [sizePropName, offsetPropName] = getPropName();\n        let i = 0;\n        for (; i < this.navs.length; i++) {\n          if ((this.navs[i].componentInstance as InstanceType<typeof TTabPanel>)?.value === this.value) {\n            break;\n          }\n          offset += this.navs[i].componentInstance?.$el?.[`client${firstUpperCase(sizePropName)}`] || 0;\n        }\n        if (!this.navs[i]) return {};\n        return {\n          [offsetPropName]: `${offset}px`,\n          [sizePropName]: `${this.navs[i].componentInstance?.$el?.[`client${firstUpperCase(sizePropName)}`] || 0}px`,\n        };\n      };\n      this.navBarStyle = getNavBarStyle();\n    },\n\n    watchDomChange() {\n      const onResize = debounce(() => {\n        this.resetScrollPosition();\n      }, 300);\n      window.addEventListener('resize', onResize);\n      this.$once('beforeDestroy', () => {\n        window.removeEventListener('resize', onResize);\n      });\n      if (!this.$refs.navsContainer) return;\n      if (!(window as Window & { ResizeObserver?: any }).ResizeObserver) return;\n      const resizeObserver = new (window as Window & { ResizeObserver?: any }).ResizeObserver(onResize);\n      resizeObserver.observe(this.$refs.navsContainer);\n      this.$once('beforeDestroy', () => {\n        resizeObserver.disconnect();\n      });\n    },\n\n    resetScrollPosition() {\n      this.fixScrollLeft();\n      this.calculateCanShowArrow();\n    },\n\n    handleScrollToLeft() {\n      const container = this.$refs.navsContainer as HTMLElement;\n      if (!container) return;\n      const leftOperationsZoneWidth = getDomWidth(this.$refs.leftOperationsZone as HTMLElement);\n      const leftIconWidth = getDomWidth(this.$refs.leftIcon as HTMLElement);\n      const containerWidth = getDomWidth(container);\n      this.scrollLeft = Math.max(-(leftOperationsZoneWidth - leftIconWidth), this.scrollLeft - containerWidth);\n    },\n\n    handleScrollToRight() {\n      const container = this.$refs.navsContainer as HTMLElement;\n      const wrap = this.$refs.navsWrap as HTMLElement;\n      const rightOperationsZoneWidth = getDomWidth(this.$refs.rightOperationsZone as HTMLElement);\n      const rightIconWidth = getDomWidth(this.$refs.rightIcon as HTMLElement);\n      const containerWidth = getDomWidth(container);\n      const wrapWidth = getDomWidth(wrap);\n      this.scrollLeft = Math.min(\n        this.scrollLeft + containerWidth,\n        wrapWidth - containerWidth + rightOperationsZoneWidth - rightIconWidth,\n      );\n    },\n\n    shouldMoveToLeftSide(activeTabEl: HTMLElement) {\n      const totalWidthBeforeActiveTab = activeTabEl.offsetLeft;\n      const container = this.$refs.navsContainer as HTMLElement;\n      if (!container) return;\n      const leftCoverWidth = getLeftCoverWidth({\n        leftZone: this.$refs.leftOperationsZone as HTMLElement,\n        leftIcon: this.$refs.leftIcon as HTMLElement,\n        totalWidthBeforeActiveTab,\n      });\n      // 判断当前tab是不是在左边被隐藏\n      const isCurrentTabHiddenInLeftZone = () => this.scrollLeft + leftCoverWidth > totalWidthBeforeActiveTab;\n      if (isCurrentTabHiddenInLeftZone()) {\n        this.scrollLeft = totalWidthBeforeActiveTab - leftCoverWidth;\n        return true;\n      }\n      return false;\n    },\n\n    shouldMoveToRightSide(activeTabEl: HTMLElement) {\n      const totalWidthBeforeActiveTab = activeTabEl.offsetLeft;\n      const activeTabWidth = activeTabEl.offsetWidth;\n      const container = this.$refs.navsContainer as HTMLElement;\n      const wrap = this.$refs.navsWrap as HTMLElement;\n      if (!container || !wrap) return;\n      const containerWidth = getDomWidth(container);\n      const rightCoverWidth = getRightCoverWidth({\n        rightZone: this.$refs.rightOperationsZone as HTMLElement,\n        rightIcon: this.$refs.rightIcon as HTMLElement,\n        wrap,\n        totalWidthBeforeActiveTab,\n        activeTabWidth,\n      });\n      // 判断当前tab是不是在右边被隐藏\n      const isCurrentTabHiddenInRightZone = () => this.scrollLeft + containerWidth - rightCoverWidth < totalWidthBeforeActiveTab + activeTabWidth;\n      if (isCurrentTabHiddenInRightZone()) {\n        this.scrollLeft = totalWidthBeforeActiveTab + activeTabWidth - containerWidth + rightCoverWidth;\n        return true;\n      }\n      return false;\n    },\n\n    moveActiveTabIntoView({ needCheckUpdate } = { needCheckUpdate: true }) {\n      if (['left', 'right'].includes(this.placement)) {\n        return false;\n      }\n      const activeTabEl: HTMLElement = getActiveTabEl(this.navs, this.value);\n      if (!activeTabEl) {\n        // 如果没有当前 value 对应的tab，一种情况是真没有；一种情况是在修改value的同时，新增了一个值为该value的tab。后者因为navs的更新在$nextTick之后，所以得等下一个updated才能拿到新的tab\n        if (needCheckUpdate) {\n          this.$once('hook:updated', () => {\n            this.moveActiveTabIntoView({ needCheckUpdate: false });\n          });\n        }\n        return false;\n      }\n      return this.shouldMoveToLeftSide(activeTabEl) || this.shouldMoveToRightSide(activeTabEl);\n    },\n\n    fixIfLastItemNotTouchRightSide(containerWidth: number, wrapWidth: number) {\n      const rightOperationsZoneWidth = getDomWidth(this.$refs.rightOperationsZone as HTMLElement);\n      if (this.scrollLeft + containerWidth - rightOperationsZoneWidth > wrapWidth) {\n        this.scrollLeft = wrapWidth + rightOperationsZoneWidth - containerWidth;\n        return true;\n      }\n      return false;\n    },\n\n    fixIfItemTotalWidthIsLessThenContainerWidth(containerWidth: number, wrapWidth: number) {\n      if (wrapWidth <= containerWidth) {\n        this.scrollLeft = 0;\n        return true;\n      }\n      return false;\n    },\n\n    fixScrollLeft() {\n      if (['left', 'right'].includes(this.placement.toLowerCase())) return;\n      const container = this.$refs.navsContainer as HTMLElement;\n      const wrap = this.$refs.navsWrap as HTMLElement;\n      if (!wrap || !container) return false;\n      const containerWidth = getDomWidth(container);\n      const wrapWidth = getDomWidth(wrap);\n      return (\n        this.fixIfItemTotalWidthIsLessThenContainerWidth(containerWidth, wrapWidth)\n        || this.fixIfLastItemNotTouchRightSide(containerWidth, wrapWidth)\n      );\n    },\n\n    handleAddTab(e: MouseEvent) {\n      emitEvent<Parameters<TdTabsProps['onAdd']>>(this, 'add', { e });\n    },\n\n    tabClick(event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) {\n      const { value, disabled } = nav;\n      if (disabled || this.value === value) {\n        return false;\n      }\n      emitEvent<Parameters<TdTabsProps['onChange']>>(this, 'change', value);\n    },\n\n    removeBtnClick({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) {\n      emitEvent<Parameters<TdTabsProps['onRemove']>>(this, 'remove', { e, value, index });\n    },\n\n    renderArrows() {\n      return [\n        <div ref=\"leftOperationsZone\" class={[`${prefix}-tabs__operations`, `${prefix}-tabs__operations--left`]}>\n          <transition name=\"fade\" mode=\"out-in\" appear>\n            {this.canToLeft ? (\n              <div ref=\"leftIcon\" class={this.leftIconClass} onClick={this.handleScrollToLeft}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </transition>\n        </div>,\n        <div ref=\"rightOperationsZone\" class={[`${prefix}-tabs__operations`, `${prefix}-tabs__operations--right`]}>\n          <transition name=\"fade\" mode=\"out-in\" appear>\n            {this.canToRight ? (\n              <div ref=\"rightIcon\" class={this.rightIconClass} onClick={this.handleScrollToRight}>\n                <ChevronRightIcon />\n              </div>\n            ) : null}\n          </transition>\n          {this.theme === 'card' && this.addable ? (\n            <div class={this.addIconClass} onClick={this.handleAddTab}>\n              <AddIcon />\n            </div>\n          ) : null}\n        </div>,\n      ];\n    },\n    renderNavs() {\n      return (\n        <div class={this.navContainerClass}>\n          <div class={this.navScrollContainerClass}>\n            <div ref=\"navsWrap\" class={this.navsWrapClass} style={this.wrapTransformStyle}>\n              {this.renderNavBar()}\n              {this.navs}\n            </div>\n          </div>\n        </div>\n      );\n    },\n    renderNavBar() {\n      if (this.theme === 'card') return null;\n      return <div class={this.navBarClass} style={this.navBarStyle}></div>;\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.watchDomChange();\n      this.calculateNavBarStyle();\n      this.calculateCanShowArrow();\n    });\n  },\n  render() {\n    return (\n      <div ref=\"navsContainer\" class={[`${prefix}-tabs__nav`]} style={this.navsContainerStyle}>\n        {this.renderArrows()}\n        {this.renderNavs()}\n      </div>\n    );\n  },\n});\n"],"names":["getDomWidth","dom","offsetWidth","getActiveTabEl","navs","value","i","length","componentOptions","propsData","componentInstance","$el","getLeftCoverWidth","o","leftOperationsZoneWidth","leftZone","leftIconWidth","leftIcon","totalWidthBeforeActiveTab","getRightCoverWidth","rightOperationsZoneWidth","rightZone","rightIconWidth","rightIcon","wrapWidth","wrap","Math","abs","activeTabWidth","Vue","extend","name","components","TTabNavItem","ChevronLeftIcon","ChevronRightIcon","AddIcon","props","theme","tabProps","panels","type","Array","placement","size","disabled","addable","data","scrollLeft","canToLeft","canToRight","navBarStyle","computed","map","panel","index","renderTNodeJSX","removable","e","tabClick","removeBtnClick","wrapTransformStyle","includes","toLowerCase","transform","dataCanUpdateNavBarStyle","dataCanUpdateArrow","iconBaseClass","_defineProperty","prefix","leftIconClass","rightIconClass","addIconClass","navContainerClass","navScrollContainerClass","navsWrapClass","navBarClass","navsContainerStyle","watch","$nextTick","calculateCanShowArrow","calculateNavBarStyle","moveActiveTabIntoView","fixScrollLeft","methods","calculateCanToLeft","calculateCanToRight","container","$refs","navsContainer","navsWrap","leftOperationsZone","round","rightOperationsZone","getNavBarStyle","getPropName","offset","_slicedToArray","sizePropName","offsetPropName","firstUpperCase","watchDomChange","onResize","debounce","resetScrollPosition","window","addEventListener","$once","removeEventListener","ResizeObserver","resizeObserver","observe","disconnect","handleScrollToLeft","containerWidth","max","handleScrollToRight","min","shouldMoveToLeftSide","activeTabEl","offsetLeft","leftCoverWidth","isCurrentTabHiddenInLeftZone","shouldMoveToRightSide","rightCoverWidth","isCurrentTabHiddenInRightZone","needCheckUpdate","fixIfLastItemNotTouchRightSide","fixIfItemTotalWidthIsLessThenContainerWidth","handleAddTab","emitEvent","event","nav","renderArrows","renderNavs","renderNavBar","mounted","render"],"mappings":"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"}