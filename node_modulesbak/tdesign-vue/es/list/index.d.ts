import { TdListProps, TdListItemProps, TdListItemMetaProps } from './type';
import './style';
export * from './type';
export declare type ListProps = TdListProps;
export declare type ListItemProps = TdListItemProps;
export declare type ListItemMetaProps = TdListItemMetaProps;
export declare const List: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    renderLoading(): any;
    handleScroll(e: Event | WheelEvent): void;
    handleLoadMore(e: MouseEvent): void;
    renderContent(): JSX.Element[];
}, {
    listClass: import("../common").ClassName;
    loadingClass: import("../common").ClassName;
}, {
    asyncLoading: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    footer: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    header: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    layout: "vertical" | "horizontal";
    size: "small" | "medium" | "large";
    split: boolean;
    stripe: boolean;
    onLoadMore: (options: {
        e: MouseEvent;
    }) => void;
    onScroll: (options: {
        e: Event | WheelEvent;
        scrollTop: number;
        scrollBottom: number;
    }) => void;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    renderLoading(): any;
    handleScroll(e: Event | WheelEvent): void;
    handleLoadMore(e: MouseEvent): void;
    renderContent(): JSX.Element[];
}, {
    listClass: import("../common").ClassName;
    loadingClass: import("../common").ClassName;
}, {
    asyncLoading: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    footer: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    header: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    layout: "vertical" | "horizontal";
    size: "small" | "medium" | "large";
    split: boolean;
    stripe: boolean;
    onLoadMore: (options: {
        e: MouseEvent;
    }) => void;
    onScroll: (options: {
        e: Event | WheelEvent;
        scrollTop: number;
        scrollBottom: number;
    }) => void;
}>>;
export declare const ListItem: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, unknown, {
    action: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, unknown, {
    action: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
}>>;
export declare const ListItemMeta: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    renderAvatar(): JSX.Element;
}, unknown, {
    avatar: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    description: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    image: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    renderAvatar(): JSX.Element;
}, unknown, {
    avatar: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    description: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    image: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
}>>;
