import Vue from 'vue';
import { ScopedSlotReturnValue } from 'vue/types/vnode';
import { SelectInstance } from './instance';
import { ClassName } from '../common';
export interface OptionInstance extends Vue {
    tSelect: SelectInstance;
}
declare const _default: import("vue/types/vue").ExtendedVue<{
    keepAnimation: {
        ripple: boolean;
        expand: boolean;
        fade: boolean;
    };
} & Record<never, any> & import("../config-provider/config-receiver").ConfigComponent & OptionInstance & Vue, {
    isHover: boolean;
    formDisabled: any;
}, {
    select(e: MouseEvent | KeyboardEvent): false;
    mouseEvent(v: boolean): void;
}, {
    tDisabled: boolean;
    hovering: boolean;
    multiLimitDisabled: boolean;
    classes: ClassName;
    isCreatedOption: boolean;
    show: boolean;
    labelText: string | number;
    selected: boolean;
}, {
    content: string | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    disabled: boolean;
    label: string;
    value: string | number;
}>;
export default _default;
