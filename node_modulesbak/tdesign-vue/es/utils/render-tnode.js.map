{"version":3,"file":"render-tnode.js","sources":["../../src/utils/render-tnode.ts"],"sourcesContent":["import Vue from 'vue';\nimport { ComponentRenderProxy } from '@vue/composition-api';\nimport {\n  PropType, CreateElement, VNode, VNodeChildren, RenderContext,\n} from 'vue/types/umd';\nimport { ScopedSlotReturnValue } from 'vue/types/vnode';\nimport isObject from 'lodash/isObject';\nimport { TNode } from '../common';\n\n// 组件render属性的ts类型\ntype RenderTsTypesSimple = string | number | boolean;\ntype RenderTsTypesObject = Record<string, any> | Array<any>;\ntype RenderTsTypes = VNode | VNodeChildren | TNode | RenderTsTypesSimple | RenderTsTypesObject;\n// 组件render属性的js类型\nconst RenderJsTypes = [Function, String, Number, Boolean, Object, Array];\n\n// 定义组件内容的渲染方式\nenum RenderWay {\n  Text = 'text',\n  JsonString = 'jsonstring',\n  VNode = 'vnode',\n  Unknown = 'unknown',\n}\n\nexport type VmType = Vue | ComponentRenderProxy;\n\n/**\n * 根据传入的值（对象），判断渲染该值（对象）的方式\n * @param value 传入的值（对象）\n */\nconst getValueRenderWay = (value: RenderTsTypes): RenderWay => {\n  // 简单类型\n  if (['string', 'number', 'boolean'].includes(typeof value)) return RenderWay.Text;\n  // 复杂对象\n  if (typeof value === 'object') {\n    // 虚拟dom对象\n    if (!(value instanceof Array) && value && value.context instanceof Vue) {\n      return RenderWay.VNode;\n    }\n    // 其他复杂对象或数组\n    return RenderWay.JsonString;\n  }\n  // 未知类型（兜底）\n  return RenderWay.Unknown;\n};\n\n// 通过template的方式渲染TNode\nexport const RenderTNodeTemplate = Vue.extend({\n  name: 'render-tnode-template',\n  functional: true,\n  props: {\n    render: RenderJsTypes as PropType<RenderTsTypes>,\n    params: null as PropType<any>,\n  },\n  render(h: CreateElement, ctx: RenderContext): VNode {\n    const { render, params } = ctx.props;\n    const renderResult = typeof render === 'function' ? render(h, params) : render;\n    const renderWay = getValueRenderWay(renderResult);\n\n    // @ts-ignore\n    const renderText = (c: RenderTsTypesSimple | RenderTsTypesObject) => ctx.__proto__._v(c);\n    const renderMap = {\n      [RenderWay.Text]: (c: RenderTsTypesSimple) => renderText(c),\n      [RenderWay.JsonString]: (c: RenderTsTypesObject) => renderText(JSON.stringify(c, null, 2)),\n      [RenderWay.VNode]: (c: VNode) => c,\n    };\n\n    return renderMap[renderWay] ? renderMap[renderWay](renderResult) : h();\n  },\n});\n\ninterface JSXRenderContext {\n  defaultNode?: VNode;\n  params?: Record<string, any>;\n  // 是否不打印 LOG\n  silent?: boolean;\n}\n\n/**\n * 通过JSX的方式渲染 TNode，props 和 插槽同时处理，也能处理默认值为 true 则渲染默认节点的情况\n * @param vm 组件实例\n * @param name 插槽和属性名称\n * @param options 值可能为默认渲染节点，也可能是默认渲染节点和参数的集合\n * @example renderTNodeJSX(this, 'closeBtn')  优先级 props function 大于 插槽\n * @example renderTNodeJSX(this, 'closeBtn', <t-icon-close />)。 当属性值为 true 时则渲染 <t-icon-close />\n * @example renderTNodeJSX(this, 'closeBtn', { defaultNode: <t-icon-close />, params })。 params 为渲染节点时所需的参数\n */\nexport const renderTNodeJSX = (vm: VmType, name: string, options?: ScopedSlotReturnValue | JSXRenderContext) => {\n  // 是否静默日志\n  const isSilent = Boolean(isObject(options) && 'silent' in options && options.silent);\n\n  if (vm.$scopedSlots[name] && vm[name] && vm[name] !== true && !isSilent) {\n    console.warn(`Both $scopedSlots.${name} and $props.${name} exist, $props.${name} is preferred`);\n  }\n  const params = typeof options === 'object' && 'params' in options ? options.params : null;\n  const defaultNode = typeof options === 'object' && 'defaultNode' in options ? options.defaultNode : options;\n  const propsNode = vm[name];\n  if (propsNode === false) return;\n  if (propsNode === true && defaultNode) {\n    return vm.$scopedSlots[name] ? vm.$scopedSlots[name](params) : defaultNode;\n  }\n  if (typeof propsNode === 'function') return propsNode(vm.$createElement, params);\n  const isPropsEmpty = [undefined, params, ''].includes(propsNode);\n  if (isPropsEmpty && vm.$scopedSlots[name]) return vm.$scopedSlots[name](params);\n  return propsNode;\n};\n\n/**\n * 通过JSX的方式渲染 TNode，props 和 插槽同时处理。与 renderTNodeJSX 区别在于 属性值为 undefined 时会渲染默认节点\n * @param vm 组件实例\n * @param name 插槽和属性名称\n * @example renderTNodeJSXDefault(this, 'closeBtn')\n * @example renderTNodeJSXDefault(this, 'closeBtn', <t-icon-close />)。this.closeBtn 为空时，则兜底渲染 <t-icon-close />\n * @example renderTNodeJSXDefault(this, 'closeBtn', { defaultNode: <t-icon-close />, params }) 。params 为渲染节点时所需的参数\n */\nexport const renderTNodeJSXDefault = (vm: VmType, name: string, options?: ScopedSlotReturnValue | JSXRenderContext) => {\n  const defaultNode = typeof options === 'object' && 'defaultNode' in options ? options.defaultNode : options;\n  return renderTNodeJSX(vm, name, options) || defaultNode;\n};\n\n/**\n * 用于处理相同名称的 TNode 渲染\n * @param vm 组件实例\n * @param name1 第一个名称，优先级高于 name2\n * @param name2 第二个名称\n * @param defaultNode 默认渲染内容：当 name1 和 name2 都为空时会启动默认内容渲染\n * @example renderContent(this, 'default', 'content')\n * @example renderContent(this, 'default', 'content', '我是默认内容')\n * @example renderContent(this, 'default', 'content', { defaultNode: '我是默认内容', params })\n */\nexport const renderContent = (vm: VmType, name1: string, name2: string, options?: VNode | JSXRenderContext) => {\n  const params = typeof options === 'object' && 'params' in options ? options.params : null;\n  let defaultNode = typeof options === 'object' && 'defaultNode' in options && options.defaultNode;\n  defaultNode = typeof options === 'object' && 'context' in options && options;\n  const toParams = params ? { params } : undefined;\n  const node1 = renderTNodeJSX(vm, name1, toParams);\n  const node2 = renderTNodeJSX(vm, name2, toParams);\n  const r = [undefined, null, ''].includes(node1) ? node2 : node1;\n  return [undefined, null, ''].includes(r) ? defaultNode : r;\n};\n"],"names":["RenderJsTypes","Function","String","Number","Boolean","Object","Array","RenderWay","RenderWay2","getValueRenderWay","value","includes","context","Vue","RenderTNodeTemplate","extend","name","functional","props","render","params","h","ctx","renderResult","renderWay","renderText","c","__proto__","_v","renderMap","JSON","stringify","renderTNodeJSX","vm","options","isSilent","isObject","silent","$scopedSlots","console","warn","defaultNode","propsNode","$createElement","isPropsEmpty","renderTNodeJSXDefault","renderContent","name1","name2","toParams","node1","node2","r"],"mappings":"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"}