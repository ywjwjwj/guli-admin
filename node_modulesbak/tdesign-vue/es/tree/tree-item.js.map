{"version":3,"file":"tree-item.js","sources":["../../src/tree/tree-item.tsx"],"sourcesContent":["import Vue, { VNode, CreateElement } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { CaretRightSmallIcon } from 'tdesign-icons-vue';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { TreeConfig, getKeepAnimationMixins } from '../config-provider/config-receiver';\nimport TCheckBox from '../checkbox';\nimport TLoading from '../loading';\nimport TreeNode from '../_common/js/tree/tree-node';\nimport { getTNode } from './util';\nimport { TypeEventState } from './interface';\nimport { TREE_NODE_NAME, CLASS_NAMES } from './constants';\nimport { ClassName } from '../common';\nimport ripple from '../utils/ripple';\n\nconst keepAnimationMixins = getKeepAnimationMixins();\n\nexport const TreeItemProps = {\n  node: {\n    type: TreeNode,\n  },\n  treeScope: {\n    type: Object,\n  },\n};\n\nexport default mixins(getConfigReceiverMixins<Vue, TreeConfig>('tree'), keepAnimationMixins).extend({\n  name: TREE_NODE_NAME,\n  props: TreeItemProps,\n  directives: { ripple },\n  data() {\n    return {\n      data: null,\n      clicked: false,\n    };\n  },\n  methods: {\n    getStyles(): string {\n      const { level } = this.node;\n      const styles = `--level: ${level};`;\n      return styles;\n    },\n    getClassList(): ClassName {\n      const { node } = this;\n      const list = [];\n      list.push(CLASS_NAMES.treeNode);\n      list.push({\n        [CLASS_NAMES.treeNodeOpen]: node.expanded,\n        [CLASS_NAMES.actived]: node.isActivable() ? node.actived : false,\n        [CLASS_NAMES.disabled]: node.isDisabled(),\n      });\n      if (node.visible) {\n        list.push(CLASS_NAMES.treeNodeVisible);\n      } else {\n        list.push(CLASS_NAMES.treeNodeHidden);\n      }\n      return list;\n    },\n    renderLine(createElement: CreateElement): VNode {\n      const { node, treeScope } = this;\n      const { line, scopedSlots } = treeScope;\n      const iconVisible = !!treeScope.icon;\n\n      let lineNode = null;\n      if (line === true) {\n        if (scopedSlots?.line) {\n          lineNode = scopedSlots.line({\n            node: node?.getModel(),\n          });\n        } else if (node.parent && node.tree) {\n          const { vmIsLeaf, vmIsFirst, level } = node;\n\n          const lineClasses = [];\n\n          // 每个节点绘制抵达上一层级的折线\n          lineClasses.push(CLASS_NAMES.line);\n\n          // 叶子节点，折线宽度延长，因为没有 icon 呈现\n          // 任意节点，icon 不呈现时也是要延长折线宽度\n          if (vmIsLeaf || !iconVisible) {\n            lineClasses.push(CLASS_NAMES.lineIsLeaf);\n          }\n\n          // 分支首节点，到上一节点的折线高度要缩短，让位给 icon 呈现\n          // 如果 icon 隐藏了，则不必缩短折线高度\n          if (vmIsFirst && iconVisible) {\n            lineClasses.push(CLASS_NAMES.lineIsFirst);\n          }\n\n          // 如果节点的父节点，不是最后的节点\n          // 则需要绘制节点延长线\n          const shadowStyles: string[] = [];\n          const parents = node.getParents();\n          parents.pop();\n          parents.forEach((pnode: TreeNode, index: number) => {\n            if (!pnode.vmIsLast) {\n              shadowStyles.push(`calc(-${index + 1} * var(--space)) 0 var(--color)`);\n            }\n          });\n\n          const styles = {\n            '--level': level ? String(level) : undefined,\n            'box-shadow': shadowStyles.join(','),\n          };\n\n          lineNode = <span class={lineClasses} style={styles}></span>;\n        }\n      } else {\n        lineNode = getTNode(line, {\n          createElement,\n          node,\n        });\n      }\n      return lineNode;\n    },\n    getFolderIcon() {\n      if (isFunction(this.global.folderIcon)) {\n        return this.global.folderIcon(this.$createElement);\n      }\n      return <CaretRightSmallIcon />;\n    },\n    renderIcon(createElement: CreateElement): VNode {\n      const { node, treeScope } = this;\n      const { icon, scopedSlots } = treeScope;\n      let isDefaultIcon = false;\n\n      let iconNode = null;\n      if (icon === true) {\n        if (scopedSlots?.icon) {\n          iconNode = scopedSlots.icon({\n            node: node?.getModel(),\n          });\n        } else if (!node.vmIsLeaf) {\n          isDefaultIcon = true;\n          iconNode = this.getFolderIcon();\n          if (node.loading && node.expanded) {\n            iconNode = <TLoading />;\n          }\n        } else {\n          iconNode = '';\n        }\n      } else {\n        iconNode = getTNode(icon, {\n          createElement,\n          node,\n        });\n      }\n\n      iconNode = (\n        <span\n          class={[CLASS_NAMES.treeIcon, CLASS_NAMES.folderIcon, isDefaultIcon ? CLASS_NAMES.treeIconDefault : '']}\n          trigger=\"expand\"\n          ignore=\"active\"\n        >\n          {iconNode}\n        </span>\n      );\n      return iconNode;\n    },\n    renderLabel(createElement: CreateElement): VNode {\n      const { node, treeScope } = this;\n      const { label, scopedSlots, disableCheck } = treeScope;\n      const checkProps = treeScope.checkProps || {};\n\n      let labelNode = null;\n      if (label === true) {\n        if (scopedSlots?.label) {\n          labelNode = scopedSlots.label({\n            node: node?.getModel(),\n          });\n        } else {\n          labelNode = node.label || '';\n        }\n      } else {\n        labelNode = getTNode(label, {\n          createElement,\n          node,\n        });\n      }\n\n      const labelClasses = [\n        CLASS_NAMES.treeLabel,\n        CLASS_NAMES.treeLabelStrictly,\n        {\n          [CLASS_NAMES.actived]: node.isActivable() ? node.actived : false,\n        },\n      ];\n\n      if (node.vmCheckable) {\n        let checkboxDisabled = false;\n        if (typeof disableCheck === 'function') {\n          checkboxDisabled = disableCheck(node);\n        } else {\n          checkboxDisabled = !!disableCheck;\n        }\n        if (node.isDisabled()) {\n          checkboxDisabled = true;\n        }\n        const itemCheckProps = {\n          ...checkProps,\n          disabled: checkboxDisabled,\n        };\n\n        labelNode = (\n          <TCheckBox\n            v-ripple={this.keepAnimation.ripple}\n            class={labelClasses}\n            checked={node.checked}\n            indeterminate={node.indeterminate}\n            disabled={node.isDisabled()}\n            name={String(node.value)}\n            onChange={() => this.handleChange()}\n            ignore=\"expand,active\"\n            {...{ props: itemCheckProps }}\n          >\n            {labelNode}\n          </TCheckBox>\n        );\n      } else {\n        const inner = <span style=\"position: relative\">{labelNode}</span>;\n        labelNode = node.isActivable() ? ( // 使用key是为了避免元素复用，从而顺利移除ripple指令\n          <span key=\"1\" v-ripple={this.keepAnimation.ripple} class={labelClasses}>\n            {inner}\n          </span>\n        ) : (\n          <span key=\"2\" class={labelClasses}>\n            {inner}\n          </span>\n        );\n      }\n\n      return labelNode;\n    },\n    renderOperations(createElement: CreateElement): VNode {\n      const { node, treeScope } = this;\n      const { operations, scopedSlots } = treeScope;\n\n      let opNode = null;\n      if (scopedSlots?.operations) {\n        opNode = scopedSlots.operations({\n          node: node?.getModel(),\n        });\n      } else {\n        opNode = getTNode(operations, {\n          createElement,\n          node,\n        });\n      }\n      if (opNode) {\n        opNode = (\n          <span class={CLASS_NAMES.treeOperations} ignore=\"active,expand\">\n            {opNode}\n          </span>\n        );\n      }\n      return opNode;\n    },\n    renderItem(createElement: CreateElement): Array<VNode> {\n      const itemNodes: Array<VNode> = [];\n      const iconNode = this.renderIcon(createElement);\n      // 渲染连线排在渲染图标之后，是为了确认图标是否存在\n      const lineNode = this.renderLine(createElement);\n\n      if (lineNode) {\n        itemNodes.push(lineNode);\n      }\n\n      if (iconNode) {\n        itemNodes.push(iconNode);\n      }\n\n      const labelNode = this.renderLabel(createElement);\n      if (labelNode) {\n        itemNodes.push(labelNode);\n      }\n\n      const opNode = this.renderOperations(createElement);\n      if (opNode) {\n        itemNodes.push(opNode);\n      }\n\n      return itemNodes;\n    },\n    handleClick(evt: MouseEvent) {\n      // checkbox 上也有 emit click 事件\n      // 用这个逻辑避免重复的 click 事件被触发\n      if (this.clicked) return;\n      this.clicked = true;\n      setTimeout(() => {\n        this.clicked = false;\n      });\n\n      const { node } = this;\n      const state: TypeEventState = {\n        mouseEvent: evt,\n        event: evt,\n        node,\n        path: node.getPath(),\n      };\n      this.$emit('click', state);\n    },\n    handleChange() {\n      const { node } = this;\n      const event = new Event('change');\n      const state: TypeEventState = {\n        event,\n        node,\n      };\n      this.$emit('change', state);\n    },\n  },\n  created() {\n    if (this.node) {\n      this.data = this.node.data;\n    }\n  },\n  destroyed() {\n    this.data = null;\n  },\n  render(createElement: CreateElement) {\n    const { node } = this;\n    const { tree, level, value } = node;\n\n    if (!tree || !tree.nodeMap.get(value)) {\n      this.$destroy();\n    }\n    const styles = this.getStyles();\n    const classList = this.getClassList();\n    return (\n      <div\n        class={classList}\n        data-value={value}\n        data-level={level}\n        style={styles}\n        onClick={(evt: MouseEvent) => this.handleClick(evt)}\n      >\n        {this.renderItem(createElement)}\n      </div>\n    );\n  },\n});\n"],"names":["keepAnimationMixins","getKeepAnimationMixins","TreeItemProps","node","type","TreeNode","treeScope","Object","mixins","getConfigReceiverMixins","extend","name","TREE_NODE_NAME","props","directives","ripple","data","clicked","methods","getStyles","level","styles","getClassList","list","push","CLASS_NAMES","treeNode","treeNodeOpen","expanded","actived","isActivable","disabled","isDisabled","visible","treeNodeVisible","treeNodeHidden","renderLine","createElement","line","scopedSlots","iconVisible","icon","lineNode","getModel","parent","tree","vmIsLeaf","vmIsFirst","lineClasses","lineIsLeaf","lineIsFirst","shadowStyles","parents","getParents","pop","forEach","pnode","index","vmIsLast","String","join","getTNode","getFolderIcon","isFunction","global","folderIcon","$createElement","renderIcon","isDefaultIcon","iconNode","loading","TLoading","treeIcon","treeIconDefault","renderLabel","label","disableCheck","checkProps","labelNode","labelClasses","treeLabel","treeLabelStrictly","vmCheckable","checkboxDisabled","itemCheckProps","TCheckBox","keepAnimation","checked","indeterminate","value","handleChange","inner","renderOperations","operations","opNode","treeOperations","renderItem","itemNodes","handleClick","evt","setTimeout","state","mouseEvent","event","path","getPath","$emit","Event","created","destroyed","render","nodeMap","get","$destroy","classList"],"mappings":"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"}