{"version":3,"file":"util.js","sources":["../../src/tree/util.ts"],"sourcesContent":["import { VNode } from 'vue';\nimport TreeStore from '../_common/js/tree/tree-store';\nimport TreeNode from '../_common/js/tree/tree-node';\nimport {\n  TypeMark, TypeLineModel, TypeTNodeProp, TypeGetTNodeOption, TypeTargetNode,\n} from './interface';\n\nexport { emitEvent } from '../utils/event';\n\nexport function getParentsToRoot(element?: HTMLElement, root?: HTMLElement): HTMLElement[] {\n  const list = [];\n  let el: HTMLElement = element;\n  while (el && el.parentNode) {\n    list.push(el);\n    if (el === root) {\n      break;\n    }\n    el = el.parentNode as HTMLElement;\n  }\n  return list;\n}\n\nexport function getParentMarks(name: string, element?: HTMLElement, root?: HTMLElement): TypeMark[] {\n  const list = getParentsToRoot(element, root);\n  return list\n    .map((el) => {\n      const mark: TypeMark = {\n        name,\n        value: el?.getAttribute(name) || '',\n        el,\n      };\n      return mark;\n    })\n    .filter((mark) => mark.value);\n}\n\nexport function getMark(name: string, element?: HTMLElement, root?: HTMLElement): TypeMark {\n  const list = getParentMarks(name, element, root);\n  const info = list.pop() || null;\n  return info;\n}\n\nexport function getTNode(prop: TypeTNodeProp, options: TypeGetTNodeOption): string | VNode {\n  let tnode = null;\n  let item = null;\n  const conf = {\n    ...options,\n  };\n  if (typeof prop === 'function') {\n    item = prop(conf.createElement, conf.node?.getModel());\n  } else if (typeof prop === 'string') {\n    item = prop;\n  }\n  if (typeof item === 'string') {\n    tnode = item;\n  } else if (item) {\n    tnode = item as VNode;\n  }\n  return tnode;\n}\n\n// 获取一个节点层级位置的连线模型\nexport function getLineModel(nodes: TreeNode[], node: TreeNode, index: number): TypeLineModel {\n  // 标记 [上，右，下，左] 是否有连线\n  const lineModel: TypeLineModel = {\n    top: false,\n    right: false,\n    bottom: false,\n    left: false,\n  };\n\n  let nodeChildren = [];\n  if (Array.isArray(node.children)) {\n    nodeChildren = node.children;\n  }\n  const childNode = nodes[index - 1] || null;\n  const nodeItemIndex = childNode ? childNode.getIndex() : 0;\n\n  if (index === 0) {\n    lineModel.left = !!node.parent;\n    lineModel.bottom = node.children && node.expanded;\n    lineModel.right = node.parent && !node.children;\n  } else if (index === 1) {\n    lineModel.top = true;\n    lineModel.right = true;\n    lineModel.bottom = nodeItemIndex < nodeChildren.length - 1;\n  } else if (nodeItemIndex < nodeChildren.length - 1) {\n    lineModel.top = true;\n    lineModel.bottom = true;\n  }\n\n  return lineModel;\n}\n\nexport function isTreeNodeValue(item: unknown): boolean {\n  return typeof item === 'string' || typeof item === 'number';\n}\n\nexport function getNode(store: TreeStore, item: TypeTargetNode): TreeNode {\n  let node = null;\n  let val = null;\n  if (typeof item === 'string' || typeof item === 'number') {\n    val = item;\n  } else if (item && isTreeNodeValue(item.value)) {\n    val = item.value;\n  }\n  node = store.getNode(val);\n  return node;\n}\n"],"names":["getParentsToRoot","element","root","list","el","parentNode","push","getParentMarks","name","map","mark","value","getAttribute","filter","getMark","info","pop","getTNode","prop","options","tnode","item","conf","createElement","node","getModel","getLineModel","nodes","index","lineModel","top","right","bottom","left","nodeChildren","Array","isArray","children","childNode","nodeItemIndex","getIndex","parent","expanded","length","isTreeNodeValue","getNode","store","val"],"mappings":"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"}