{"version":3,"file":"group.js","sources":["../../src/radio/group.tsx"],"sourcesContent":["import Vue, { VNode, CreateElement } from 'vue';\nimport isString from 'lodash/isString';\nimport isNumber from 'lodash/isNumber';\nimport props from './radio-group-props';\nimport {\n  TdRadioGroupProps, RadioOptionObj, RadioOption, RadioValue,\n} from './type';\nimport { prefix } from '../config';\nimport Radio, { radioBtnName } from './radio';\nimport { TNodeReturnValue } from '../common';\nimport CLASSNAMES, { SIZE_CLASSNAMES } from '../utils/classnames';\nimport { emitEvent } from '../utils/event';\n\nconst name = `${prefix}-radio-group`;\n\nexport default Vue.extend({\n  name: 'TRadioGroup',\n  props: { ...props },\n\n  components: {\n    Radio,\n  },\n\n  provide(): Record<string, any> {\n    return {\n      radioGroup: this,\n    };\n  },\n\n  data() {\n    return {\n      barStyle: { width: '0px', left: '0px' },\n      observer: null,\n    };\n  },\n\n  computed: {\n    checkedClassName() {\n      return `.${radioBtnName}.${CLASSNAMES.STATUS.checked}`;\n    },\n  },\n\n  render(h: CreateElement): VNode {\n    const { $scopedSlots } = this;\n    let children: TNodeReturnValue = $scopedSlots.default && $scopedSlots.default(null);\n\n    if (this.options && this.options.length) {\n      children = this.options.map((option: RadioOption, index) => {\n        let opt = option as RadioOptionObj;\n        if (isNumber(option) || isString(option)) {\n          opt = { value: option, label: option.toString() };\n        }\n        return (\n          <Radio\n            key={`radio-group-options-${opt.value}-${index}`}\n            name={this.name}\n            checked={this.value === opt.value}\n            disabled={'disabled' in opt ? opt.disabled : this.disabled}\n            value={opt.value}\n          >\n            {typeof opt.label === 'function' ? opt.label(h) : opt.label}\n          </Radio>\n        );\n      });\n    }\n\n    const groupClass = [\n      `${name}`,\n      SIZE_CLASSNAMES[this.size],\n      {\n        [`${name}__outline`]: this.variant === 'outline',\n        [`${name}--filled`]: this.variant.includes('filled'),\n        [`${name}--primary-filled`]: this.variant === 'primary-filled',\n      },\n    ];\n    if (this.variant.includes('filled')) {\n      children && children.push(<div style={this.barStyle} class={`${name}__bg-block`}></div>);\n    }\n\n    return <div class={groupClass}>{children}</div>;\n  },\n\n  watch: {\n    value() {\n      this.$nextTick(() => this.calcBarStyle());\n    },\n  },\n\n  created() {\n    this.$on('checked-change', this.handleRadioChange);\n  },\n\n  mounted() {\n    this.calcBarStyle();\n\n    const observer = new MutationObserver(this.calcBarStyle);\n    observer.observe(this.$el, { childList: true, attributes: true, subtree: true });\n    this.observer = observer;\n  },\n\n  beforeDestroy() {\n    this.observer.disconnect();\n  },\n\n  methods: {\n    handleRadioChange(value: RadioValue, context: { e: Event }) {\n      emitEvent<Parameters<TdRadioGroupProps['onChange']>>(this, 'change', value, context);\n    },\n    calcDefaultBarStyle() {\n      const defaultNode = this.$el.cloneNode(true);\n      const div = document.createElement('div');\n      div.setAttribute('style', 'position: absolute; visibility: hidden;');\n      div.appendChild(defaultNode);\n      document.body.appendChild(div);\n\n      const defaultCheckedRadio: HTMLElement = div.querySelector(this.checkedClassName);\n      const { offsetWidth, offsetLeft } = defaultCheckedRadio;\n      this.barStyle = { width: `${offsetWidth}px`, left: `${offsetLeft}px` };\n      document.body.removeChild(div);\n    },\n    calcBarStyle() {\n      if (this.variant === 'outline') return;\n\n      const checkedRadio: HTMLElement = this.$el.querySelector(this.checkedClassName);\n      if (!checkedRadio) return;\n\n      const { offsetWidth, offsetLeft } = checkedRadio;\n      // current node is not renderedï¼Œfallback to default render\n      if (!offsetWidth) {\n        this.calcDefaultBarStyle();\n      } else {\n        this.barStyle = { width: `${offsetWidth}px`, left: `${offsetLeft}px` };\n      }\n    },\n  },\n});\n"],"names":["name","prefix","Vue","extend","props","components","Radio","provide","radioGroup","data","barStyle","width","left","observer","computed","checkedClassName","radioBtnName","CLASSNAMES","STATUS","checked","render","h","$scopedSlots","children","options","length","map","option","index","opt","isNumber","isString","value","label","toString","disabled","groupClass","SIZE_CLASSNAMES","size","variant","includes","push","watch","$nextTick","calcBarStyle","created","$on","handleRadioChange","mounted","MutationObserver","observe","$el","childList","attributes","subtree","beforeDestroy","disconnect","methods","context","emitEvent","calcDefaultBarStyle","defaultNode","cloneNode","div","document","createElement","setAttribute","appendChild","body","defaultCheckedRadio","querySelector","offsetWidth","offsetLeft","removeChild","checkedRadio"],"mappings":"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"}