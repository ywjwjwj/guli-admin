import Vue from 'vue';
import { ScopedSlotReturnValue } from 'vue/types/vnode';
import { Styles } from '../common';
declare const _default: import("vue/types/vue").ExtendedVue<Vue, {
    name: string;
}, {
    getIconMap(): {
        success: import("vue/types/vue").ExtendedVue<Vue, {}, {}, {}, import("tdesign-icons-vue/lib/utils/types").IconProps>;
        warning: import("vue/types/vue").ExtendedVue<Vue, {}, {}, {}, import("tdesign-icons-vue/lib/utils/types").IconProps>;
        error: import("vue/types/vue").ExtendedVue<Vue, {}, {}, {}, import("tdesign-icons-vue/lib/utils/types").IconProps>;
    };
    getLabelContent(): ScopedSlotReturnValue;
}, {
    statusStyle: string;
    themeClass: string;
    trackBgStyle: Styles;
    circleStrokeStyle: Styles;
    barStyle: Styles;
    circlePathStyle: Styles;
    isShowIcon: boolean;
    diameter: number;
    rPoints: number;
    radius: number;
    circleStyle: Styles;
    circleStrokeWidth: number;
    strokeDashArr: string;
    plumpStyles: Styles;
}, {
    color: string | string[] | Record<string, string>;
    label: string | boolean | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    percentage: number;
    size: string | number;
    status: import("./type").StatusEnum;
    strokeWidth: string | number;
    theme: import("./type").ThemeEnum;
    trackColor: string;
}>;
export default _default;
