import Vue from 'vue';
import { ScopedSlotReturnValue } from 'vue/types/vnode';
import { StepsConfig } from '../config-provider/config-receiver';
import Steps from './steps';
import { ClassName } from '../common';
export interface StepItemType extends Vue {
    steps: InstanceType<typeof Steps>;
}
declare const _default: import("vue/types/vue").ExtendedVue<{
    t<T>(pattern: T, placement?: import("../config-provider/config-receiver").Placement): string;
} & {
    global: StepsConfig;
} & Record<never, any> & import("../config-provider/config-receiver").ConfigComponent & StepItemType & Vue, {
    index: number;
}, {
    renderIcon(): any;
    onStepClick(e: MouseEvent): void;
}, {
    current: string | number;
    baseClass: ClassName;
    iconClass: ClassName;
    canClick: boolean;
}, {
    content: string | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    extra: string | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    icon: boolean | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    status: import("./type").StepStatus;
    title: string | ((h: import("vue").CreateElement) => ScopedSlotReturnValue);
    value: string | number;
}>;
export default _default;
