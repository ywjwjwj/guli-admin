import { TdStepsProps, TdStepItemProps } from './type';
import './style';
export * from './type';
export declare type StepsProps = TdStepsProps;
export declare type StepItemProps = TdStepItemProps;
export declare const StepItem: import("vue/types/vue").ExtendedVue<{
    t<T>(pattern: T, placement?: import("../config-provider/config-receiver").Placement): string;
} & {
    global: import("..").StepsConfig;
} & Record<never, any> & import("../config-provider/config-receiver").ConfigComponent & import("./step-item").StepItemType & import("vue").default, {
    index: number;
}, {
    renderIcon(): any;
    onStepClick(e: MouseEvent): void;
}, {
    current: string | number;
    baseClass: import("../common").ClassName;
    iconClass: import("../common").ClassName;
    canClick: boolean;
}, {
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    extra: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    icon: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    status: import("./type").StepStatus;
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    value: string | number;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<{
    t<T>(pattern: T, placement?: import("../config-provider/config-receiver").Placement): string;
} & {
    global: import("..").StepsConfig;
} & Record<never, any> & import("../config-provider/config-receiver").ConfigComponent & import("./step-item").StepItemType & import("vue").default, {
    index: number;
}, {
    renderIcon(): any;
    onStepClick(e: MouseEvent): void;
}, {
    current: string | number;
    baseClass: import("../common").ClassName;
    iconClass: import("../common").ClassName;
    canClick: boolean;
}, {
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    extra: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    icon: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    status: import("./type").StepStatus;
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    value: string | number;
}>>;
export declare const Steps: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    updateData(this: any, propName: string, v: any, ...args: any[]): any;
}, unknown, {
    [x: string]: any;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    updateData(this: any, propName: string, v: any, ...args: any[]): any;
}, unknown, {
    [x: string]: any;
}>>;
export default Steps;
