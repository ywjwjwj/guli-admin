{"version":3,"file":"props.js","sources":["../../src/tree-select/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-12-12 16:59:59\n * */\n\nimport { TdTreeSelectProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许清空 */\n  clearable: Boolean,\n  /** 多选情况下，用于设置折叠项内容，默认为 `+N`。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义 */\n  collapsedItems: {\n    type: Function as PropType<TdTreeSelectProps['collapsedItems']>,\n  },\n  /** 数据 */\n  data: {\n    type: Array as PropType<TdTreeSelectProps['data']>,\n    default: (): TdTreeSelectProps['data'] => [],\n  },\n  /** 是否禁用组件 */\n  disabled: Boolean,\n  /** 当下拉列表为空时显示的内容 */\n  empty: {\n    type: [String, Function] as PropType<TdTreeSelectProps['empty']>,\n    default: '',\n  },\n  /** 过滤方法，用于对现有数据进行搜索过滤，判断是否过滤某一项数据 */\n  filter: {\n    type: Function as PropType<TdTreeSelectProps['filter']>,\n  },\n  /** 是否可搜索 */\n  filterable: Boolean,\n  /** 是否正在加载数据 */\n  loading: Boolean,\n  /** 远程加载时显示的文字，支持自定义。如加上超链接 */\n  loadingText: {\n    type: [String, Function] as PropType<TdTreeSelectProps['loadingText']>,\n    default: '',\n  },\n  /** 用于控制多选数量，值为 0 则不限制 */\n  max: {\n    type: Number,\n    default: 0,\n  },\n  /** 最小折叠数量，用于多选情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠 */\n  minCollapsedNum: {\n    type: Number,\n    default: 0,\n  },\n  /** 是否允许多选 */\n  multiple: Boolean,\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: '',\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdTreeSelectProps['popupProps']>,\n  },\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdTreeSelectProps['prefixIcon']>,\n  },\n  /** 【讨论中】是否显示全选 */\n  showCheckAlll: Boolean,\n  /** 尺寸 */\n  size: {\n    type: String as PropType<TdTreeSelectProps['size']>,\n    default: 'medium' as TdTreeSelectProps['size'],\n    validator(val: TdTreeSelectProps['size']): boolean {\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 透传 Tree 组件属性 */\n  treeProps: {\n    type: Object as PropType<TdTreeSelectProps['treeProps']>,\n  },\n  /** 选中值 */\n  value: {\n    type: [String, Number, Object, Array] as PropType<TdTreeSelectProps['value']>,\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: [String, Number, Object, Array] as PropType<TdTreeSelectProps['defaultValue']>,\n  },\n  /** 自定义选中项呈现方式 */\n  valueDisplay: {\n    type: Function as PropType<TdTreeSelectProps['valueDisplay']>,\n  },\n  /** 用于控制选中值的类型。假设数据选项为：`[{ label: '姓名', value: 'name' }]`，value 表示值仅返回数据选项中的 value， object 表示值返回全部数据 */\n  valueType: {\n    type: String as PropType<TdTreeSelectProps['valueType']>,\n    default: 'value' as TdTreeSelectProps['valueType'],\n    validator(val: TdTreeSelectProps['valueType']): boolean {\n      return ['value', 'object'].includes(val);\n    },\n  },\n  /** 输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdTreeSelectProps['onBlur']>,\n  /** 节点选中状态变化时触发，context.node 表示当前变化的选项 */\n  onChange: Function as PropType<TdTreeSelectProps['onChange']>,\n  /** 点击清除按钮时触发 */\n  onClear: Function as PropType<TdTreeSelectProps['onClear']>,\n  /** 输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdTreeSelectProps['onFocus']>,\n  /** 多选模式下，选中数据被移除时触发 */\n  onRemove: Function as PropType<TdTreeSelectProps['onRemove']>,\n  /** 输入值变化时，触发搜索事件。主要用于远程搜索新数据 */\n  onSearch: Function as PropType<TdTreeSelectProps['onSearch']>,\n};\n"],"names":["clearable","Boolean","collapsedItems","type","Function","data","Array","disabled","empty","String","filter","filterable","loading","loadingText","max","Number","minCollapsedNum","multiple","placeholder","popupProps","Object","prefixIcon","showCheckAlll","size","validator","val","includes","treeProps","value","defaultValue","valueDisplay","valueType","onBlur","onChange","onClear","onFocus","onRemove","onSearch"],"mappings":"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"}