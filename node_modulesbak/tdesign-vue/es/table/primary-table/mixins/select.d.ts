import Vue, { VNode } from 'vue';
import { PrimaryTableCol } from '../../type';
declare const _default: import("vue/types/vue").ExtendedVue<Vue, unknown, {
    isDisabled(row: Record<string, any>, rowIndex: number): boolean;
    getSelectColumns(columns: Array<PrimaryTableCol>): Array<PrimaryTableCol>;
    getSelectedHeader(): () => JSX.Element;
    renderSelectCell({ column, row, rowIndex }: Record<string, any>): VNode;
    handleSelectChange(record?: Record<string, any>): void;
    handleSelectAll(): void;
}, {
    reRowKey: string;
    selectColumn: any;
    canSelectedRows: Record<string, any>[];
    isSelectedAll: boolean;
    isSelectedSome: boolean;
}, {
    columns: PrimaryTableCol<import("../../type").TableRowData>[];
    data: import("../../type").TableRowData[];
    rowKey: string;
    selectedRowKeys: (string | number)[];
}>;
export default _default;
