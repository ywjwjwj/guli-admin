import Vue, { CreateElement } from 'vue';
import { PrimaryTableCol, FilterValue } from '../../type';
declare const _default: import("vue/types/vue").ExtendedVue<Vue, {
    tableWidth: number;
    innerFilterValue: FilterValue;
    filterPopupVisible: {};
}, {
    updateTableWidth(): void;
    onFilterPopupVisibleChange(visible: boolean, colKey: string): void;
    renderFirstFilterRow(): JSX.Element;
    getFilterResultContent(): string;
    onInnerFilterChange(val: any, column: PrimaryTableCol): void;
    emitFilterChange(filterValue: FilterValue, column?: PrimaryTableCol): void;
    onReset(column: PrimaryTableCol): void;
    onResetAll(): void;
    onConfirm(column: PrimaryTableCol): void;
    getBottomButtons(column: PrimaryTableCol): JSX.Element;
    getFilterContent(column: PrimaryTableCol): JSX.Element;
    getFilterColumns(columns: PrimaryTableCol[]): PrimaryTableCol[];
}, {
    fixedLeftColumn: boolean;
    hasFilterCondition: boolean;
}, {
    columns: PrimaryTableCol<import("../../type").TableRowData>[];
    pagination: import("../../..").TdPaginationProps;
    filterValue: FilterValue;
    filterIcon: (h: CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    data: import("../../type").TableRowData[];
    filterRow: Function;
}>;
export default _default;
