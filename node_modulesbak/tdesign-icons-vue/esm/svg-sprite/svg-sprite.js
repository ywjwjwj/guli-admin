import { _ as _defineProperty } from '../_chunks/dep-f1f55b48.js';
import Vue from 'vue';
import props from './props/props.js';
import ConfigContext from '../utils/config-context.js';
import useSizeProps from '../utils/use-size-props.js';
import { checkScriptAndLoad } from '../utils/check-url-and-load.js';
import '../style/css.js';
import '../utils/use-common-classname.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var classPrefix = ConfigContext.classPrefix;
var tName = "".concat(classPrefix, "-icon");
var CDN_ICONFONT_URL = "https://tdesign.gtimg.com/icon/0.0.3/fonts/index.js";
var _Icon = Vue.extend({
  name: "Icon",
  props: props,
  computed: {
    iconName: function iconName() {
      return this.url ? this.name : "".concat(tName, "-").concat(this.name);
    },
    classes: function classes() {
      var _useSizeProps = useSizeProps(this.size),
          sizeClassName = _useSizeProps.className;

      var iconName = this.url ? this.name : "".concat(tName, "-").concat(this.name);
      var arr = [tName, iconName, sizeClassName];
      return arr;
    },
    iconStyle: function iconStyle() {
      if (["small", "medium", "large"].includes(this.size)) return {};
      return {
        "font-size": this.size
      };
    }
  },
  methods: {
    handleClick: function handleClick(e) {
      var _this$onClick;

      this.$emit("click", {
        e: e
      });
      (_this$onClick = this.onClick) === null || _this$onClick === void 0 ? void 0 : _this$onClick.call(this, {
        e: e
      });
    }
  },
  mounted: function mounted() {
    var finalUrl = [];

    if (this.url) {
      finalUrl = this.url instanceof Array ? this.url.concat() : [this.url];
    }

    if (this.loadDefaultIcons) {
      finalUrl.push(CDN_ICONFONT_URL);
    }

    Array.from(new Set(finalUrl)).forEach(function (url) {
      checkScriptAndLoad(url, "".concat(classPrefix, "-svg-js-stylesheet--unique-class"));
    });
  },
  render: function render() {
    var h = arguments[0];
    var attrs = {
      href: "#".concat(this.iconName)
    };
    return h("svg", {
      "class": this.classes,
      "style": this.iconStyle,
      "on": {
        "click": this.handleClick
      }
    }, [h("use", {
      "attrs": _objectSpread({}, attrs)
    })]);
  }
});

export { _Icon as default };
//# sourceMappingURL=svg-sprite.js.map
