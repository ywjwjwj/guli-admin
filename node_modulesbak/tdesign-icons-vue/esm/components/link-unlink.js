import { _ as _defineProperty } from '../_chunks/dep-f1f55b48.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-8baf22ba.js';
import Vue from 'vue';
import IconBase from '../icon.js';
import useSizeProps from '../utils/use-size-props.js';
import 'classnames';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

var _excluded = ["size"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 16 16",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M6 2v2h1V2H6zM8.18 9.6l-2.3 2.29a1.25 1.25 0 01-1.77-1.77l2.3-2.3-.7-.7-2.3 2.3a2.25 2.25 0 003.18 3.18l2.3-2.3-.71-.7zM9.6 8.18l.7.7 2.3-2.3A2.25 2.25 0 109.4 3.4l-2.3 2.3.71.7 2.3-2.29a1.25 1.25 0 011.77 1.77l-2.3 2.3zM12 9h2v1h-2V9zM2 7h2V6H2v1zM10 12v2H9v-2h1zM11.73 11.03l1.62 1.62-.7.7-1.62-1.62.7-.7zM2.65 3.35l1.62 1.62.7-.7-1.62-1.62-.7.7z",
      "fillOpacity": 0.9
    }
  }]
};
var LinkUnlink = Vue.extend({
  name: "LinkUnlinkIcon",
  functional: true,
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  render: function render(createElement, context) {
    var props = context.props,
        data = context.data;

    var size = props.size,
        otherProps = _objectWithoutProperties(props, _excluded);

    var _useSizeProps = useSizeProps(size),
        className = _useSizeProps.className,
        style = _useSizeProps.style;

    var fullProps = _objectSpread(_objectSpread({}, otherProps || {}), {}, {
      id: "link-unlink",
      icon: element,
      staticClass: className,
      style: style
    });

    data.props = fullProps;
    return createElement(IconBase, data);
  }
});

export { LinkUnlink as default };
//# sourceMappingURL=link-unlink.js.map
