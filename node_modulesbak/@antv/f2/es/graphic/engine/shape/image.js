import { isNil } from '../../../util/common';
import Rect from './rect';
var imageCaches = {};

class ImageShape extends Rect {
  _initProperties() {
    super._initProperties();

    this._attrs.canFill = false;
    this._attrs.canStroke = false;
    this._attrs.loading = false;
    this._attrs.image = null;
    this._attrs.type = 'image';
  }

  draw(context) {
    var _this = this;

    // 如果图片还在loading中直接返回，等下次绘制
    if (this.get('loading')) {
      return;
    } // 如果已经有image对象，直接绘制，会调用createPath绘制


    var image = this.get('image');

    if (image) {
      super.draw(context);
      return;
    }

    var attrs = this.get('attrs');
    var {
      src
    } = attrs;

    if (src && window.Image) {
      var cacheImage = this.get('cacheImage'); // 如果有缓存，则直接从缓存中拿

      if (cacheImage && imageCaches[src]) {
        this.set('image', imageCaches[src]);
        this.draw(context);
        return;
      }

      this.set('loading', true);

      var _image = new Image(); // 设置跨域, 等同于 image.crossOrigin = 'anonymous'


      _image.crossOrigin = '';

      _image.onload = function () {
        _this.set('loading', false);

        _this.set('image', _image);

        _this.draw(context);
      }; // src 一定要在 crossOrigin 之后，否则 toDataURL 就会报 SecurityError


      _image.src = src; // 设置全局缓存

      if (cacheImage) {
        imageCaches[src] = _image;
      }
    }
  }

  createPath(context) {
    var image = this.get('image');
    this.drawImage(context, image);
  }

  drawImage(context, image) {
    var {
      attrs,
      destroyed
    } = this._attrs;

    if (destroyed) {
      return;
    }

    var {
      x,
      y,
      width,
      height,
      sx,
      sy,
      swidth,
      sheight,
      radius,
      fillOpacity
    } = attrs;

    if (radius) {
      context.save();
      this.createRadiusPath(context, x, y, width, height, radius);
      context.clip();
    } // 设置透明度


    var originOpacity = context.globalAlpha;

    if (!isNil(fillOpacity)) {
      context.globalAlpha = fillOpacity;
    }

    if (!isNil(sx) && !isNil(sy) && !isNil(swidth) && !isNil(sheight)) {
      context.drawImage(image, sx, sy, swidth, sheight, x, y, width, height);
    } else {
      context.drawImage(image, x, y, width, height);
    }

    context.globalAlpha = originOpacity;

    if (radius) {
      // 因为 save 和 restore 会一定程度上影响绘图性能，所以只在必要是调用
      context.restore();
    }
  }

}

export default ImageShape;