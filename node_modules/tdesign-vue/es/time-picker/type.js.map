{"version":3,"file":"type.js","sources":["../../src/time-picker/type.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-11-19 10:44:26\n * */\n\nexport interface TdTimePickerProps {\n  /**\n   * 是否允许直接输入时间\n   * @default false\n   */\n  allowInput?: boolean;\n  /**\n   * 是否允许清除选中值\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * 是否禁用组件\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * 禁用时间项\n   */\n  disableTime?: (h: number, m: number, s: number) => boolean;\n  /**\n   * 用于格式化时间，[详细文档](https://day.js.org/docs/en/display/format)\n   * @default 'HH:mm:ss'\n   */\n  format?: string;\n  /**\n   * 是否隐藏禁用状态的时间项\n   * @default true\n   */\n  hideDisabledTime?: boolean;\n  /**\n   * 占位符\n   * @default ''\n   */\n  placeholder?: string;\n  /**\n   * 尺寸\n   * @default medium\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * 时间间隔步数，数组排列 [小时, 分钟, 秒]，示例：[2, 1, 1] 或者 ['2', '1', '1']\n   * @default () => [1, 1, 1]\n   */\n  steps?: Array<string | number>;\n  /**\n   * 选中值\n   * @default ''\n   */\n  value?: TimePickerValue;\n  /**\n   * 选中值，非受控属性\n   * @default ''\n   */\n  defaultValue?: TimePickerValue;\n  /**\n   * 当输入框失去焦点时触发，参数 input 表示输入框内容，value 表示组件当前有效值，trigger 表示触发源头\n   */\n  onBlur?: (context: { trigger: 'hour' | 'minute' | 'second'; input: string; value: TimePickerValue; e: FocusEvent }) => void;\n  /**\n   * 选中值发生变化时触发\n   */\n  onChange?: (value: TimePickerValue) => void;\n  /**\n   * 面板关闭时触发\n   */\n  onClose?: (context: { e: MouseEvent }) => void;\n  /**\n   * 输入框获得焦点时触发，参数 input 表示输入框内容，value 表示组件当前有效值，trigger 表示触发源头\n   */\n  onFocus?: (context: { trigger: 'hour' | 'minute' | 'second'; input: string; value: TimePickerValue; e: FocusEvent }) => void;\n  /**\n   * 当输入框内容发生变化时触发，参数 input 表示输入框内容，value 表示组件当前有效值\n   */\n  onInput?: (context: { input: string; value: TimePickerValue; e: InputEvent }) => void;\n  /**\n   * 面板打开时触发\n   */\n  onOpen?: (context: { e: MouseEvent }) => void;\n};\n\nexport interface TdTimeRangePickerProps {\n  /**\n   * 是否允许直接输入时间\n   * @default false\n   */\n  allowInput?: boolean;\n  /**\n   * 是否允许清除选中值\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * 是否禁用组件，值为数组表示可分别控制开始日期和结束日期是否禁用\n   * @default false\n   */\n  disabled?: boolean | Array<boolean>;\n  /**\n   * 禁用时间项\n   */\n  disableTime?: (h: number, m: number, s: number, context: { partial: TimeRangePickerPartial }) => boolean;\n  /**\n   * 用于格式化时间，[详细文档](https://day.js.org/docs/en/display/format)\n   * @default 'HH:mm:ss'\n   */\n  format?: string;\n  /**\n   * 是否隐藏禁用状态的时间项\n   * @default true\n   */\n  hideDisabledTime?: boolean;\n  /**\n   * 占位符，值为数组表示可分别为开始日期和结束日期设置占位符\n   */\n  placeholder?: string | Array<string>;\n  /**\n   * 尺寸\n   * @default medium\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * 时间间隔步数，数组排列 [小时, 分钟, 秒]，示例：[2, 1, 1] 或者 ['2', '1', '1']\n   * @default () => [1, 1, 1]\n   */\n  steps?: Array<string | number>;\n  /**\n   * 选中值\n   */\n  value?: TimeRangeValue;\n  /**\n   * 选中值，非受控属性\n   */\n  defaultValue?: TimeRangeValue;\n  /**\n   * 当输入框失去焦点时触发\n   */\n  onBlur?: (context: { value: TimeRangeValue; e: FocusEvent }) => void;\n  /**\n   * 选中值发生变化时触发\n   */\n  onChange?: (value: TimeRangeValue) => void;\n  /**\n   * 输入框获得焦点时触发\n   */\n  onFocus?: (context: { value: TimeRangeValue; e: FocusEvent }) => void;\n  /**\n   * 当输入框内容发生变化时触发，参数 input 表示输入内容，value 表示组件当前有效值\n   */\n  onInput?: (context: { input: string; value: TimeRangeValue; e: InputEvent }) => void;\n};\n\nexport type TimePickerValue = string;\n\nexport type TimeRangePickerPartial = 'start' | 'end';\n\nexport type TimeRangeValue = Array<string>;\n"],"names":[],"mappings":";;;;;;AAAA,CAAA;AACA"}