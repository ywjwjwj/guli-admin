import { TdAlertProps } from './type';
import './style';
export * from './type';
export declare type AlertProps = TdAlertProps;
export declare const Alert: import("vue/types/vue").ExtendedVue<import("vue").default, {
    visible: boolean;
    collapsed: boolean;
}, {
    renderIcon(): import("vue").VNode;
    renderClose(): import("vue").VNode;
    renderContent(): import("vue").VNode;
    renderTitle(): import("vue").VNode;
    renderMessage(): import("vue").VNode;
    renderDescription(): import("vue").VNode;
    handleClose(e: MouseEvent): void;
    handleCloseEnd(e: TransitionEvent): void;
}, unknown, {
    close: string | boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    icon: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    maxLine: number;
    message: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    operation: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    theme: "error" | "success" | "warning" | "info";
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    onClose: (context: {
        e: MouseEvent;
    }) => void;
    onClosed: (context: {
        e: TransitionEvent;
    }) => void;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, {
    visible: boolean;
    collapsed: boolean;
}, {
    renderIcon(): import("vue").VNode;
    renderClose(): import("vue").VNode;
    renderContent(): import("vue").VNode;
    renderTitle(): import("vue").VNode;
    renderMessage(): import("vue").VNode;
    renderDescription(): import("vue").VNode;
    handleClose(e: MouseEvent): void;
    handleCloseEnd(e: TransitionEvent): void;
}, unknown, {
    close: string | boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    icon: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    maxLine: number;
    message: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    operation: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    theme: "error" | "success" | "warning" | "info";
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    onClose: (context: {
        e: MouseEvent;
    }) => void;
    onClosed: (context: {
        e: TransitionEvent;
    }) => void;
}>>;
export default Alert;
