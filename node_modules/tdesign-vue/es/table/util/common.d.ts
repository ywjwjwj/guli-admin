import { PrimaryTableCol, TableRowData } from '../type';
export declare function toString(obj: any): string;
export declare function debounce<T = any>(fn: Function, delay?: number): () => void;
export declare function filterDataByIds(data?: Array<object>, ids?: Array<string | number>, byId?: string): Array<object>;
export declare const INNER_PRE_NAME = "@@inner-";
export declare enum SCROLL_DIRECTION {
    X = "x",
    Y = "y",
    UNKNOWN = "unknown"
}
export declare const getScrollDirection: (scrollLeft: number, scrollTop: number) => SCROLL_DIRECTION;
export declare const getRecord: (record: Record<any, any>) => Record<any, any>;
export declare function getTitle(vm: Vue, column: PrimaryTableCol, colIndex: number): import("vue/types/vnode").ScopedSlotReturnValue;
export interface GetCellParams<T extends TableRowData = TableRowData> {
    row: T;
    rowIndex: number;
    col: PrimaryTableCol;
    colIndex: number;
}
export declare function getCell(vm: Vue, p: GetCellParams): any;
export declare function isRowSelectedDisabled(selectColumn: PrimaryTableCol, row: Record<string, any>, rowIndex: number): boolean;
