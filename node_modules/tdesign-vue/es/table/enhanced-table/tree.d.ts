import Vue from 'vue';
import { TableRowState, TableRowValue, PrimaryTableCellParams, TableRowData } from '../type';
import TableTreeStore, { KeysType } from './tree-store';
declare const _default: import("vue/types/vue").ExtendedVue<Vue, {
    store: TableTreeStore<TableRowData>;
    dataSource: any[];
}, {
    getTreeNodeStyle(level: number): {
        paddingLeft: string;
    };
    toggleExpandData(p: PrimaryTableCellParams<TableRowData>): void;
    setData<T>(key: TableRowValue, newRowData: T): void;
    getData(key: TableRowValue): TableRowState;
    remove(key: TableRowValue): void;
    appendTo<T_1>(key: TableRowValue, newData: T_1): void;
}, {
    rowDataKeys: KeysType;
    childrenKey: string;
    columnsSource: import("../type").PrimaryTableCol<TableRowData>[];
}, {
    rowKey: string;
    data: TableRowData[];
    columns: import("../type").PrimaryTableCol<TableRowData>[];
    tree: import("../type").TableTreeConfig;
}>;
export default _default;
