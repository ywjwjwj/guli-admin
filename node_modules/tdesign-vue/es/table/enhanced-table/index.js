/**
 * tdesign v0.38.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { h as helper } from '../../_chunks/dep-99305448.js';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import baseTableProps from '../base-table-props.js';
import primaryTableProps from '../primary-table-props.js';
import enhancedTableProps from '../enhanced-table-props.js';
import _PrimaryTable from '../primary-table/index.js';
import mixins from '../../utils/mixins.js';
import TreeData from './tree.js';
import TreeSelect from './tree-select.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../base-table/index.js';
import 'lodash/throttle';
import '../../config-provider/config-receiver.js';
import 'vue';
import 'lodash/mergeWith';
import '../../config-provider/zh_CN_config.js';
import '../../config-provider/type.js';
import '../../config.js';
import '../util/props-util.js';
import '../base-table/table-body.js';
import 'lodash/get';
import 'lodash/camelCase';
import '../../utils/event.js';
import '../../utils/helper.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import '../base-table/table-row.js';
import '../base-table/table-cell.js';
import '../../popup/index.js';
import '../../popup/popup.js';
import '@babel/runtime/helpers/typeof';
import '@popperjs/core';
import '../../utils/classnames.js';
import '../../utils/dom.js';
import 'raf';
import 'lodash/isString';
import '../../utils/easing.js';
import '../../utils/render-tnode.js';
import 'lodash/isObject';
import '../../_common/js/utils/set-style.js';
import '../../popup/props.js';
import '../../popup/container.js';
import '../../utils/map-props.js';
import '../../utils/withInstall.js';
import 'lodash/capitalize';
import './style/css.js';
import '../../popup/type.js';
import '../util/common.js';
import 'lodash/isFunction';
import '../base-table/table-header.js';
import '../base-table/col-group.js';
import '../../pagination/index.js';
import '../../pagination/pagination.js';
import 'tdesign-icons-vue';
import '../../input-number/index.js';
import '../../input-number/input-number.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../../button/index.js';
import '../../button/button.js';
import '../../loading/index.js';
import '../../loading/loading.js';
import '../../loading/icon/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/helper.js';
import '../../utils/transfer-dom.js';
import '../../loading/props.js';
import '../../loading/type.js';
import '../../loading/plugin.js';
import '../../button/props.js';
import '../../utils/ripple.js';
import '../../button/type.js';
import '../../input/index.js';
import '../../input/addon.js';
import '../../input/input.js';
import 'lodash/kebabCase';
import '../../input/props.js';
import '../../input/input-group.js';
import '../../input/type.js';
import '../../input-number/props.js';
import '../../input-number/type.js';
import '../../select/index.js';
import '../../select/select.js';
import 'lodash/debounce';
import 'lodash/set';
import '../../tag/index.js';
import '../../tag/tag.js';
import '../../tag/props.js';
import '../../tag/check-tag.js';
import '../../tag/check-tag-props.js';
import '../../tag/type.js';
import '../../common-components/fake-arrow.js';
import '../../select/option.js';
import '../../select/option-props.js';
import '../../checkbox/index.js';
import '../../checkbox/group.js';
import 'lodash/intersection';
import '../../checkbox/checkbox.js';
import '../../checkbox/props.js';
import '../../checkbox/checkbox-group-props.js';
import '../../checkbox/type.js';
import '../../select/props.js';
import '../../select/optionGroup.js';
import '../../select/option-group-props.js';
import '../../select/type.js';
import '../../pagination/props.js';
import '../../pagination/type.js';
import '../util/interface.js';
import '../primary-table/mixins/expand.js';
import '../primary-table/expand-box.js';
import '../primary-table/mixins/select.js';
import '../primary-table/select-box.js';
import '../../radio/index.js';
import '../../radio/radio.js';
import '../../radio/props.js';
import '../../radio/group.js';
import 'lodash/isNumber';
import '../../radio/radio-group-props.js';
import '../../radio/radio-button.js';
import '../../radio/type.js';
import '../primary-table/mixins/sort.js';
import '../primary-table/sorter-button.js';
import '../../tooltip/index.js';
import '../../tooltip/tooltip.js';
import '../../tooltip/props.js';
import '../../tooltip/type.js';
import '../primary-table/mixins/row-draggable.js';
import '../primary-table/mixins/filter.js';
import '../primary-table/mixins/show-columns.js';
import '../../dialog/plugin.js';
import '../../dialog/dialog.js';
import '../../dialog/actions.js';
import '../../dialog/props.js';
import '../primary-table/mixins/async-loading.js';
import 'lodash/cloneDeep';
import './tree-store.js';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _EnhancedTable = mixins(TreeData, TreeSelect).extend({
  name: "TEnhancedTable",
  props: _objectSpread(_objectSpread(_objectSpread({}, baseTableProps), primaryTableProps), enhancedTableProps),
  data: function data() {
    return {
      dataSource: []
    };
  },
  computed: {
    childrenKey: function childrenKey() {
      var _this$tree;

      return ((_this$tree = this.tree) === null || _this$tree === void 0 ? void 0 : _this$tree.childrenKey) || "children";
    }
  },
  render: function render() {
    var h = arguments[0];
    var options = {
      props: _objectSpread(_objectSpread({}, this.$props), {}, {
        data: this.dataSource,
        columns: this.columnsSource
      }),
      on: _objectSpread(_objectSpread({}, this.$listeners), {}, {
        "select-change": this.onInnerSelectChange
      }),
      scopedSlots: _objectSpread({}, this.$scopedSlots)
    };
    return h(_PrimaryTable, helper([{}, options]));
  }
});

export { _EnhancedTable as default };
//# sourceMappingURL=index.js.map
