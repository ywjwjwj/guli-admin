import { TdDateRangePickerProps } from '../date-picker/type';
import { PropType } from 'vue';
declare const _default: {
    allowInput: BooleanConstructor;
    clearable: BooleanConstructor;
    disabled: {
        type: PropType<boolean | boolean[]>;
        default: boolean;
    };
    disableDate: {
        type: PropType<import("../date-picker/type").DisableRangeDate>;
    };
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: TdDateRangePickerProps['firstDayOfWeek']): boolean;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    mode: {
        type: PropType<"month" | "year" | "date">;
        default: "month" | "year" | "date";
        validator(val: TdDateRangePickerProps['mode']): boolean;
    };
    placeholder: {
        type: PropType<string | string[]>;
    };
    prefixIcon: {
        type: PropType<(h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue>;
    };
    presets: {
        type: PropType<import("../date-picker/type").PresetRange>;
    };
    separator: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: PropType<"small" | "medium" | "large">;
        default: "small" | "medium" | "large";
        validator(val: TdDateRangePickerProps['size']): boolean;
    };
    suffixIcon: {
        type: PropType<(h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue>;
    };
    value: {
        type: PropType<import("../date-picker/type").DateRangeValue>;
    };
    defaultValue: {
        type: PropType<import("../date-picker/type").DateRangeValue>;
    };
    onBlur: PropType<(context: {
        value: import("../date-picker/type").DateRangeValue;
        partial: import("../date-picker/type").DateRangePickerPartial;
        e: FocusEvent;
    }) => void>;
    onChange: PropType<(value: import("../date-picker/type").DateRangeValue) => void>;
    onFocus: PropType<(context: {
        value: import("../date-picker/type").DateRangeValue;
        partial: import("../date-picker/type").DateRangePickerPartial;
        e: FocusEvent;
    }) => void>;
    onInput: PropType<(context: {
        input: string;
        value: import("../date-picker/type").DateRangeValue;
        partial: import("../date-picker/type").DateRangePickerPartial;
        e: InputEvent;
    }) => void>;
    onPick: PropType<(value: import("../date-picker/type").DateValue, context: import("../date-picker/type").PickContext) => void>;
};
export default _default;
