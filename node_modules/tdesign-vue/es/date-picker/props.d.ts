import { TdDatePickerProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    allowInput: BooleanConstructor;
    clearable: BooleanConstructor;
    disabled: BooleanConstructor;
    disableDate: {
        type: PropType<import("./type").DisableDate>;
    };
    enableTimePicker: BooleanConstructor;
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: TdDatePickerProps['firstDayOfWeek']): boolean;
    };
    format: {
        type: StringConstructor;
        default: any;
    };
    inputProps: {
        type: PropType<import("..").TdInputProps>;
    };
    mode: {
        type: PropType<"month" | "year" | "date">;
        default: "month" | "year" | "date";
        validator(val: TdDatePickerProps['mode']): boolean;
    };
    placeholder: {
        type: PropType<string | string[]>;
        default: any;
    };
    popupProps: {
        type: PropType<import("..").TdPopupProps>;
    };
    prefixIcon: {
        type: PropType<(h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue>;
    };
    presets: {
        type: PropType<import("./type").PresetDate>;
    };
    range: BooleanConstructor;
    size: {
        type: PropType<"small" | "medium" | "large">;
        default: "small" | "medium" | "large";
        validator(val: TdDatePickerProps['size']): boolean;
    };
    suffixIcon: {
        type: PropType<(h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue>;
    };
    timePickerProps: BooleanConstructor;
    value: {
        type: PropType<import("./type").DateValue>;
    };
    defaultValue: {
        type: PropType<import("./type").DateValue>;
    };
    onBlur: PropType<(context: {
        value: import("./type").DateValue;
        e: FocusEvent;
    }) => void>;
    onChange: PropType<(value: import("./type").DateValue) => void>;
    onFocus: PropType<(context: {
        value: import("./type").DateValue;
        e: FocusEvent;
    }) => void>;
    onInput: PropType<(context: {
        input: string;
        value: import("./type").DateValue;
        e: InputEvent;
    }) => void>;
};
export default _default;
