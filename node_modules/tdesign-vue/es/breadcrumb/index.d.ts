import { TdBreadcrumbProps, TdBreadcrumbItemProps } from './type';
import './style';
export * from './type';
export declare type BreadcrumbProps = TdBreadcrumbProps;
export declare type BreadcrumbItemProps = TdBreadcrumbItemProps;
export declare const BreadcrumbItem: import("vue/types/vue").ExtendedVue<import("vue").default, {
    localTBreadcrumb: import("./breadcrumb-item").LocalTBreadcrumb;
    themeClassName: string;
    $router: any;
    isCutOff: boolean;
}, {
    bindEvent(): void;
}, {
    maxWithStyle: {
        'max-width': string;
    };
}, {
    content: string | number | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | number | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    disabled: boolean;
    href: string;
    maxWidth: any;
    replace: boolean;
    router: any;
    target: "_self" | "_blank" | "_parent" | "_top";
    to: import("./type").Route;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, {
    localTBreadcrumb: import("./breadcrumb-item").LocalTBreadcrumb;
    themeClassName: string;
    $router: any;
    isCutOff: boolean;
}, {
    bindEvent(): void;
}, {
    maxWithStyle: {
        'max-width': string;
    };
}, {
    content: string | number | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | number | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    disabled: boolean;
    href: string;
    maxWidth: any;
    replace: boolean;
    router: any;
    target: "_self" | "_blank" | "_parent" | "_top";
    to: import("./type").Route;
}>>;
export declare const Breadcrumb: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, unknown, {
    maxItemWidth: any;
    options: TdBreadcrumbItemProps[];
    separator: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    theme: "light";
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, unknown, {
    maxItemWidth: any;
    options: TdBreadcrumbItemProps[];
    separator: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    theme: "light";
}>>;
export default Breadcrumb;
