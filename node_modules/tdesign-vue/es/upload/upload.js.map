{"version":3,"file":"upload.js","sources":["../../src/upload/upload.tsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport Vue, { VNode } from 'vue';\nimport { ScopedSlotReturnValue } from 'vue/types/vnode';\nimport findIndex from 'lodash/findIndex';\nimport isFunction from 'lodash/isFunction';\nimport without from 'lodash/without';\nimport { UploadIcon } from 'tdesign-icons-vue';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { UploadConfig } from '../config-provider/config-receiver';\nimport { prefix } from '../config';\nimport Dragger from './dragger';\nimport ImageCard from './image';\nimport FlowList from './flow-list';\nimport xhr from '../_common/js/upload/xhr';\nimport log from '../_common/js/log';\nimport TButton from '../button';\nimport TDialog from '../dialog';\nimport SingleFile from './single-file';\nimport { renderContent } from '../utils/render-tnode';\nimport props from './props';\nimport { ClassName } from '../common';\nimport { emitEvent } from '../utils/event';\nimport { dedupeFile } from './util';\nimport {\n  HTMLInputEvent,\n  SuccessContext,\n  InnerProgressContext,\n  UploadRemoveOptions,\n  FlowRemoveContext,\n} from './interface';\nimport {\n  TdUploadProps,\n  UploadChangeContext,\n  UploadFile,\n  UploadRemoveContext,\n  RequestMethodResponse,\n  SizeUnit,\n  SizeLimitObj,\n} from './type';\n\nconst name = `${prefix}-upload`;\n/**\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\n\n// 各个单位和 KB 的关系\nconst SIZE_MAP = {\n  B: 1024,\n  KB: 1,\n  MB: 1048576, // 1024 * 1024\n  GB: 1073741824, // 1024 * 1024 * 1024\n};\n\n/**\n * 大小比较\n * @param size 文件大小\n * @param unit 计算机计量单位\n */\nfunction isOverSizeLimit(fileSize: number, sizeLimit: number, unit: SizeUnit) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    console.warn(`TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`);\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KBIndex ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n\nexport default mixins(getConfigReceiverMixins<Vue, UploadConfig>('upload')).extend({\n  name: 'TUpload',\n\n  components: {\n    Dragger,\n    SingleFile,\n    ImageCard,\n    FlowList,\n    TDialog,\n  },\n\n  model: {\n    prop: 'files',\n    event: 'change',\n  },\n\n  props: { ...props },\n\n  data() {\n    return {\n      // 表单控制禁用态时的变量\n      formDisabled: undefined,\n      dragActive: false,\n      // 加载中的文件\n      loadingFile: null as UploadFile,\n      // 等待上传的文件队列\n      toUploadFiles: [],\n      errorMsg: '',\n      showImageViewDialog: false,\n      showImageViewUrl: '',\n      xhrReq: null as XMLHttpRequest,\n    };\n  },\n\n  computed: {\n    tDisabled(): boolean {\n      return this.formDisabled || this.disabled;\n    },\n    // 默认文件上传风格：文件进行上传和上传成功后不显示 tips\n    showTips(): boolean {\n      if (this.theme === 'file') {\n        const hasNoFile = (!this.files || !this.files.length) && !this.loadingFile;\n        return this.tips && hasNoFile;\n      }\n      return Boolean(this.tips);\n    },\n    // 完全自定义上传\n    showCustomDisplay(): boolean {\n      return this.theme === 'custom';\n    },\n    // 单文件非拖拽类文件上传\n    showSingleDisplay(): boolean {\n      return !this.draggable && ['file', 'file-input'].includes(this.theme);\n    },\n    // 单文件非拖拽勒图片上传\n    showImgCard(): boolean {\n      return !this.draggable && this.theme === 'image';\n    },\n    // 拖拽类单文件或图片上传\n    singleDraggable(): boolean {\n      return !this.multiple && this.draggable && ['file', 'file-input', 'image'].includes(this.theme);\n    },\n    showUploadList(): boolean {\n      return this.multiple && ['file-flow', 'image-flow'].includes(this.theme);\n    },\n    showImgDialog(): boolean {\n      return ['image', 'image-flow', 'custom'].includes(this.theme);\n    },\n    showErrorMsg(): boolean {\n      return !this.showUploadList && !!this.errorMsg;\n    },\n    tipsClasses(): ClassName {\n      return [`${name}__tips ${prefix}-size-s`];\n    },\n    errorClasses(): ClassName {\n      return this.tipsClasses.concat(`${name}__tips-error`);\n    },\n    uploadInOneRequest(): boolean {\n      return this.multiple && this.uploadAllFilesInOneRequest;\n    },\n    canBatchUpload(): boolean {\n      return this.uploadInOneRequest && this.isBatchUpload;\n    },\n    uploadListTriggerText(): string {\n      let uploadText = '选择文件';\n      if (this.toUploadFiles?.length > 0 || this.files?.length > 0) {\n        if (this.theme === 'file-input' || (this.files?.length > 0 && this.canBatchUpload)) {\n          uploadText = '重新选择';\n        } else {\n          uploadText = '继续选择';\n        }\n      }\n      return uploadText;\n    },\n  },\n\n  methods: {\n    emitChangeEvent(files: Array<UploadFile>, ctx: UploadChangeContext) {\n      emitEvent<Parameters<TdUploadProps['onChange']>>(this, 'change', files, ctx);\n    },\n    emitRemoveEvent(ctx: UploadRemoveContext) {\n      emitEvent<Parameters<TdUploadProps['onRemove']>>(this, 'remove', ctx);\n    },\n    // handle event of preview img dialog event\n    handlePreviewImg(event: MouseEvent, file?: UploadFile) {\n      if (!file || !file.url) return log.error('Uploader', 'Preview Error file');\n\n      this.showImageViewUrl = file.url;\n      this.showImageViewDialog = true;\n      const previewCtx = { file, e: event };\n      emitEvent<Parameters<TdUploadProps['onPreview']>>(this, 'preview', previewCtx);\n    },\n\n    handleChange(event: HTMLInputEvent): void {\n      const { files } = event.target;\n      if (this.tDisabled) return;\n      this.uploadFiles(files);\n      (this.$refs.input as HTMLInputElement).value = '';\n    },\n\n    handleDragChange(files: FileList): void {\n      if (this.tDisabled) return;\n      this.uploadFiles(files);\n    },\n\n    handleSingleRemove(e: MouseEvent) {\n      const changeCtx = { trigger: 'remove' };\n      if (this.loadingFile) this.loadingFile = null;\n      this.errorMsg = '';\n      this.emitChangeEvent([], changeCtx);\n      this.emitRemoveEvent({ e });\n    },\n\n    handleFileInputRemove(e: MouseEvent) {\n      // prevent trigger upload\n      e?.stopPropagation();\n      this.handleSingleRemove(e);\n    },\n\n    handleMultipleRemove(options: UploadRemoveOptions) {\n      const changeCtx = { trigger: 'remove', ...options };\n      let files: UploadFile[];\n      if (!this.canBatchUpload) {\n        files = this.files.concat();\n        files.splice(options.index, 1);\n      } else {\n        // All files remove in batchUpload\n        files = [];\n        options.files = this.files.concat();\n      }\n      this.emitChangeEvent(files, changeCtx);\n      this.emitRemoveEvent(options);\n    },\n\n    handleListRemove(context: FlowRemoveContext) {\n      const { file } = context;\n      const index = findIndex(this.toUploadFiles, (o) => o.name === file?.name);\n      if (index >= 0) {\n        this.toUploadFiles.splice(index, 1);\n      } else {\n        const index = findIndex(this.files, (o) => o.name === file?.name);\n        this.handleMultipleRemove({ e: context.e, index });\n      }\n    },\n\n    uploadFiles(files: FileList) {\n      // 合并上传前则需要清空已上传列表\n      if (this.canBatchUpload && this.files?.length > 0) {\n        const context = { trigger: 'batch-clear' };\n        this.emitChangeEvent([], context);\n      }\n\n      let tmpFiles = [...files];\n      if (this.max) {\n        tmpFiles = tmpFiles.slice(0, this.max - this.files.length);\n        if (tmpFiles.length !== files.length) {\n          console.warn(`TDesign Upload Warn: you can only upload ${this.max} files`);\n        }\n      }\n      tmpFiles.forEach((fileRaw: File) => {\n        let file: UploadFile | File = fileRaw;\n        if (typeof this.format === 'function') {\n          file = this.format(fileRaw);\n        }\n        const uploadFile: UploadFile = {\n          raw: fileRaw,\n          lastModified: fileRaw.lastModified,\n          name: fileRaw.name,\n          size: fileRaw.size,\n          type: fileRaw.type,\n          percent: 0,\n          status: 'waiting',\n          ...file,\n        };\n        const reader = new FileReader();\n        reader.readAsDataURL(fileRaw);\n        reader.onload = (event: ProgressEvent<FileReader>) => {\n          uploadFile.url = event.target.result as string;\n        };\n        this.handleBeforeUpload(file).then((canUpload) => {\n          if (!canUpload) return;\n          const newFiles = this.toUploadFiles.concat();\n          newFiles.push(uploadFile);\n          this.toUploadFiles = !this.allowUploadDuplicateFile\n            ? dedupeFile([...new Set(newFiles)])\n            : [...new Set(newFiles)];\n          this.loadingFile = uploadFile;\n          if (this.autoUpload) {\n            this.upload(uploadFile);\n          }\n        });\n      });\n    },\n\n    async upload(currentFiles: UploadFile | UploadFile[]): Promise<void> {\n      // support allFilesInOneRequest upload，兼容原有的单文件模式\n      const innerFiles = Array.isArray(currentFiles) ? currentFiles : [currentFiles];\n\n      if (!this.action && !this.requestMethod) {\n        console.error('TDesign Upload Error: one of action and requestMethod must be exist.');\n        return;\n      }\n      this.errorMsg = '';\n      innerFiles.forEach((file) => {\n        file.status = 'progress';\n        this.loadingFile = file;\n      });\n\n      // requestMethod 为父组件定义的自定义上传方法\n      if (this.requestMethod) {\n        this.handleRequestMethod(innerFiles);\n      } else {\n        if (this.useMockProgress) {\n          this.handleMockProgress(innerFiles);\n        }\n        const request = xhr;\n        this.xhrReq = request({\n          method: this.method,\n          action: this.action,\n          data: this.data,\n          files: innerFiles,\n          name: this.name,\n          headers: this.headers,\n          withCredentials: this.withCredentials,\n          onError: this.onError,\n          onProgress: this.handleProgress,\n          onSuccess: this.handleSuccess,\n        });\n      }\n    },\n    /** 模拟进度条 Mock Progress */\n    handleMockProgress(files: UploadFile[]) {\n      const timer = setInterval(() => {\n        files.forEach((file) => {\n          if (file.status === 'success' || file.percent >= 99) {\n            clearInterval(timer);\n            return;\n          }\n          file.percent += 1;\n        });\n        const { percent } = files[0];\n        this.handleProgress({\n          files,\n          percent,\n          type: 'mock',\n        });\n      }, 10);\n    },\n\n    handleRequestMethod(files: UploadFile[]) {\n      if (!isFunction(this.requestMethod)) {\n        console.warn('TDesign Upload Warn: `requestMethod` must be a function.');\n        return;\n      }\n      // requestMethod first argument can be file or currentFiles\n      const requestMethodParam = this.uploadInOneRequest ? files : files[0];\n      this.requestMethod(requestMethodParam).then((res: RequestMethodResponse) => {\n        if (!this.handleRequestMethodResponse(res)) return;\n        if (res.status === 'success') {\n          this.handleSuccess({ files, response: res.response });\n        } else if (res.status === 'fail') {\n          const r = res.response || {};\n          this.onError({\n            file: this.uploadInOneRequest ? null : files[0],\n            files,\n            response: { ...r, error: res.error },\n          });\n        }\n      });\n    },\n\n    handleRequestMethodResponse(res: RequestMethodResponse) {\n      if (!res) {\n        console.error('TDesign Upoad Error: `requestMethodResponse` is required.');\n        return false;\n      }\n      if (!res.status) {\n        console.error(\n          'TDesign Upoad Error: `requestMethodResponse.status` is missing, which value is `success` or `fail`',\n        );\n        return false;\n      }\n      if (!['success', 'fail'].includes(res.status)) {\n        console.error('TDesign Upoad Error: `requestMethodResponse.status` must be `success` or `fail`');\n        return false;\n      }\n      if (res.status === 'success' && (!res.response || !res.response.url)) {\n        console.warn(\n          'TDesign Upoad Warn: `requestMethodResponse.response.url` is required, when `status` is `success`',\n        );\n      }\n      return true;\n    },\n\n    multipleUpload(currentFiles: Array<UploadFile>) {\n      if (this.uploadAllFilesInOneRequest) {\n        // 一个请求同时上传多个文件\n        this.upload(currentFiles);\n      } else {\n        currentFiles.forEach((file) => {\n          this.upload(file);\n        });\n      }\n    },\n\n    onError(options: {\n      event?: ProgressEvent;\n      file: UploadFile;\n      files: UploadFile[];\n      response?: any;\n      resFormatted?: boolean;\n    }) {\n      const {\n        event, file, files, response, resFormatted,\n      } = options;\n      const innerFiles = Array.isArray(files) ? files : [file];\n\n      innerFiles.forEach((file) => {\n        file.status = 'fail';\n        this.loadingFile = file;\n      });\n      let res = response;\n      if (!resFormatted && typeof this.formatResponse === 'function') {\n        res = this.formatResponse(response, { file, currentFiles: files });\n      }\n      this.errorMsg = res?.error;\n      const context = {\n        e: event,\n        file: this.uploadInOneRequest ? null : innerFiles[0],\n        currentFiles: innerFiles,\n      };\n      emitEvent<Parameters<TdUploadProps['onFail']>>(this, 'fail', context);\n    },\n\n    handleProgress({\n      event, file, files: currentFiles, percent, type = 'real',\n    }: InnerProgressContext) {\n      const innerFiles = Array.isArray(currentFiles) ? currentFiles : [file];\n      if (innerFiles?.length <= 0) return log.error('Uploader', 'Progress Error files');\n\n      innerFiles.forEach((file) => {\n        file.percent = Math.min(percent, 100);\n        this.loadingFile = file;\n      });\n      const progressCtx = {\n        percent,\n        e: event,\n        file,\n        type,\n        currentFiles: innerFiles,\n      };\n      emitEvent<Parameters<TdUploadProps['onProgress']>>(this, 'progress', progressCtx);\n    },\n\n    handleSuccess({\n      event, file, files: currentFiles, response,\n    }: SuccessContext) {\n      const innerFiles = Array.isArray(currentFiles) ? currentFiles : [file];\n      if (innerFiles?.length <= 0) return log.error('Uploader', 'success no files');\n\n      innerFiles.forEach((file) => {\n        file.status = 'success';\n      });\n\n      let res = response;\n      if (typeof this.formatResponse === 'function') {\n        res = this.formatResponse(response, {\n          file: this.uploadInOneRequest ? null : innerFiles[0],\n          currentFiles: innerFiles,\n        });\n      }\n      // 如果返回值存在 error，则认为当前接口上传失败\n      if (res?.error) {\n        this.onError({\n          event,\n          file: this.uploadInOneRequest ? null : innerFiles[0],\n          files: innerFiles,\n          response: res,\n          resFormatted: true,\n        });\n        return;\n      }\n      if (!this.uploadInOneRequest) {\n        innerFiles[0].url = res.url || innerFiles[0].url;\n      }\n\n      // 从待上传文件队列中移除上传成功的文件\n      this.toUploadFiles = without(this.toUploadFiles, ...innerFiles);\n\n      // 上传成功的文件发送到 files\n      const newFiles = innerFiles.map((file) => ({ ...file, response: res }));\n      // 处理并发回调v-model数据 by brianfzhang\n      this.multiple && this.files.push(...newFiles);\n      const uploadedFiles = this.multiple ? this.files : newFiles;\n\n      const context = { e: event, response: res, trigger: 'upload-success' };\n      this.emitChangeEvent(uploadedFiles, context);\n      const sContext = {\n        file: this.uploadInOneRequest ? null : newFiles[0],\n        fileList: uploadedFiles,\n        currentFiles: newFiles,\n        e: event,\n        response: res,\n      };\n      emitEvent<Parameters<TdUploadProps['onSuccess']>>(this, 'success', sContext);\n      this.loadingFile = null;\n    },\n\n    handlePreview({ file, event }: { file?: UploadFile; event: ProgressEvent }) {\n      return { file, event };\n    },\n\n    triggerUpload() {\n      if (this.tDisabled) return;\n      (this.$refs.input as HTMLInputElement).click();\n    },\n\n    handleDragenter(e: DragEvent) {\n      if (this.tDisabled) return;\n      this.dragActive = true;\n      emitEvent<Parameters<TdUploadProps['onDragenter']>>(this, 'dragenter', { e });\n    },\n\n    handleDragleave(e: DragEvent) {\n      if (this.tDisabled) return;\n      this.dragActive = false;\n      emitEvent<Parameters<TdUploadProps['onDragleave']>>(this, 'dragleave', { e });\n    },\n\n    handleBeforeUpload(file: File | UploadFile): Promise<boolean> {\n      if (typeof this.beforeUpload === 'function') {\n        const r = this.beforeUpload(file);\n        if (r instanceof Promise) return r;\n        return new Promise((resolve) => resolve(r));\n      }\n      return new Promise((resolve) => {\n        if (this.sizeLimit) {\n          resolve(this.handleSizeLimit(file.size));\n        }\n        resolve(true);\n      });\n    },\n\n    handleSizeLimit(fileSize: number) {\n      const sizeLimit: SizeLimitObj = typeof this.sizeLimit === 'number' ? { size: this.sizeLimit, unit: 'KB' } : this.sizeLimit;\n      const rSize = isOverSizeLimit(fileSize, sizeLimit.size, sizeLimit.unit);\n      if (!rSize) {\n        // 有参数 message 则使用，没有就使用全局 global 配置\n        this.errorMsg = sizeLimit.message\n          ? this.t(sizeLimit.message, { sizeLimit: sizeLimit.size })\n          : `${this.t(this.global.sizeLimitMessage, { sizeLimit: sizeLimit.size })} ${sizeLimit.unit}`;\n      }\n      return rSize;\n    },\n\n    cancelUpload() {\n      if (this.loadingFile) {\n        // 如果存在自定义上传方法，则只需要抛出事件，而后由父组件处理取消上传\n        if (this.requestMethod) {\n          emitEvent<Parameters<TdUploadProps['onCancelUpload']>>(this, 'cancel-upload');\n        } else {\n          this.xhrReq && this.xhrReq.abort();\n        }\n        this.loadingFile = null;\n      }\n      (this.$refs.input as HTMLInputElement).value = '';\n    },\n\n    // close image view dialog\n    cancelPreviewImgDialog() {\n      this.showImageViewDialog = false;\n      // Dialog 动画结束后，再清理图片\n      let timer = setTimeout(() => {\n        this.showImageViewUrl = '';\n        clearTimeout(timer);\n        timer = null;\n      }, 500);\n    },\n\n    getDefaultTrigger() {\n      if (this.theme === 'file-input' || this.showUploadList) {\n        return <TButton variant=\"outline\">{this.uploadListTriggerText}</TButton>;\n      }\n      return (\n        <TButton variant=\"outline\">\n          <UploadIcon slot=\"icon\" />\n          {this.files?.length ? '重新上传' : '点击上传'}\n        </TButton>\n      );\n    },\n\n    renderInput() {\n      return (\n        <input\n          ref=\"input\"\n          type=\"file\"\n          disabled={this.tDisabled}\n          onChange={this.handleChange}\n          multiple={this.multiple}\n          accept={this.accept}\n          hidden\n        />\n      );\n    },\n    // 渲染单文件预览：设计稿有两种单文件预览方式，文本型和输入框型。输入框型的需要在右侧显示「删除」按钮\n    renderSingleDisplay(triggerElement: ScopedSlotReturnValue) {\n      return (\n        <SingleFile\n          file={this.files && this.files[0]}\n          loadingFile={this.loadingFile}\n          display={this.theme}\n          remove={this.handleSingleRemove}\n          showUploadProgress={this.showUploadProgress}\n          placeholder={this.placeholder}\n        >\n          <div class={`${name}__trigger`} onclick={this.triggerUpload}>\n            {triggerElement}\n          </div>\n        </SingleFile>\n      );\n    },\n    renderDraggerTrigger() {\n      const params = {\n        dragActive: this.dragActive,\n        uploadingFile: this.multiple ? this.toUploadFiles : this.loadingFile,\n      };\n      const triggerElement = renderContent(this, 'default', 'trigger', { params });\n      return (\n        <Dragger\n          showUploadProgress={this.showUploadProgress}\n          onChange={this.handleDragChange}\n          onDragenter={this.handleDragenter}\n          onDragleave={this.handleDragleave}\n          loadingFile={this.loadingFile}\n          file={this.files && this.files[0]}\n          display={this.theme}\n          cancel={this.cancelUpload}\n          trigger={this.triggerUpload}\n          remove={this.handleSingleRemove}\n          upload={this.upload}\n          autoUpload={this.autoUpload}\n        >\n          {triggerElement}\n        </Dragger>\n      );\n    },\n    renderTrigger() {\n      const defaultNode = this.getDefaultTrigger();\n      return renderContent(this, 'default', 'trigger', defaultNode);\n    },\n    renderCustom(triggerElement: VNode) {\n      return this.draggable ? (\n        this.renderDraggerTrigger()\n      ) : (\n        <div class={`${name}__trigger`} onclick={this.triggerUpload}>\n          {triggerElement}\n        </div>\n      );\n    },\n  },\n\n  render(): VNode {\n    const triggerElement = this.renderTrigger();\n    return (\n      <div class={`${name}`}>\n        {this.renderInput()}\n        {this.showCustomDisplay && this.renderCustom(triggerElement)}\n        {this.showSingleDisplay && this.renderSingleDisplay(triggerElement)}\n        {this.singleDraggable && this.renderDraggerTrigger()}\n        {this.showImgCard && (\n          <ImageCard\n            files={this.files}\n            multiple={this.multiple}\n            remove={this.handleMultipleRemove}\n            trigger={this.triggerUpload}\n            loadingFile={this.loadingFile}\n            toUploadFiles={this.toUploadFiles}\n            max={this.max}\n            onImgPreview={this.handlePreviewImg}\n            disabled={this.tDisabled}\n          ></ImageCard>\n        )}\n        {this.showUploadList && (\n          <FlowList\n            files={this.files}\n            disabled={this.tDisabled}\n            placeholder={this.placeholder}\n            autoUpload={this.autoUpload}\n            toUploadFiles={this.toUploadFiles}\n            remove={this.handleListRemove}\n            showUploadProgress={this.showUploadProgress}\n            allowUploadDuplicateFile={this.allowUploadDuplicateFile}\n            upload={this.multipleUpload}\n            cancel={this.cancelUpload}\n            display={this.theme}\n            batchUpload={this.canBatchUpload}\n            onImgPreview={this.handlePreviewImg}\n            onChange={this.handleDragChange}\n            onDragenter={this.handleDragenter}\n            onDragleave={this.handleDragleave}\n          >\n            <div class={`${name}__trigger`} onclick={this.triggerUpload}>\n              {triggerElement}\n            </div>\n          </FlowList>\n        )}\n        {this.showImgDialog && (\n          <TDialog\n            visible={this.showImageViewDialog}\n            showOverlay\n            width=\"auto\"\n            top=\"10%\"\n            class={`${name}__dialog`}\n            footer={false}\n            header={false}\n            onClose={this.cancelPreviewImgDialog}\n          >\n            <div class={`${prefix}__dialog-body-img-box`}>\n              <img src={this.showImageViewUrl} alt=\"\" />\n            </div>\n          </TDialog>\n        )}\n        {!this.errorMsg && this.showTips && <small class={this.tipsClasses}>{this.tips}</small>}\n        {this.showErrorMsg && <small class={this.errorClasses}>{this.errorMsg}</small>}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","SIZE_MAP","B","KB","MB","GB","isOverSizeLimit","fileSize","sizeLimit","unit","units","KBIndex","index","indexOf","console","warn","join","num","limit","mixins","getConfigReceiverMixins","extend","components","Dragger","SingleFile","ImageCard","FlowList","TDialog","model","prop","event","props","data","formDisabled","dragActive","loadingFile","toUploadFiles","errorMsg","showImageViewDialog","showImageViewUrl","xhrReq","computed","tDisabled","disabled","showTips","theme","hasNoFile","files","length","tips","Boolean","showCustomDisplay","showSingleDisplay","draggable","includes","showImgCard","singleDraggable","multiple","showUploadList","showImgDialog","showErrorMsg","tipsClasses","errorClasses","concat","uploadInOneRequest","uploadAllFilesInOneRequest","canBatchUpload","isBatchUpload","uploadListTriggerText","uploadText","methods","emitChangeEvent","ctx","emitEvent","emitRemoveEvent","handlePreviewImg","file","url","log","error","previewCtx","e","handleChange","target","uploadFiles","$refs","input","value","handleDragChange","handleSingleRemove","changeCtx","trigger","handleFileInputRemove","stopPropagation","handleMultipleRemove","options","splice","handleListRemove","context","findIndex","o","index2","tmpFiles","max","slice","forEach","fileRaw","format","uploadFile","raw","lastModified","size","type","percent","status","reader","FileReader","readAsDataURL","onload","result","handleBeforeUpload","then","canUpload","newFiles","push","allowUploadDuplicateFile","dedupeFile","Set","autoUpload","upload","currentFiles","innerFiles","Array","isArray","action","requestMethod","handleRequestMethod","useMockProgress","handleMockProgress","request","xhr","method","headers","withCredentials","onError","onProgress","handleProgress","onSuccess","handleSuccess","timer","setInterval","clearInterval","isFunction","requestMethodParam","res","handleRequestMethodResponse","response","r","multipleUpload","resFormatted","file2","formatResponse","Math","min","progressCtx","without","map","uploadedFiles","sContext","fileList","handlePreview","triggerUpload","click","handleDragenter","handleDragleave","beforeUpload","Promise","resolve","handleSizeLimit","rSize","message","t","global","sizeLimitMessage","cancelUpload","abort","cancelPreviewImgDialog","setTimeout","clearTimeout","getDefaultTrigger","TButton","renderInput","accept","renderSingleDisplay","triggerElement","showUploadProgress","placeholder","renderDraggerTrigger","params","uploadingFile","renderContent","renderTrigger","defaultNode","renderCustom","render"],"mappings":"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"}