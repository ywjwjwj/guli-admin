{"version":3,"file":"form-item.js","sources":["../../src/form/form-item.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport { NormalizedScopedSlot } from 'vue/types/vnode';\nimport cloneDeep from 'lodash/cloneDeep';\nimport lodashGet from 'lodash/get';\nimport lodashSet from 'lodash/set';\nimport isNil from 'lodash/isNil';\nimport { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseCircleFilledIcon } from 'tdesign-icons-vue';\nimport lodashTemplate from 'lodash/template';\nimport { prefix } from '../config';\nimport { validate } from './form-model';\nimport {\n  Data,\n  FormRule,\n  TdFormItemProps,\n  TdFormProps,\n  ValueType,\n  ValidateTriggerType,\n  AllValidateResult,\n  FormErrorMessage,\n  FormItemValidateMessage,\n} from './type';\nimport props from './form-item-props';\nimport { CLASS_NAMES, FORM_ITEM_CLASS_PREFIX } from './const';\nimport Form from './form';\nimport { ClassName, TNodeReturnValue, Styles } from '../common';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { FormConfig } from '../config-provider/config-receiver';\n\n// type Result = ValidateResult<TdFormProps['data']>;\n\nexport type IconConstructor = typeof ErrorCircleFilledIcon;\n\nexport type FormInstance = InstanceType<typeof Form>;\n\nexport type FormItemValidateResult<T extends Data = Data> = { [key in keyof T]: boolean | AllValidateResult[] };\n\nexport const enum VALIDATE_STATUS {\n  TO_BE_VALIDATED = 'not',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n}\n\nexport interface FormItemContructor extends Vue {\n  form: FormInstance;\n}\n\nexport default mixins(getConfigReceiverMixins<FormItemContructor, FormConfig>('form')).extend({\n  name: 'TFormItem',\n\n  props: { ...props },\n\n  inject: {\n    form: { default: undefined },\n  },\n\n  data() {\n    return {\n      // 校验不通过信息列表\n      errorList: [],\n      // 校验通过显示的内容\n      successList: [],\n      // 当前校验状态 未校验、校验通过、校验不通过\n      verifyStatus: VALIDATE_STATUS.TO_BE_VALIDATED,\n      resetValidating: false as boolean,\n      needResetField: false as boolean,\n      initialValue: undefined as ValueType,\n    };\n  },\n\n  computed: {\n    needErrorMessage(): Boolean {\n      if (typeof this.showErrorMessage === 'boolean') return this.showErrorMessage;\n\n      const parent = this.form;\n      return parent?.showErrorMessage;\n    },\n    classes(): ClassName {\n      return [\n        CLASS_NAMES.formItem,\n        FORM_ITEM_CLASS_PREFIX + this.name,\n        {\n          [CLASS_NAMES.formItemWithHelp]: this.help,\n          [CLASS_NAMES.formItemWithExtra]: this.renderTipsInfo(),\n        },\n      ];\n    },\n    labelClasses(): ClassName {\n      const parent = this.form;\n      const labelAlign = isNil(this.labelAlign) ? parent?.labelAlign : this.labelAlign;\n      const labelWidth = isNil(this.labelWidth) ? parent?.labelWidth : this.labelWidth;\n\n      return [\n        CLASS_NAMES.label,\n        {\n          [`${prefix}-form__label--required`]: this.needRequiredMark,\n          [`${prefix}-form__label--colon`]: this.hasColon,\n          [`${prefix}-form__label--top`]: labelAlign === 'top' || !labelWidth,\n          [`${prefix}-form__label--left`]: labelAlign === 'left' && labelWidth,\n          [`${prefix}-form__label--right`]: labelAlign === 'right' && labelWidth,\n        },\n      ];\n    },\n    errorClasses(): string {\n      if (!this.needErrorMessage) return '';\n      if (this.verifyStatus === VALIDATE_STATUS.SUCCESS) {\n        return this.successBorder ? [CLASS_NAMES.success, CLASS_NAMES.successBorder].join(' ') : CLASS_NAMES.success;\n      }\n      const list = this.errorList;\n      if (!list.length) return;\n      const type = list[0].type || 'error';\n      return type === 'error' ? CLASS_NAMES.error : CLASS_NAMES.warning;\n    },\n\n    disabled(): boolean {\n      return this.form.disabled;\n    },\n\n    contentClasses(): ClassName {\n      const getErrorClass: string = this.errorClasses;\n      return [CLASS_NAMES.controls, getErrorClass];\n    },\n    contentStyle(): Styles {\n      const parent = this.form;\n      const labelAlign = isNil(this.labelAlign) ? parent?.labelAlign : this.labelAlign;\n      const labelWidth = isNil(this.labelWidth) ? parent?.labelWidth : this.labelWidth;\n      let contentStyle = {};\n      if (labelWidth && labelAlign !== 'top') {\n        if (typeof labelWidth === 'number') {\n          contentStyle = { marginLeft: `${labelWidth}px` };\n        } else {\n          contentStyle = { marginLeft: labelWidth };\n        }\n      }\n\n      return contentStyle;\n    },\n    value(): ValueType {\n      const parent = this.form;\n      return parent && parent.data && lodashGet(parent.data, this.name);\n    },\n    hasColon(): boolean {\n      const parent = this.form;\n      return !!(parent && parent.colon && this.getLabelContent());\n    },\n    needRequiredMark(): boolean {\n      const { requiredMark } = this.$props;\n      if (typeof requiredMark === 'boolean') return requiredMark;\n      const parent = this.form;\n      const parentRequiredMark = parent?.requiredMark === undefined ? this.global.requiredMark : parent.requiredMark;\n      const isRequired = this.innerRules.filter((rule) => rule.required).length > 0;\n      return Boolean(parentRequiredMark && isRequired);\n    },\n    innerRules(): FormRule[] {\n      const parent = this.form;\n      if (this.rules?.length) return this.rules || [];\n      if (!this.name) return [];\n      const index = this.name.lastIndexOf('.') || -1;\n      const pRuleName = this.name.slice(index + 1);\n      return lodashGet(parent?.rules, this.name) || lodashGet(parent?.rules, pRuleName) || [];\n    },\n    errorMessages(): FormErrorMessage {\n      return this.form.errorMessage ?? this.global.errorMessage;\n    },\n  },\n\n  watch: {\n    value() {\n      this.validate('change');\n    },\n  },\n\n  created() {\n    this.addWatch();\n  },\n\n  mounted() {\n    this.initialValue = cloneDeep(this.value);\n    this.form.$emit('form-item-created', this);\n  },\n\n  beforeDestroy() {\n    this.form.$emit('form-item-destroyed', this);\n  },\n\n  methods: {\n    addWatch() {\n      if (this.disabled === undefined) return;\n      this.$watch(\n        'disabled',\n        (val) => {\n          this.$nextTick(() => {\n            this.setChildrenDisabled(val, this.$children);\n          });\n        },\n        { immediate: true },\n      );\n    },\n    // 设置表单内组件的禁用状态\n    setChildrenDisabled(disabled: boolean, children: Vue[]) {\n      children.forEach((item) => {\n        if (this.form.controlledComponents?.includes(item.$options.name)) {\n          // eslint-disable-next-line no-param-reassign\n          item.$data.formDisabled = disabled;\n        }\n        if (item.$children?.length) {\n          this.setChildrenDisabled(disabled, item.$children);\n        }\n      });\n    },\n    // 设置表单错误信息\n    setValidateMessage(validateMessage: FormItemValidateMessage[]) {\n      if (!validateMessage || !Array.isArray(validateMessage)) return;\n      if (validateMessage.length === 0) {\n        this.errorList = [];\n        this.verifyStatus = VALIDATE_STATUS.SUCCESS;\n        return;\n      }\n      this.errorList = validateMessage;\n      this.verifyStatus = VALIDATE_STATUS.FAIL;\n    },\n    // T 表示表单数据的类型\n    async validate<T>(trigger: ValidateTriggerType): Promise<FormItemValidateResult<T>> {\n      this.resetValidating = true;\n      // 过滤不需要校验的规则\n      const rules = trigger === 'all' ? this.innerRules : this.innerRules.filter((item) => (item.trigger || 'change') === trigger);\n      // 校验结果，包含正确的校验信息\n      const r = await validate(this.value, rules);\n      const errorList = r\n        .filter((item) => item.result !== true)\n        .map((item) => {\n          Object.keys(item).forEach((key) => {\n            if (typeof item.message === 'undefined' && this.errorMessages[key]) {\n              const compiled = lodashTemplate(this.errorMessages[key]);\n              // eslint-disable-next-line no-param-reassign\n              item.message = compiled({\n                name: this.label,\n                validate: item[key],\n              });\n            }\n          });\n          return item;\n        });\n      this.errorList = errorList;\n      // 仅有自定义校验方法才会存在 successList\n      this.successList = r.filter((item) => item.result === true && item.message && item.type === 'success');\n      // 根据校验结果设置校验状态\n      if (rules.length) {\n        this.verifyStatus = errorList.length ? VALIDATE_STATUS.FAIL : VALIDATE_STATUS.SUCCESS;\n      } else {\n        this.verifyStatus = VALIDATE_STATUS.TO_BE_VALIDATED;\n      }\n      // 重置处理\n      if (this.needResetField) {\n        this.resetHandler();\n      }\n      this.resetValidating = false;\n      return {\n        [this.name]: errorList.length === 0 ? true : r,\n      } as FormItemValidateResult<T>;\n    },\n    getLabelContent(): TNodeReturnValue {\n      if (typeof this.label === 'function') {\n        return this.label(this.$createElement);\n      }\n      if (typeof this.$scopedSlots.label === 'function') {\n        return this.$scopedSlots.label(null);\n      }\n      return this.label;\n    },\n    getLabel(): TNodeReturnValue {\n      const parent = this.form;\n      const labelWidth = isNil(this.labelWidth) ? parent?.labelWidth : this.labelWidth;\n      const labelAlign = isNil(this.labelAlign) ? parent?.labelAlign : this.labelAlign;\n      if (Number(labelWidth) === 0) return;\n\n      let labelStyle = {};\n      if (labelWidth && labelAlign !== 'top') {\n        if (typeof labelWidth === 'number') {\n          labelStyle = { width: `${labelWidth}px` };\n        } else {\n          labelStyle = { width: labelWidth };\n        }\n      }\n\n      return (\n        <div class={this.labelClasses} style={labelStyle}>\n          <label for={this.for}>{this.getLabelContent()}</label>\n        </div>\n      );\n    },\n    renderTipsInfo(): VNode {\n      let helpVNode: VNode;\n      if (this.help) {\n        helpVNode = <div class={CLASS_NAMES.help}>{this.help}</div>;\n      }\n      const list = this.errorList;\n      if (this.needErrorMessage && list && list[0] && list[0].message) {\n        return <p class={CLASS_NAMES.extra}>{list[0].message}</p>;\n      }\n      if (this.successList.length) {\n        return <p class={CLASS_NAMES.extra}>{this.successList[0].message}</p>;\n      }\n      return helpVNode;\n    },\n    getDefaultIcon(): TNodeReturnValue {\n      const resultIcon = (Icon: IconConstructor) => (\n        <span class={CLASS_NAMES.status}>\n          <Icon></Icon>\n        </span>\n      );\n      const list = this.errorList;\n      if (this.verifyStatus === VALIDATE_STATUS.SUCCESS) {\n        return resultIcon(CheckCircleFilledIcon);\n      }\n      if (list && list[0]) {\n        const type = list[0].type || 'error';\n        const icon = {\n          error: CloseCircleFilledIcon,\n          warning: ErrorCircleFilledIcon,\n        }[type] || CheckCircleFilledIcon;\n        return resultIcon(icon);\n      }\n      return null;\n    },\n    getIcon(\n      statusIcon: TdFormProps['statusIcon'] | TdFormItemProps['statusIcon'],\n      slotStatusIcon: NormalizedScopedSlot,\n      props?: TdFormItemProps,\n    ): TNodeReturnValue {\n      const resultIcon = (otherContent?: TNodeReturnValue) => <span class={CLASS_NAMES.status}>{otherContent}</span>;\n      if (statusIcon === true) {\n        return this.getDefaultIcon();\n      }\n      if (typeof statusIcon === 'function') {\n        return resultIcon(statusIcon(this.$createElement, props));\n      }\n      if (typeof slotStatusIcon === 'function') {\n        return resultIcon(slotStatusIcon(null));\n      }\n      return null;\n    },\n    getSuffixIcon(): TNodeReturnValue {\n      const parent = this.form;\n      const { statusIcon } = this;\n      const slotStatusIcon = this.$scopedSlots.statusIcon;\n      const parentStatusIcon = parent.statusIcon;\n      const parentSlotStatusIcon = parent.$scopedSlots.statusIcon;\n      if (statusIcon === false) return;\n      let resultIcon: TNodeReturnValue = this.getIcon(statusIcon, slotStatusIcon);\n      if (resultIcon) return resultIcon;\n      if (resultIcon === false) return;\n      resultIcon = this.getIcon(parentStatusIcon, parentSlotStatusIcon, this.$props);\n      if (resultIcon) return resultIcon;\n    },\n    getEmptyValue(): ValueType {\n      const parent = this.form;\n      const type = Object.prototype.toString.call(lodashGet(parent.data, this.name));\n      let emptyValue: ValueType;\n      if (type === '[object String]') {\n        emptyValue = '';\n      }\n      if (type === '[object Array]') {\n        emptyValue = [];\n      }\n      if (type === '[object Object]') {\n        emptyValue = {};\n      }\n      return emptyValue;\n    },\n    resetField(): void {\n      const parent = this.form;\n      if (!this.name) {\n        return;\n      }\n      if (parent.resetType === 'empty') {\n        lodashSet(parent.data, this.name, this.getEmptyValue());\n      }\n      if (parent.resetType === 'initial') {\n        lodashSet(parent.data, this.name, this.initialValue);\n      }\n      Vue.nextTick(() => {\n        if (this.resetValidating) {\n          this.needResetField = true;\n        } else {\n          this.resetHandler();\n        }\n      });\n    },\n    resetHandler(): void {\n      this.needResetField = false;\n      this.errorList = [];\n      this.successList = [];\n      this.verifyStatus = VALIDATE_STATUS.TO_BE_VALIDATED;\n    },\n  },\n\n  render(): VNode {\n    return (\n      <div class={this.classes}>\n        {this.getLabel()}\n        <div class={this.contentClasses} style={this.contentStyle}>\n          <div class={CLASS_NAMES.controlsContent}>\n            {this.$slots.default}\n            {this.getSuffixIcon()}\n          </div>\n          {this.renderTipsInfo()}\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["VALIDATE_STATUS","VALIDATE_STATUS2","mixins","getConfigReceiverMixins","extend","name","props","inject","form","data","errorList","successList","verifyStatus","resetValidating","needResetField","initialValue","computed","needErrorMessage","showErrorMessage","parent","classes","CLASS_NAMES","formItem","FORM_ITEM_CLASS_PREFIX","formItemWithHelp","help","formItemWithExtra","renderTipsInfo","labelClasses","labelAlign","isNil","labelWidth","label","prefix","needRequiredMark","hasColon","errorClasses","successBorder","success","join","list","length","type","error","warning","disabled","contentClasses","getErrorClass","controls","contentStyle","marginLeft","value","lodashGet","colon","getLabelContent","requiredMark","$props","parentRequiredMark","global","isRequired","innerRules","filter","rule","required","Boolean","rules","index","lastIndexOf","pRuleName","slice","errorMessages","errorMessage","watch","validate","created","addWatch","mounted","cloneDeep","$emit","beforeDestroy","methods","$watch","val","$nextTick","setChildrenDisabled","$children","immediate","children","forEach","item","controlledComponents","includes","$options","$data","formDisabled","setValidateMessage","validateMessage","Array","isArray","trigger","r","result","map","Object","keys","key","message","compiled","lodashTemplate","resetHandler","$createElement","$scopedSlots","getLabel","Number","labelStyle","width","helpVNode","extra","getDefaultIcon","resultIcon","Icon","status","CheckCircleFilledIcon","icon","CloseCircleFilledIcon","ErrorCircleFilledIcon","getIcon","statusIcon","slotStatusIcon","props2","otherContent","getSuffixIcon","parentStatusIcon","parentSlotStatusIcon","getEmptyValue","prototype","toString","call","emptyValue","resetField","resetType","lodashSet","Vue","nextTick","render","controlsContent","$slots"],"mappings":"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"}