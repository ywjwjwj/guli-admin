{"version":3,"file":"index.js","sources":["../../../src/table/base-table/index.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport throttle from 'lodash/throttle';\nimport mixins from '../../utils/mixins';\nimport getConfigReceiverMixins, { TableConfig } from '../../config-provider/config-receiver';\nimport { prefix } from '../../config';\nimport flatColumns from '../util/props-util';\nimport baseTableProps from '../base-table-props';\nimport { ClassName } from '../../common';\nimport {\n  DataType, BaseTableCol, TdBaseTableProps, RowEventContext,\n} from '../type';\nimport TableBody from './table-body';\nimport TableHeader from './table-header';\nimport TableColGroup from './col-group';\nimport Pagination from '../../pagination';\nimport Loading from '../../loading';\nimport { debounce, getScrollDirection, SCROLL_DIRECTION } from '../util/common';\nimport { PageInfo } from '../../pagination/type';\nimport { renderTNodeJSX } from '../../utils/render-tnode';\nimport { emitEvent } from '../../utils/event';\nimport { EventNameWithKebab } from '../util/interface';\nimport { SIZE_CLASSNAMES } from '../../utils/classnames';\nimport primaryTableProps from '../primary-table-props';\n\ntype PageChangeContext = Parameters<TdBaseTableProps['onPageChange']>;\n\nexport default mixins(getConfigReceiverMixins<Vue, TableConfig>('table')).extend({\n  name: 'TBaseTable',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: {\n    ...baseTableProps,\n    selectedRowKeys: primaryTableProps.selectedRowKeys,\n    provider: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      scrollableToLeft: false,\n      scrollableToRight: false,\n      scrollBarWidth: 0,\n      // 用于兼容处理 Pagination 的非受控属性（非受控属性仅有 change 事件变化，无 props 变化，因此只需监听事件）\n      defaultCurrent: 0,\n      // 用于兼容处理 Pagination 的非受控属性\n      defaultPageSize: 0,\n      useFixedHeader: false,\n    };\n  },\n  computed: {\n    // this.defaultCurrent 属于分页组件抛出的事件参数，非受控的情况也会有该事件触发\n    // this.pagination.defaultCurrent 为表格组件传入的非受控属性\n    current(): number {\n      return this.pagination?.current || this.defaultCurrent || this.pagination?.defaultCurrent;\n    },\n    pageSize(): number {\n      return this.pagination?.pageSize || this.defaultPageSize || this.pagination?.defaultPageSize;\n    },\n    dataSource(): Array<DataType> {\n      if (!this.hasPagination) return this.data.slice(0);\n      const { current, pageSize } = this;\n      if (this.data.length > pageSize && !this.disableDataSort) {\n        return this.data.slice((current - 1) * pageSize, current * pageSize);\n      }\n      return this.data;\n    },\n    flattedColumns(): Array<BaseTableCol> {\n      return flatColumns(this.columns);\n    },\n    isEmpty(): boolean {\n      return (!this.dataSource || this.dataSource.length === 0) && !this.loading;\n    },\n    hasFixedColumns(): boolean {\n      const { columns } = this;\n      return columns.some((item: BaseTableCol) => item.fixed === 'right' || item.fixed === 'left');\n    },\n    hasPagination(): boolean {\n      return !!this.pagination;\n    },\n    isLoading(): boolean {\n      return !!this.loading;\n    },\n    tableHeight(): number | string {\n      const {\n        height, maxHeight, useFixedHeader, isEmpty,\n      } = this;\n      if (isEmpty) {\n        return 'auto';\n      }\n      if (height !== 'auto' && height) {\n        return height;\n      }\n      if (maxHeight && useFixedHeader) {\n        return maxHeight;\n      }\n      return 'auto';\n    },\n    // 是否固定表头\n    fixedHeader(): boolean {\n      const { tableHeight } = this;\n      return tableHeight !== 'auto';\n    },\n    // common class\n    commonClass(): ClassName {\n      const classes = [\n        `${prefix}-table`,\n        {\n          [SIZE_CLASSNAMES.small]: this.size === 'small',\n          [SIZE_CLASSNAMES.large]: this.size === 'large',\n          [`${prefix}-table--bordered`]: this.bordered,\n          [`${prefix}-table--striped`]: this.stripe,\n          [`${prefix}-table--hoverable`]: this.hover,\n          [`${prefix}-table__row--draggable`]: this.provider.sortOnRowDraggable,\n          [`${prefix}-table-table--align-top`]: this.verticalAlign === 'top',\n          [`${prefix}-table-table--align-bottom`]: this.verticalAlign === 'bottom',\n          [`${prefix}-table__cell--fixed`]: this.hasFixedColumns,\n          [`${prefix}-table--has-fixed`]: this.hasFixedColumns,\n          [`${prefix}-table__header--fixed`]: this.fixedHeader,\n        },\n      ];\n      return classes;\n    },\n    usePadding(): boolean {\n      return this.fixedHeader || this.scrollableToRight || this.scrollableToLeft;\n    },\n  },\n  methods: {\n    // 检查是否还可以向左或者向右滚动\n    checkScrollableToLeftOrRight() {\n      const scrollContainer = this.$refs[this.fixedHeader ? 'scrollBody' : 'tableContent'] as HTMLElement;\n      if (!scrollContainer) return;\n      const { scrollLeft, scrollWidth, clientWidth } = scrollContainer;\n      this.scrollableToLeft = scrollLeft > 0;\n      this.scrollableToRight = scrollLeft + clientWidth < scrollWidth;\n    },\n    // 窗口大小变化时横向滚动条可能出现或消失，故检查滚动条状态;\n    addWindowResizeEventListener() {\n      const checkScrollableToLeftOrRight = debounce(this.checkScrollableToLeftOrRight);\n      window.addEventListener('resize', checkScrollableToLeftOrRight);\n      this.$once('hook:beforeDestroy', () => window.removeEventListener('resize', checkScrollableToLeftOrRight));\n    },\n    renderHeader(): VNode {\n      const { columns, $scopedSlots: scopedSlots, bordered } = this;\n      return <TableHeader scopedSlots={scopedSlots} columns={columns} bordered={bordered} />;\n    },\n    registerRowEvents() {\n      const events = {};\n      EventNameWithKebab.forEach((eventName) => {\n        events[eventName] = (params: RowEventContext<any>) => {\n          emitEvent(this, eventName, params);\n        };\n      });\n      return events;\n    },\n    renderBody(): VNode {\n      const { $listeners: listener, $scopedSlots: scopedSlots } = this;\n      const rowEvents = this.registerRowEvents();\n      const props = {\n        props: {\n          ...this.$props,\n          rowKey: this.rowKey,\n          data: this.dataSource,\n          provider: this.provider,\n          columns: this.flattedColumns,\n          rowClassName: this.rowClassName,\n          current: this.current,\n          selectedRowKeys: this.selectedRowKeys,\n          rowspanAndColspan: this.rowspanAndColspan,\n          firstFullRow: this.firstFullRow,\n          lastFullRow: this.lastFullRow,\n        },\n        scopedSlots,\n        on: {\n          ...listener,\n          ...rowEvents,\n        },\n      };\n      return <TableBody {...props} />;\n    },\n    renderEmptyTable(): VNode {\n      if (this.empty === null) return null;\n      const useLocale = !this.empty && !this.$scopedSlots.empty;\n      const { height } = this;\n      const wrapperStyle: { height?: string | number } = {};\n      if (height !== 'auto') {\n        wrapperStyle.height = isNaN(Number(height)) ? height : `${height}px`;\n      }\n      return (\n        <div style={wrapperStyle} class={`${prefix}-table__empty`}>\n          {useLocale ? this.global.empty : renderTNodeJSX(this, 'empty')}\n        </div>\n      );\n    },\n    renderPagination(): VNode {\n      const paginationProps = this.pagination;\n      return (\n        <div class={`${prefix}-table__pagination`}>\n          <Pagination\n            props={{ ...paginationProps }}\n            {...{\n              on: {\n                change: (pageInfo: PageInfo) => {\n                  const { current, pageSize } = pageInfo;\n                  emitEvent<PageChangeContext>(this, 'page-change', pageInfo, this.dataSource);\n                  this.defaultCurrent = current;\n                  this.defaultPageSize = pageSize;\n                },\n              },\n            }}\n          />\n        </div>\n      );\n    },\n    renderTableWithFixedHeader(): Array<VNode> {\n      const fixedTable: Array<VNode> = [];\n      const {\n        columns,\n        provider: { asyncLoadingProps },\n        tableLayout,\n        scrollBarWidth,\n        hasFixedColumns,\n        tableHeight,\n        usePadding,\n      } = this;\n      // handle scroll\n      const handleScroll = throttle((e: Event) => {\n        const { target } = e;\n        const { scrollLeft } = target as HTMLElement;\n        (this.$refs.scrollHeader as HTMLElement).scrollLeft = scrollLeft;\n        this.handleScroll(e as WheelEvent);\n      }, 10);\n      //  fixed table header\n      const paddingRight = `${scrollBarWidth}px`;\n      const headerContainerStyle = columns.length > 1 && usePadding ? { paddingRight } : {};\n      fixedTable.push(\n        <div class={`${prefix}-table__header`} style={headerContainerStyle} ref=\"scrollHeader\">\n          <table style={{ tableLayout }}>\n            <TableColGroup columns={columns} />\n            {this.renderHeader()}\n          </table>\n        </div>,\n      );\n      const containerStyle = {\n        height: isNaN(Number(tableHeight)) ? tableHeight : `${Number(tableHeight)}px`,\n        width: hasFixedColumns ? '100%' : undefined,\n      };\n      // fixed table body\n      fixedTable.push(\n        <div\n          class={`${prefix}-table__body`}\n          style={containerStyle}\n          {...asyncLoadingProps}\n          ref=\"scrollBody\"\n          onScroll={handleScroll}\n        >\n          <table ref=\"table\" style={{ tableLayout }}>\n            <TableColGroup columns={columns} />\n            {this.renderBody()}\n            {this.renderFooter()}\n          </table>\n        </div>,\n      );\n      return fixedTable;\n    },\n    renderLoadingContent(): VNode {\n      return renderTNodeJSX(this, 'loading', { defaultNode: <div /> });\n    },\n    renderFooter() {\n      const {\n        flattedColumns: { length: colspan },\n      } = this;\n      const footerContent: VNode = renderTNodeJSX(this, 'footer');\n      return footerContent ? (\n        <tfoot>\n          <tr>\n            <td colspan={colspan}>{footerContent}</td>\n          </tr>\n        </tfoot>\n      ) : null;\n    },\n    handleScroll(e: WheelEvent) {\n      this.checkScrollableToLeftOrRight();\n      const { scrollLeft, scrollTop } = e.target as HTMLElement;\n      const direction = getScrollDirection(scrollLeft, scrollTop);\n      if (direction !== SCROLL_DIRECTION.UNKNOWN) {\n        const scrollListenerName = direction === SCROLL_DIRECTION.X ? 'scroll-x' : 'scroll-y';\n        const scrollParams = {\n          e,\n        };\n        emitEvent(this, scrollListenerName, scrollParams);\n      }\n    },\n    checkMaxHeight() {\n      const { maxHeight } = this;\n      if (maxHeight && (this.$refs.tableContent as HTMLElement).clientHeight > maxHeight) {\n        this.useFixedHeader = true;\n      }\n    },\n  },\n  render() {\n    const {\n      hasPagination,\n      commonClass,\n      fixedHeader,\n      columns,\n      tableLayout,\n      isLoading,\n      isEmpty,\n      useFixedHeader,\n      hasFixedColumns,\n    } = this;\n    const body: Array<VNode> = [];\n    // colgroup\n    const tableColGroup = <TableColGroup columns={columns} />;\n    // header\n    const tableHeader = this.renderHeader();\n    // table content\n    const tableContent: Array<VNode> = [tableColGroup, tableHeader];\n    // fixed table\n    let fixedTableContent: Array<VNode>;\n    // 渲染带有固定列的表格或者固定表头的表格\n    if (fixedHeader || useFixedHeader) {\n      fixedTableContent = this.renderTableWithFixedHeader();\n    } else {\n      // table body\n      tableContent.push(this.renderBody());\n      tableContent.push(this.renderFooter());\n    }\n    if (isEmpty) {\n      const empty = this.renderEmptyTable();\n      empty && body.push(empty);\n    }\n    // 渲染分页\n    if (hasPagination) {\n      body.push(this.renderPagination());\n    }\n    const handleScroll = throttle(this.handleScroll, 100);\n    const tableContentClass = [\n      `${prefix}-table__content`,\n      {\n        [`${prefix}-table__content--scrollable-to-right`]: this.scrollableToRight,\n        [`${prefix}-table__content--scrollable-to-left`]: this.scrollableToLeft,\n      },\n    ];\n    let width;\n    const { tableContent: tableContentEl, table: tableEl } = this.$refs as Record<string, HTMLElement>;\n    if (!hasFixedColumns && tableContentEl && tableContentEl.clientWidth < tableEl.clientWidth) {\n      width = `${tableEl.clientWidth}px`;\n    }\n    return (\n      <div class={commonClass} style={{ width }}>\n        {renderTNodeJSX(this, 'topContent')}\n        <Loading loading={isLoading} showOverlay text={this.renderLoadingContent}>\n          <div ref=\"tableContent\" class={tableContentClass} onScroll={handleScroll}>\n            {fixedTableContent || (\n              <table ref=\"table\" style={{ tableLayout }}>\n                {tableContent}\n              </table>\n            )}\n          </div>\n          {body}\n        </Loading>\n      </div>\n    );\n  },\n  updated() {\n    this.checkMaxHeight();\n  },\n\n  mounted() {\n    if (this.hasFixedColumns) {\n      // 首次检查滚动条状态；设置settimeout 是为了等待父组件渲染完\n      let timer = setTimeout(() => {\n        this.checkScrollableToLeftOrRight();\n        clearTimeout(timer);\n        timer = null;\n      }, 0);\n      this.addWindowResizeEventListener();\n    }\n\n    const scrollDiv = document.createElement('div');\n    scrollDiv.style.cssText = `\n      width: 99px;\n      height: 99px;\n      overflow: scroll;\n      position: absolute;\n      top: -9999px;`;\n    scrollDiv.classList.add('scrollbar');\n    document.body.appendChild(scrollDiv);\n    this.scrollBarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    this.checkMaxHeight();\n  },\n});\n"],"names":["mixins","getConfigReceiverMixins","extend","name","model","prop","event","props","baseTableProps","selectedRowKeys","primaryTableProps","provider","type","Object","data","scrollableToLeft","scrollableToRight","scrollBarWidth","defaultCurrent","defaultPageSize","useFixedHeader","computed","current","pagination","pageSize","dataSource","hasPagination","slice","length","disableDataSort","flattedColumns","flatColumns","columns","isEmpty","loading","hasFixedColumns","some","item","fixed","isLoading","tableHeight","height","maxHeight","fixedHeader","commonClass","classes","prefix","SIZE_CLASSNAMES","small","size","_defineProperty","large","bordered","stripe","hover","sortOnRowDraggable","verticalAlign","usePadding","methods","checkScrollableToLeftOrRight","scrollContainer","$refs","scrollLeft","scrollWidth","clientWidth","addWindowResizeEventListener","debounce","window","addEventListener","$once","removeEventListener","renderHeader","scopedSlots","$scopedSlots","TableHeader","registerRowEvents","events","EventNameWithKebab","forEach","eventName","params","emitEvent","renderBody","listener","$listeners","rowEvents","$props","rowKey","rowClassName","rowspanAndColspan","firstFullRow","lastFullRow","on","TableBody","_mergeJSXProps","renderEmptyTable","empty","useLocale","wrapperStyle","isNaN","Number","global","renderTNodeJSX","renderPagination","paginationProps","Pagination","_mergeJSXProps2","change","pageInfo","renderTableWithFixedHeader","fixedTable","asyncLoadingProps","tableLayout","handleScroll","throttle","e","target","scrollHeader","paddingRight","headerContainerStyle","push","TableColGroup","containerStyle","width","_mergeJSXProps3","renderFooter","renderLoadingContent","defaultNode","colspan","footerContent","scrollTop","direction","getScrollDirection","SCROLL_DIRECTION","UNKNOWN","scrollListenerName","X","scrollParams","checkMaxHeight","tableContent","clientHeight","render","body","tableColGroup","tableHeader","fixedTableContent","tableContentClass","tableContentEl","tableEl","table","Loading","updated","mounted","timer","setTimeout","clearTimeout","scrollDiv","document","createElement","style","cssText","classList","add","appendChild","offsetWidth","removeChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,iBAAeA,uBAAM,CAACC,wCAAuB,CAAC,OAAD,CAAxB,CAAN,CAAyCC,MAAzC,CAAgD;AAC7DC,EAAAA,IAAI,EAAE,YADuD;AAE7DC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,KAAK,EAAE,QAAA;AAFF,GAFsD;AAM7DC,EAAAA,KAAK,kCACAC,+BADA,CAAA,EAAA,EAAA,EAAA;AAEHC,IAAAA,eAAe,EAAEC,kCAAiB,CAACD,eAFhC;AAGHE,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEC,MADE;AAAA,MAEE,SAAA,EAAA,SAAA,QAAA,GAAA;AACR,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;AAJO,KAAA;AAHP,GANwD,CAAA;AAgB7DC,EAAAA,IAhB6D,EAgBtD,SAAA,IAAA,GAAA;AACL,IAAO,OAAA;AACLC,MAAAA,gBAAgB,EAAE,KADb;AAELC,MAAAA,iBAAiB,EAAE,KAFd;AAGLC,MAAAA,cAAc,EAAE,CAHX;AAILC,MAAAA,cAAc,EAAE,CAJX;AAKLC,MAAAA,eAAe,EAAE,CALZ;AAMLC,MAAAA,cAAc,EAAE,KAAA;AANX,KAAP,CAAA;AAQD,GAzB4D;AA0B7DC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,EACE,SAAA,OAAA,GAAA;AAAA,MAAA,IAAA,gBAAA,EAAA,iBAAA,CAAA;;AACR,MAAA,OAAO,CAAKC,CAAAA,gBAAAA,GAAAA,IAAAA,CAAAA,UAAL,MAAiBD,IAAAA,IAAAA,gBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAAA,CAAAA,OAAjB,KAA4B,IAAA,CAAKJ,cAAjC,KAAA,CAAA,iBAAA,GAAmD,IAAKK,CAAAA,UAAxD,MAAmD,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiBL,cAApE,CAAP,CAAA;AACD,KAHO;AAIRM,IAAAA,QAJQ,EAIG,SAAA,QAAA,GAAA;AAAA,MAAA,IAAA,iBAAA,EAAA,iBAAA,CAAA;;AACT,MAAA,OAAO,CAAKD,CAAAA,iBAAAA,GAAAA,IAAAA,CAAAA,UAAL,MAAiBC,IAAAA,IAAAA,iBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAAA,CAAAA,QAAjB,KAA6B,IAAA,CAAKL,eAAlC,KAAA,CAAA,iBAAA,GAAqD,IAAKI,CAAAA,UAA1D,MAAqD,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAiBJ,eAAtE,CAAP,CAAA;AACD,KANO;AAORM,IAAAA,UAPQ,EAOK,SAAA,UAAA,GAAA;AACX,MAAI,IAAA,CAAC,IAAKC,CAAAA,aAAV,EACE,OAAO,IAAKZ,CAAAA,IAAL,CAAUa,KAAV,CAAgB,CAAhB,CAAP,CAAA;AACF,MAAA,IAAQL,OAAR,GAA8B,IAA9B,CAAQA,OAAR;AAAA,UAAiBE,QAAjB,GAA8B,IAA9B,CAAiBA,QAAjB,CAAA;;AACA,MAAI,IAAA,IAAA,CAAKV,IAAL,CAAUc,MAAV,GAAmBJ,QAAnB,IAA+B,CAAC,IAAKK,CAAAA,eAAzC,EAA0D;AACxD,QAAA,OAAO,IAAKf,CAAAA,IAAL,CAAUa,KAAV,CAAgB,CAACL,OAAO,GAAG,CAAX,IAAgBE,QAAhC,EAA0CF,OAAO,GAAGE,QAApD,CAAP,CAAA;AACD,OAAA;;AACD,MAAA,OAAO,KAAKV,IAAZ,CAAA;AACD,KAfO;AAgBRgB,IAAAA,cAhBQ,EAgBS,SAAA,cAAA,GAAA;AACf,MAAA,OAAOC,+BAAW,CAAC,IAAKC,CAAAA,OAAN,CAAlB,CAAA;AACD,KAlBO;AAmBRC,IAAAA,OAnBQ,EAmBE,SAAA,OAAA,GAAA;AACR,MAAA,OAAO,CAAC,CAAC,IAAKR,CAAAA,UAAN,IAAoB,IAAKA,CAAAA,UAAL,CAAgBG,MAAhB,KAA2B,CAAhD,KAAsD,CAAC,KAAKM,OAAnE,CAAA;AACD,KArBO;AAsBRC,IAAAA,eAtBQ,EAsBU,SAAA,eAAA,GAAA;AAChB,MAAA,IAAQH,OAAR,GAAoB,IAApB,CAAQA,OAAR,CAAA;AACA,MAAA,OAAOA,OAAO,CAACI,IAAR,CAAa,UAACC,IAAD,EAAA;AAAA,QAAUA,OAAAA,IAAI,CAACC,KAAL,KAAe,OAAf,IAA0BD,IAAI,CAACC,KAAL,KAAe,MAAnD,CAAA;AAAA,OAAb,CAAP,CAAA;AACD,KAzBO;AA0BRZ,IAAAA,aA1BQ,EA0BQ,SAAA,aAAA,GAAA;AACd,MAAO,OAAA,CAAC,CAAC,IAAA,CAAKH,UAAd,CAAA;AACD,KA5BO;AA6BRgB,IAAAA,SA7BQ,EA6BI,SAAA,SAAA,GAAA;AACV,MAAO,OAAA,CAAC,CAAC,IAAA,CAAKL,OAAd,CAAA;AACD,KA/BO;AAgCRM,IAAAA,WAhCQ,EAgCM,SAAA,WAAA,GAAA;AACZ,MAAA,IACEC,MADF,GAKI,IALJ,CACEA,MADF;AAAA,UAEEC,SAFF,GAKI,IALJ,CAEEA,SAFF;AAAA,UAGEtB,cAHF,GAKI,IALJ,CAGEA,cAHF;AAAA,UAIEa,OAJF,GAKI,IALJ,CAIEA,OAJF,CAAA;;AAMA,MAAA,IAAIA,OAAJ,EAAa;AACX,QAAA,OAAO,MAAP,CAAA;AACD,OAAA;;AACD,MAAA,IAAIQ,MAAM,KAAK,MAAX,IAAqBA,MAAzB,EAAiC;AAC/B,QAAA,OAAOA,MAAP,CAAA;AACD,OAAA;;AACD,MAAIC,IAAAA,SAAS,IAAItB,cAAjB,EAAiC;AAC/B,QAAA,OAAOsB,SAAP,CAAA;AACD,OAAA;;AACD,MAAA,OAAO,MAAP,CAAA;AACD,KAjDO;AAkDRC,IAAAA,WAlDQ,EAkDM,SAAA,WAAA,GAAA;AACZ,MAAA,IAAQH,WAAR,GAAwB,IAAxB,CAAQA,WAAR,CAAA;AACA,MAAOA,OAAAA,WAAW,KAAK,MAAvB,CAAA;AACD,KArDO;AAsDRI,IAAAA,WAtDQ,EAsDM,SAAA,WAAA,GAAA;AAAA,MAAA,IAAA,IAAA,CAAA;;AACZ,MAAA,IAAMC,OAAO,GAAG,CACXC,EAAAA,CAAAA,MAAAA,CAAAA,aADW,mEAGXC,gCAAe,CAACC,KAHL,EAGa,KAAKC,IAAL,KAAc,OAH3B,CAAA,EAAAC,mCAAA,CAAA,IAAA,EAIXH,gCAAe,CAACI,KAJL,EAIa,IAAA,CAAKF,IAAL,KAAc,OAJ3B,CAAA,EAAAC,mCAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAKRJ,aALQ,EAKmB,kBAAA,CAAA,EAAA,IAAA,CAAKM,QALxB,CAAA,EAAAF,mCAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAMRJ,aANQ,EAMkB,iBAAA,CAAA,EAAA,IAAA,CAAKO,MANvB,CAAA,EAAAH,mCAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAORJ,aAPQ,EAOoB,mBAAA,CAAA,EAAA,IAAA,CAAKQ,KAPzB,CAAA,EAAAJ,mCAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAQRJ,aARQ,EAAA,wBAAA,CAAA,EAQyB,IAAKnC,CAAAA,QAAL,CAAc4C,kBARvC,CAAA,EAAAL,mCAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CASRJ,aATQ,EAAA,yBAAA,CAAA,EAS0B,KAAKU,aAAL,KAAuB,KATjD,CAAA,EAAAN,mCAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAURJ,aAVQ,EAU6B,4BAAA,CAAA,EAAA,IAAA,CAAKU,aAAL,KAAuB,QAVpD,CAWRV,EAAAA,mCAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,aAXQ,EAWsB,qBAAA,CAAA,EAAA,IAAA,CAAKX,eAX3B,CAYRW,EAAAA,mCAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,aAZQ,EAYoB,mBAAA,CAAA,EAAA,IAAA,CAAKX,eAZzB,CAaRW,EAAAA,mCAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,aAbQ,EAawB,uBAAA,CAAA,EAAA,IAAA,CAAKH,WAb7B,CAAhB,EAAA,IAAA,EAAA,CAAA;AAgBA,MAAA,OAAOE,OAAP,CAAA;AACD,KAxEO;AAyERY,IAAAA,UAzEQ,EAyEK,SAAA,UAAA,GAAA;AACX,MAAA,OAAO,KAAKd,WAAL,IAAoB,KAAK3B,iBAAzB,IAA8C,KAAKD,gBAA1D,CAAA;AACD,KAAA;AA3EO,GA1BmD;AAuG7D2C,EAAAA,OAAO,EAAE;AACPC,IAAAA,4BADO,EACwB,SAAA,4BAAA,GAAA;AAC7B,MAAMC,IAAAA,eAAe,GAAG,IAAA,CAAKC,KAAL,CAAW,IAAKlB,CAAAA,WAAL,GAAmB,YAAnB,GAAkC,cAA7C,CAAxB,CAAA;AACA,MAAI,IAAA,CAACiB,eAAL,EACE,OAAA;AACF,MAAA,IAAQE,UAAR,GAAiDF,eAAjD,CAAQE,UAAR;AAAA,UAAoBC,WAApB,GAAiDH,eAAjD,CAAoBG,WAApB;AAAA,UAAiCC,WAAjC,GAAiDJ,eAAjD,CAAiCI,WAAjC,CAAA;AACA,MAAA,IAAA,CAAKjD,gBAAL,GAAwB+C,UAAU,GAAG,CAArC,CAAA;AACA,MAAA,IAAA,CAAK9C,iBAAL,GAAyB8C,UAAU,GAAGE,WAAb,GAA2BD,WAApD,CAAA;AACD,KARM;AASPE,IAAAA,4BATO,EASwB,SAAA,4BAAA,GAAA;AAC7B,MAAA,IAAMN,4BAA4B,GAAGO,0BAAQ,CAAC,IAAA,CAAKP,4BAAN,CAA7C,CAAA;AACAQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCT,4BAAlC,CAAA,CAAA;AACA,MAAKU,IAAAA,CAAAA,KAAL,CAAW,oBAAX,EAAiC,YAAA;AAAA,QAAA,OAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCX,4BAArC,CAAN,CAAA;AAAA,OAAjC,CAAA,CAAA;AACD,KAbM;AAcPY,IAAAA,YAdO,EAcQ,SAAA,YAAA,GAAA;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AACb,MAAA,IAAQvC,OAAR,GAAyD,IAAzD,CAAQA,OAAR;AAAA,UAA+BwC,WAA/B,GAAyD,IAAzD,CAAiBC,YAAjB;AAAA,UAA4CrB,QAA5C,GAAyD,IAAzD,CAA4CA,QAA5C,CAAA;AACA,MAAA,OAAA,CAAA,CAAAsB,sCAAA,EAAA;AAAA,QAAA,aAAA,EAAiCF,WAAjC;AAAA,QAAA,OAAA,EAAA;AAAA,UAAA,SAAA,EAAuDxC,OAAvD;AAAA,UAA0EoB,UAAAA,EAAAA,QAAAA;AAA1E,SAAA;AAAA,OAAA,CAAA,CAAA;AACD,KAjBM;AAkBPuB,IAAAA,iBAlBO,EAkBa,SAAA,iBAAA,GAAA;AAAA,MAAA,IAAA,KAAA,GAAA,IAAA,CAAA;;AAClB,MAAMC,IAAAA,MAAM,GAAG,EAAf,CAAA;AACAC,MAAAA,uCAAkB,CAACC,OAAnB,CAA2B,UAACC,SAAD,EAAe;AACxCH,QAAAA,MAAM,CAACG,SAAD,CAAN,GAAoB,UAACC,MAAD,EAAY;AAC9BC,UAAAA,qBAAS,CAAC,KAAD,EAAOF,SAAP,EAAkBC,MAAlB,CAAT,CAAA;AACD,SAFD,CAAA;AAGD,OAJD,CAAA,CAAA;AAKA,MAAA,OAAOJ,MAAP,CAAA;AACD,KA1BM;AA2BPM,IAAAA,UA3BO,EA2BM,SAAA,UAAA,GAAA;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AACX,MAAA,IAAoBC,QAApB,GAA4D,IAA5D,CAAQC,UAAR;AAAA,UAA4CZ,WAA5C,GAA4D,IAA5D,CAA8BC,YAA9B,CAAA;AACA,MAAA,IAAMY,SAAS,GAAG,IAAKV,CAAAA,iBAAL,EAAlB,CAAA;AACA,MAAA,IAAMpE,KAAK,GAAG;AACZA,QAAAA,KAAK,EACA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,IAAA,CAAK+E,MADL,CAAA,EAAA,EAAA,EAAA;AAEHC,UAAAA,MAAM,EAAE,IAAA,CAAKA,MAFV;AAGHzE,UAAAA,IAAI,EAAE,IAAA,CAAKW,UAHR;AAIHd,UAAAA,QAAQ,EAAE,IAAA,CAAKA,QAJZ;AAKHqB,UAAAA,OAAO,EAAE,IAAA,CAAKF,cALX;AAMH0D,UAAAA,YAAY,EAAE,IAAA,CAAKA,YANhB;AAOHlE,UAAAA,OAAO,EAAE,IAAA,CAAKA,OAPX;AAQHb,UAAAA,eAAe,EAAE,IAAA,CAAKA,eARnB;AASHgF,UAAAA,iBAAiB,EAAE,IAAA,CAAKA,iBATrB;AAUHC,UAAAA,YAAY,EAAE,IAAA,CAAKA,YAVhB;AAWHC,UAAAA,WAAW,EAAE,IAAKA,CAAAA,WAAAA;AAXf,SADO,CAAA;AAcZnB,QAAAA,WAAW,EAAXA,WAdY;AAeZoB,QAAAA,EAAE,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACGT,QADH,CAAA,EAEGE,SAFH,CAAA;AAfU,OAAd,CAAA;AAoBA,MAAA,OAAA,CAAA,CAAAQ,oCAAA,EAAAC,aAAA,CAAA,CAAA,EAAA,EAAsBvF,KAAtB,CAAA,CAAA,CAAA,CAAA;AACD,KAnDM;AAoDPwF,IAAAA,gBApDO,EAoDY,SAAA,gBAAA,GAAA;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AACjB,MAAA,IAAI,KAAKC,KAAL,KAAe,IAAnB,EACE,OAAO,IAAP,CAAA;AACF,MAAMC,IAAAA,SAAS,GAAG,CAAC,IAAKD,CAAAA,KAAN,IAAe,CAAC,IAAA,CAAKvB,YAAL,CAAkBuB,KAApD,CAAA;AACA,MAAA,IAAQvD,MAAR,GAAmB,IAAnB,CAAQA,MAAR,CAAA;AACA,MAAMyD,IAAAA,YAAY,GAAG,EAArB,CAAA;;AACA,MAAIzD,IAAAA,MAAM,KAAK,MAAf,EAAuB;AACrByD,QAAAA,YAAY,CAACzD,MAAb,GAAsB0D,KAAK,CAACC,MAAM,CAAC3D,MAAD,CAAP,CAAL,GAAwBA,MAAxB,GAAA,EAAA,CAAA,MAAA,CAAoCA,MAApC,EAAtB,IAAA,CAAA,CAAA;AACD,OAAA;;AACD,MAAA,OAAA,CAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAmByD,YAAnB;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAA2CpD,aAA3C,EAAA,eAAA,CAAA;AAAA,OAAA,EAAA,CAAmEmD,SAAS,GAAG,IAAKI,CAAAA,MAAL,CAAYL,KAAf,GAAuBM,gCAAc,CAAC,IAAD,EAAO,OAAP,CAAjH,CAAA,CAAA,CAAA;AACD,KA9DM;AA+DPC,IAAAA,gBA/DO,EA+DY,SAAA,gBAAA,GAAA;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AACjB,MAAMC,IAAAA,eAAe,GAAG,IAAA,CAAKjF,UAA7B,CAAA;AACA,MAAA,OAAA,CAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAAsBuB,aAAtB,EAAA,oBAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA,CAAA2D,2BAAA,EAAAC,aAAA,CAAA,CAAA,EAAA,EAAA;AAAA,QAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAA0EF,eAA1E,CAAA;AAAA,OAAA,EAAA;AAAA,QACM,IAAA,EAAA,aAAA,CAAA,EAAA,EAAA;AACFG,UAAAA,MAAM,EAAE,SAACC,MAAAA,CAAAA,QAAD,EAAc;AACpB,YAAA,IAAQtF,OAAR,GAA8BsF,QAA9B,CAAQtF,OAAR;AAAA,gBAAiBE,QAAjB,GAA8BoF,QAA9B,CAAiBpF,QAAjB,CAAA;AACAyD,YAAAA,qBAAS,CAAC,MAAD,EAAO,aAAP,EAAsB2B,QAAtB,EAAgC,MAAI,CAACnF,UAArC,CAAT,CAAA;AACA,YAAA,MAAI,CAACP,cAAL,GAAsBI,OAAtB,CAAA;AACA,YAAA,MAAI,CAACH,eAAL,GAAuBK,QAAvB,CAAA;AACD,WAAA;AANC,SADN,CAAA;AAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAUD,KA3EM;AA4EPqF,IAAAA,0BA5EO,EA4EsB,SAAA,0BAAA,GAAA;AAAA,MAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AAC3B,MAAMC,IAAAA,UAAU,GAAG,EAAnB,CAAA;AACA,MAAA,IACE9E,OADF,GAQI,IARJ,CACEA,OADF;AAAA,UAEc+E,iBAFd,GAQI,IARJ,CAEEpG,QAFF,CAEcoG,iBAFd;AAAA,UAGEC,WAHF,GAQI,IARJ,CAGEA,WAHF;AAAA,UAIE/F,cAJF,GAQI,IARJ,CAIEA,cAJF;AAAA,UAKEkB,eALF,GAQI,IARJ,CAKEA,eALF;AAAA,UAMEK,WANF,GAQI,IARJ,CAMEA,WANF;AAAA,UAOEiB,UAPF,GAQI,IARJ,CAOEA,UAPF,CAAA;AASA,MAAA,IAAMwD,YAAY,GAAGC,4BAAQ,CAAC,UAACC,CAAD,EAAO;AACnC,QAAA,IAAQC,MAAR,GAAmBD,CAAnB,CAAQC,MAAR,CAAA;AACA,QAAA,IAAQtD,UAAR,GAAuBsD,MAAvB,CAAQtD,UAAR,CAAA;AACA,QAAA,MAAI,CAACD,KAAL,CAAWwD,YAAX,CAAwBvD,UAAxB,GAAqCA,UAArC,CAAA;;AACA,QAAA,MAAI,CAACmD,YAAL,CAAkBE,CAAlB,CAAA,CAAA;AACD,OAL4B,EAK1B,EAL0B,CAA7B,CAAA;AAMA,MAAMG,IAAAA,YAAY,GAAMrG,EAAAA,CAAAA,MAAAA,CAAAA,cAAN,EAAlB,IAAA,CAAA,CAAA;AACA,MAAMsG,IAAAA,oBAAoB,GAAGvF,OAAO,CAACJ,MAAR,GAAiB,CAAjB,IAAsB6B,UAAtB,GAAmC;AAAE6D,QAAAA,YAAY,EAAZA,YAAAA;AAAF,OAAnC,GAAsD,EAAnF,CAAA;AACAR,MAAAA,UAAU,CAACU,IAAX,CAAA,CAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAA+B1E,aAA/B,EAAA,gBAAA,CAAA;AAAA,QAAA,OAAA,EAA8DyE,oBAA9D;AAAA,QAAwF,KAAA,EAAA,cAAA;AAAxF,OAAA,EAAA,CAAA,CAAA,CAAA,OAAA,EAAA;AAAA,QAAqH,OAAA,EAAA;AAAEP,UAAAA,WAAW,EAAXA,WAAAA;AAAF,SAAA;AAArH,OAAA,EAAA,CAAA,CAAA,CAAAS,mCAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,UAC0BzF,SAAAA,EAAAA,OAAAA;AAD1B,SAAA;AAAA,OAEG,CAAA,EAAA,IAAA,CAAKuC,YAAL,EAFH,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAIA,MAAA,IAAMmD,cAAc,GAAG;AACrBjF,QAAAA,MAAM,EAAE0D,KAAK,CAACC,MAAM,CAAC5D,WAAD,CAAP,CAAL,GAA6BA,WAA7B,GAA8C4D,EAAAA,CAAAA,MAAAA,CAAAA,MAAM,CAAC5D,WAAD,CAApD,EADa,IAAA,CAAA;AAErBmF,QAAAA,KAAK,EAAExF,eAAe,GAAG,MAAH,GAAY,KAAK,CAAA;AAFlB,OAAvB,CAAA;AAIA2E,MAAAA,UAAU,CAACU,IAAX,CAAA,CAAA,CAAA,KAAA,EAAAI,aAAA,CAAA,CAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAA+B9E,aAA/B,EAAA,cAAA,CAAA;AAAA,QAA4D4E,OAAAA,EAAAA,cAAAA;AAA5D,OAAA,EAAgFX,iBAAhF,EAAA;AAAA,QAAA,KAAA,EAAuG,YAAvG;AAAA,QAAA,IAAA,EAAA;AAAA,UAA8HE,QAAAA,EAAAA,YAAAA;AAA9H,SAAA;AAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,OAAA,EAAA;AAAA,QAAA,KAAA,EAAuJ,OAAvJ;AAAA,QAAsK,OAAA,EAAA;AAAED,UAAAA,WAAW,EAAXA,WAAAA;AAAF,SAAA;AAAtK,OAAA,EAAA,CAAA,CAAA,CAAAS,mCAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,UAC0BzF,SAAAA,EAAAA,OAAAA;AAD1B,SAAA;AAAA,OAAA,CAAA,EAEG,KAAKkD,UAAL,EAFH,EAGG,IAAA,CAAK2C,YAAL,EAHH,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAKA,MAAA,OAAOf,UAAP,CAAA;AACD,KA7GM;AA8GPgB,IAAAA,oBA9GO,EA8GgB,SAAA,oBAAA,GAAA;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AACrB,MAAA,OAAOxB,gCAAc,CAAC,IAAD,EAAO,SAAP,EAAkB;AAAEyB,QAAAA,WAAW,EAAA,CAAA,CAAA,KAAA,CAAA;AAAb,OAAlB,CAArB,CAAA;AACD,KAhHM;AAiHPF,IAAAA,YAjHO,EAiHQ,SAAA,YAAA,GAAA;AAAA,MAAA,IAAA,CAAA,GAAA,IAAA,CAAA,cAAA,CAAA;AACb,MAAA,IAC4BG,OAD5B,GAEI,IAFJ,CACElG,cADF,CACoBF,MADpB,CAAA;AAGA,MAAA,IAAMqG,aAAa,GAAG3B,gCAAc,CAAC,IAAD,EAAO,QAAP,CAApC,CAAA;AACA,MAAA,OAAO2B,aAAa,GAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,UAA2BD,SAAAA,EAAAA,OAAAA;AAA3B,SAAA;AAAA,OAAqCC,EAAAA,CAAAA,aAArC,SAAwE,IAA5F,CAAA;AACD,KAvHM;AAwHPhB,IAAAA,YAxHO,EAwHME,SAAAA,YAAAA,CAAAA,CAxHN,EAwHS;AACd,MAAA,IAAA,CAAKxD,4BAAL,EAAA,CAAA;AACA,MAAkCwD,IAAAA,SAAAA,GAAAA,CAAC,CAACC,MAApC;AAAA,UAAQtD,UAAR,aAAQA,UAAR;AAAA,UAAoBoE,SAApB,aAAoBA,SAApB,CAAA;AACA,MAAA,IAAMC,SAAS,GAAGC,oCAAkB,CAACtE,UAAD,EAAaoE,SAAb,CAApC,CAAA;;AACA,MAAA,IAAIC,SAAS,KAAKE,kCAAgB,CAACC,OAAnC,EAA4C;AAC1C,QAAMC,IAAAA,kBAAkB,GAAGJ,SAAS,KAAKE,kCAAgB,CAACG,CAA/B,GAAmC,UAAnC,GAAgD,UAA3E,CAAA;AACA,QAAA,IAAMC,YAAY,GAAG;AACnBtB,UAAAA,CAAC,EAADA,CAAAA;AADmB,SAArB,CAAA;AAGAlC,QAAAA,qBAAS,CAAC,IAAD,EAAOsD,kBAAP,EAA2BE,YAA3B,CAAT,CAAA;AACD,OAAA;AACF,KAnIM;AAoIPC,IAAAA,cApIO,EAoIU,SAAA,cAAA,GAAA;AACf,MAAA,IAAQhG,SAAR,GAAsB,IAAtB,CAAQA,SAAR,CAAA;;AACA,MAAIA,IAAAA,SAAS,IAAI,IAAA,CAAKmB,KAAL,CAAW8E,YAAX,CAAwBC,YAAxB,GAAuClG,SAAxD,EAAmE;AACjE,QAAKtB,IAAAA,CAAAA,cAAL,GAAsB,IAAtB,CAAA;AACD,OAAA;AACF,KAAA;AAzIM,GAvGoD;AAkP7DyH,EAAAA,MAlP6D,EAkPpD,SAAA,MAAA,GAAA;AAAA,IAAA,IAAA,KAAA,CAAA;;AAAA,IAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AACP,IAAA,IACEnH,aADF,GAUI,IAVJ,CACEA,aADF;AAAA,QAEEkB,WAFF,GAUI,IAVJ,CAEEA,WAFF;AAAA,QAGED,WAHF,GAUI,IAVJ,CAGEA,WAHF;AAAA,QAIEX,OAJF,GAUI,IAVJ,CAIEA,OAJF;AAAA,QAKEgF,WALF,GAUI,IAVJ,CAKEA,WALF;AAAA,QAMEzE,SANF,GAUI,IAVJ,CAMEA,SANF;AAAA,QAOEN,OAPF,GAUI,IAVJ,CAOEA,OAPF;AAAA,QAQEb,cARF,GAUI,IAVJ,CAQEA,cARF;AAAA,QASEe,eATF,GAUI,IAVJ,CASEA,eATF,CAAA;AAWA,IAAM2G,IAAAA,IAAI,GAAG,EAAb,CAAA;AACA,IAAA,IAAMC,aAAa,GAAA,CAAA,CAAAtB,mCAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,QAA2BzF,SAAAA,EAAAA,OAAAA;AAA3B,OAAA;AAAA,KAAnB,CAAA,CAAA;AACA,IAAA,IAAMgH,WAAW,GAAG,IAAKzE,CAAAA,YAAL,EAApB,CAAA;AACA,IAAA,IAAMoE,YAAY,GAAG,CAACI,aAAD,EAAgBC,WAAhB,CAArB,CAAA;AACA,IAAA,IAAIC,iBAAJ,CAAA;;AACA,IAAItG,IAAAA,WAAW,IAAIvB,cAAnB,EAAmC;AACjC6H,MAAAA,iBAAiB,GAAG,IAAKpC,CAAAA,0BAAL,EAApB,CAAA;AACD,KAFD,MAEO;AACL8B,MAAAA,YAAY,CAACnB,IAAb,CAAkB,IAAA,CAAKtC,UAAL,EAAlB,CAAA,CAAA;AACAyD,MAAAA,YAAY,CAACnB,IAAb,CAAkB,IAAA,CAAKK,YAAL,EAAlB,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,IAAI5F,OAAJ,EAAa;AACX,MAAA,IAAM+D,KAAK,GAAG,IAAKD,CAAAA,gBAAL,EAAd,CAAA;AACAC,MAAAA,KAAK,IAAI8C,IAAI,CAACtB,IAAL,CAAUxB,KAAV,CAAT,CAAA;AACD,KAAA;;AACD,IAAA,IAAItE,aAAJ,EAAmB;AACjBoH,MAAAA,IAAI,CAACtB,IAAL,CAAU,IAAA,CAAKjB,gBAAL,EAAV,CAAA,CAAA;AACD,KAAA;;AACD,IAAMU,IAAAA,YAAY,GAAGC,4BAAQ,CAAC,KAAKD,YAAN,EAAoB,GAApB,CAA7B,CAAA;AACA,IAAA,IAAMiC,iBAAiB,GAAG,CACrBpG,EAAAA,CAAAA,MAAAA,CAAAA,aADqB,wFAGlBA,aAHkB,EAAA,sCAAA,CAAA,EAG6B,IAAK9B,CAAAA,iBAHlC,CAIlB8B,EAAAA,mCAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,aAJkB,EAI4B,qCAAA,CAAA,EAAA,IAAA,CAAK/B,gBAJjC,CAA1B,EAAA,KAAA,EAAA,CAAA;AAOA,IAAA,IAAI4G,KAAJ,CAAA;AACA,IAAA,IAAA,WAAA,GAAyD,KAAK9D,KAA9D;AAAA,QAAsBsF,cAAtB,eAAQR,YAAR;AAAA,QAA6CS,OAA7C,eAAsCC,KAAtC,CAAA;;AACA,IAAA,IAAI,CAAClH,eAAD,IAAoBgH,cAApB,IAAsCA,cAAc,CAACnF,WAAf,GAA6BoF,OAAO,CAACpF,WAA/E,EAA4F;AAC1F2D,MAAAA,KAAK,GAAA,EAAA,CAAA,MAAA,CAAMyB,OAAO,CAACpF,WAAd,EAAL,IAAA,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,OAAA,CAAA,CAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAmBpB,WAAnB;AAAA,MAAuC,OAAA,EAAA;AAAE+E,QAAAA,KAAK,EAALA,KAAAA;AAAF,OAAA;AAAvC,KAAA,EAAA,CACGrB,gCAAc,CAAC,IAAD,EAAO,YAAP,CADjB,EAAA,CAAA,CAAAgD,qBAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,QAAA,SAAA,EAEoB/G,SAFpB;AAAA,QAAA,aAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAEiD,IAAKuF,CAAAA,oBAAAA;AAFtD,OAAA;AAAA,KAAA,EAAA,CAAA,CAAA,CAAA,KAAA,EAAA;AAAA,MAAA,KAAA,EAGa,cAHb;AAAA,MAAA,OAAA,EAGmCoB,iBAHnC;AAAA,MAAA,IAAA,EAAA;AAAA,QAGgEjC,QAAAA,EAAAA,YAAAA;AAHhE,OAAA;AAAA,KAAA,EAAA,CAG+EgC,iBAAiB,IAAA,CAAA,CAAA,OAAA,EAAA;AAAA,MAAA,KAAA,EAAe,OAAf;AAAA,MAA8B,OAAA,EAAA;AAAEjC,QAAAA,WAAW,EAAXA,WAAAA;AAAF,OAAA;AAA9B,KAAgD2B,EAAAA,CAAAA,YAAhD,CAHhG,CAAA,CAAA,CAAA,EAIKG,IAJL,CAAA,CAAA,CAAA,CAAA,CAAA;AAOD,GApS4D;AAqS7DS,EAAAA,OArS6D,EAqSnD,SAAA,OAAA,GAAA;AACR,IAAA,IAAA,CAAKb,cAAL,EAAA,CAAA;AACD,GAvS4D;AAwS7Dc,EAAAA,OAxS6D,EAwSnD,SAAA,OAAA,GAAA;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AACR,IAAI,IAAA,IAAA,CAAKrH,eAAT,EAA0B;AACxB,MAAA,IAAIsH,KAAK,GAAGC,UAAU,CAAC,YAAM;AAC3B,QAAA,MAAI,CAAC/F,4BAAL,EAAA,CAAA;;AACAgG,QAAAA,YAAY,CAACF,KAAD,CAAZ,CAAA;AACAA,QAAAA,KAAK,GAAG,IAAR,CAAA;AACD,OAJqB,EAInB,CAJmB,CAAtB,CAAA;AAKA,MAAA,IAAA,CAAKxF,4BAAL,EAAA,CAAA;AACD,KAAA;;AACD,IAAA,IAAM2F,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB,CAAA;AACAF,IAAAA,SAAS,CAACG,KAAV,CAAgBC,OAAhB,GAAA,oHAAA,CAAA;AAMAJ,IAAAA,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,WAAxB,CAAA,CAAA;AACAL,IAAAA,QAAQ,CAACf,IAAT,CAAcqB,WAAd,CAA0BP,SAA1B,CAAA,CAAA;AACA,IAAK3I,IAAAA,CAAAA,cAAL,GAAsB2I,SAAS,CAACQ,WAAV,GAAwBR,SAAS,CAAC5F,WAAxD,CAAA;AACA6F,IAAAA,QAAQ,CAACf,IAAT,CAAcuB,WAAd,CAA0BT,SAA1B,CAAA,CAAA;AACA,IAAA,IAAA,CAAKlB,cAAL,EAAA,CAAA;AACD,GAAA;AA7T4D,CAAhD,CAAf;;;;"}