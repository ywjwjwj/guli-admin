{"version":3,"file":"table-body.js","sources":["../../../src/table/base-table/table-body.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport get from 'lodash/get';\nimport camelCase from 'lodash/camelCase';\nimport { emitEvent } from '../../utils/event';\nimport { prefix } from '../../config';\nimport baseTableProps from '../base-table-props';\nimport primaryTableProps from '../primary-table-props';\nimport TableRow from './table-row';\nimport { renderTNodeJSX } from '../../utils/render-tnode';\n\ntype RowOrColspanProp = {\n  colspan?: number;\n  rowspan?: number;\n};\n\nconst setPropsValue = (\n  propsArray: Array<Record<string, RowOrColspanProp>>,\n  rowIndex: number,\n  key: string,\n  value: RowOrColspanProp,\n) => {\n  if (typeof propsArray[rowIndex] === 'undefined') {\n    // eslint-disable-next-line no-param-reassign\n    propsArray[rowIndex] = {\n      [key]: {},\n    };\n  }\n  if (typeof propsArray[rowIndex][key] === 'undefined') {\n    // eslint-disable-next-line no-param-reassign\n    propsArray[rowIndex][key] = {};\n  }\n  // eslint-disable-next-line no-param-reassign\n  propsArray[rowIndex][key] = value;\n};\n\nexport default Vue.extend({\n  name: `${prefix}-table-body`,\n\n  props: {\n    data: baseTableProps.data,\n    columns: baseTableProps.columns,\n    rowClassName: baseTableProps.rowClassName,\n    rowKey: baseTableProps.rowKey,\n    rowspanAndColspan: baseTableProps.rowspanAndColspan,\n    firstFullRow: baseTableProps.firstFullRow,\n    lastFullRow: baseTableProps.lastFullRow,\n    onCellClick: baseTableProps.onCellClick,\n    onRowHover: baseTableProps.onRowHover,\n    onRowMouseup: baseTableProps.onRowMouseup,\n    onRowMousedown: baseTableProps.onRowMousedown,\n    onRowClick: baseTableProps.onRowClick,\n    onRowDbClick: baseTableProps.onRowDbClick,\n    selectedRowKeys: primaryTableProps.selectedRowKeys,\n    provider: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    current: {\n      type: Number,\n      default: 1,\n    },\n  },\n\n  computed: {\n    selectColumn(): any {\n      return this.columns.find(({ type }: any) => ['multiple', 'single'].includes(type)) || {};\n    },\n  },\n\n  methods: {\n    getRowspanAndColspanProps() {\n      const props: Array<any> = [];\n      const { data, columns, rowspanAndColspan } = this;\n      data.forEach((rowData, rowIndex) => {\n        if (props[rowIndex] === undefined) {\n          props[rowIndex] = {};\n        }\n        columns.forEach((col, colIndex) => {\n          const { colKey } = col;\n          if (props[rowIndex]?.[colKey]) {\n            return;\n          }\n          let { rowspan, colspan } = rowspanAndColspan({\n            col,\n            colIndex,\n            row: rowData,\n            rowIndex,\n          }) || {};\n          rowspan = rowspan || 1;\n          colspan = colspan || 1;\n          if (rowspan > 1 || colspan > 1) {\n            let occupiedRow = 0;\n            while (occupiedRow < rowspan) {\n              let occupiedCol = 1;\n              while (occupiedCol < colspan) {\n                const curColIndex = colIndex + occupiedCol;\n                const nextColKey = columns[curColIndex]?.colKey;\n                setPropsValue(props, rowIndex + occupiedRow, nextColKey, { colspan: -1 });\n                occupiedCol += 1;\n              }\n              if (occupiedRow > 0) {\n                setPropsValue(props, rowIndex + occupiedRow, colKey, { rowspan: -1 });\n              }\n              occupiedRow += 1;\n            }\n          }\n          props[rowIndex][colKey] = {\n            rowspan,\n            colspan,\n          };\n        });\n      });\n      return props;\n    },\n\n    renderFullRow(type: 'first-full-row' | 'last-full-row') {\n      const fullRowNode = renderTNodeJSX(this, camelCase(type));\n      if (fullRowNode) {\n        return (\n          <tr>\n            <td colspan={this.columns.length} class={`${prefix}-table__row--full ${prefix}-table__row-${type}`}>\n              {fullRowNode}\n            </td>\n          </tr>\n        );\n      }\n      return null;\n    },\n\n    renderBody(): Array<VNode> {\n      const {\n        data,\n        rowClassName,\n        rowKey,\n        $scopedSlots: scopedSlots,\n        rowspanAndColspan,\n        selectedRowKeys,\n        selectColumn,\n      } = this;\n      let body: Array<VNode> = [];\n      let allRowspanAndColspanProps: any;\n      if (typeof rowspanAndColspan === 'function') {\n        allRowspanAndColspanProps = this.getRowspanAndColspanProps();\n      }\n      data.forEach((row: any, index: number) => {\n        const defaultRowClass = typeof rowClassName === 'function' ? rowClassName({ row, rowIndex: index }) : rowClassName;\n        let rowClass: Array<string> = [];\n        if (defaultRowClass) {\n          rowClass = rowClass.concat(defaultRowClass);\n        }\n        const rowspanAndColspanProps = allRowspanAndColspanProps ? allRowspanAndColspanProps[index] : undefined;\n        let rowVnode: VNode;\n        const key = rowKey ? get(row, rowKey) : index + this.current;\n        const disabled = typeof selectColumn.disabled === 'function'\n          ? selectColumn.disabled({ row, rowIndex: index })\n          : selectColumn.disabled;\n        if (disabled) {\n          rowClass.push(`${prefix}-table__row--disabled`);\n        }\n        if (selectedRowKeys?.indexOf(key) > -1) {\n          rowClass.push(`${prefix}-table__row--selected`);\n        }\n        if (row.__t_table_inner_data__?.level) {\n          rowClass.push(`${prefix}-table__row--level-${row.__t_table_inner_data__?.level || 0}`);\n        }\n        const props = {\n          key,\n          props: {\n            ...this.$props,\n            rowClass: rowClass.join(' '),\n            rowData: row,\n            index,\n            rowspanAndColspanProps,\n          },\n          on: {\n            ...this.$listeners,\n            'row-dragstart': () => {\n              emitEvent(this, 'row-dragstart', {\n                index,\n                row,\n              });\n            },\n            'row-dragover': ({ e }: { e: MouseEvent }) => {\n              e.preventDefault();\n              emitEvent(this, 'row-dragover', {\n                index,\n                row,\n                targetElm: rowVnode.elm,\n              });\n            },\n          },\n          scopedSlots,\n        };\n        rowVnode = <TableRow rowKey={this.rowKey} {...props} />;\n        // 按行渲染\n        body.push(rowVnode);\n        // 渲染展开行\n        const expandedRow = this.provider.renderExpandedRow?.({ row, index });\n        expandedRow && (body = body.concat(expandedRow));\n      });\n      const firstRow = this.renderFullRow('first-full-row');\n      if (firstRow) {\n        body = [firstRow].concat(body);\n      }\n      const lastRow = this.renderFullRow('last-full-row');\n      if (lastRow) {\n        body = body.concat(lastRow);\n      }\n      return body;\n    },\n  },\n\n  render() {\n    if (this.provider.sortOnRowDraggable) {\n      const className = `${prefix}-table__body ${this.provider.dragging ? `${prefix}-table__body--dragging` : ''}`;\n      return (\n        <transition-group class={className} tag=\"tbody\">\n          {this.renderBody()}\n        </transition-group>\n      );\n    }\n    return <tbody class={`${prefix}-table__body`}>{this.renderBody()}</tbody>;\n  },\n});\n"],"names":["setPropsValue","propsArray","rowIndex","key","value","Vue","extend","name","prefix","props","data","baseTableProps","columns","rowClassName","rowKey","rowspanAndColspan","firstFullRow","lastFullRow","onCellClick","onRowHover","onRowMouseup","onRowMousedown","onRowClick","onRowDbClick","selectedRowKeys","primaryTableProps","provider","type","Object","current","Number","computed","selectColumn","find","includes","methods","getRowspanAndColspanProps","forEach","rowData","col","colIndex","colKey","row","rowspan","colspan","occupiedRow","occupiedCol","curColIndex","nextColKey","renderFullRow","fullRowNode","renderTNodeJSX","camelCase","length","renderBody","scopedSlots","$scopedSlots","body","allRowspanAndColspanProps","index","defaultRowClass","rowClass","concat","rowspanAndColspanProps","rowVnode","get","disabled","push","indexOf","__t_table_inner_data__","level","$props","join","on","$listeners","emitEvent","e","preventDefault","targetElm","elm","TableRow","_mergeJSXProps","expandedRow","renderExpandedRow","firstRow","lastRow","render","sortOnRowDraggable","className","dragging"],"mappings":"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"}