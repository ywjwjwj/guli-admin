{"version":3,"file":"group.js","sources":["../../src/checkbox/group.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport intersection from 'lodash/intersection';\nimport { prefix } from '../config';\nimport Checkbox from './checkbox';\nimport checkboxGroupProps from './checkbox-group-props';\nimport { emitEvent } from '../utils/event';\nimport {\n  CheckboxOptionObj, TdCheckboxProps, CheckboxGroupValue, TdCheckboxGroupProps,\n} from './type';\n\ntype CheckedChangeType = Parameters<TdCheckboxGroupProps['onChange']>;\n\nconst name = `${prefix}-checkbox-group`;\n\nexport default Vue.extend({\n  name: 'TCheckboxGroup',\n\n  components: {\n    Checkbox,\n  },\n\n  props: { ...checkboxGroupProps },\n\n  data() {\n    return {\n      checkedMap: {},\n      optionList: [] as Array<CheckboxOptionObj>,\n    };\n  },\n\n  provide(): { checkboxGroup: any } {\n    return {\n      checkboxGroup: this,\n    };\n  },\n\n  watch: {\n    values: {\n      immediate: true,\n      handler() {\n        if (this.value instanceof Array) {\n          const map = {};\n          this.value.forEach((item: string | number) => {\n            map[item] = true;\n          });\n          this.checkedMap = map;\n        }\n      },\n    },\n    options: {\n      immediate: true,\n      handler() {\n        if (!this.options) return [];\n        this.optionList = this.options.map((item) => {\n          let r: CheckboxOptionObj = {};\n          if (typeof item !== 'object') {\n            r = { label: String(item), value: item };\n          } else {\n            r = { ...item };\n            r.disabled = r.disabled === undefined ? this.disabled : r.disabled;\n          }\n          return r;\n        });\n      },\n    },\n  },\n\n  computed: {\n    values(): string {\n      if (this.value instanceof Array) {\n        return this.value.join();\n      }\n      return '';\n    },\n    intersectionLen(): number {\n      const values = this.optionList.map((item) => item.value);\n      if (this.value instanceof Array) {\n        const n = intersection(this.value, values);\n        return n.length;\n      }\n      return 0;\n    },\n    isCheckAll(): boolean {\n      if (this.value instanceof Array && this.value.length !== this.optionList.length - 1) {\n        return false;\n      }\n      return this.intersectionLen === this.optionList.length - 1;\n    },\n    indeterminate(): boolean {\n      return !this.isCheckAll && this.intersectionLen < this.optionList.length && this.intersectionLen !== 0;\n    },\n    maxExceeded(): boolean {\n      return this.max !== undefined && this.value.length === this.max;\n    },\n  },\n\n  mounted() {\n    if (this.$scopedSlots.default && this.options?.length) {\n      console.warn('TDesign CheckboxGroup Warn: both `options` and slot exist, rendered by `options`');\n    }\n  },\n\n  created() {\n    this.$on('checked-change', this.onCheckedChange);\n  },\n\n  render(): VNode {\n    let children = null;\n    if (this.options?.length) {\n      children = this.optionList?.map((option, index) => (\n        <Checkbox key={index} props={option} checked={this.checkedMap[option.value]}>\n          {this.renderLabel(option)}\n        </Checkbox>\n      ));\n    } else {\n      const nodes = this.$scopedSlots.default && this.$scopedSlots.default(null);\n      this.optionList = this.getOptionListBySlots(nodes);\n      children = nodes;\n    }\n    return (\n      <div class={name} onClick={(e: MouseEvent) => this.$emit('click', e)}>\n        {children}\n      </div>\n    );\n  },\n\n  methods: {\n    onCheckedChange(p: { checked: boolean; checkAll: boolean; e: Event; option: TdCheckboxProps }) {\n      const { checked, checkAll, e } = p;\n      if (checkAll) {\n        this.onCheckAllChange(checked, { e });\n      } else {\n        this.handleCheckboxChange(p);\n      }\n    },\n    getOptionListBySlots(nodes: VNode[]) {\n      const arr: Array<CheckboxOptionObj> = [];\n      nodes?.forEach((node) => {\n        const option = node?.componentOptions?.propsData;\n        option && arr.push(option);\n      });\n      return arr;\n    },\n    renderLabel(option: CheckboxOptionObj) {\n      if (typeof option.label === 'function') {\n        return option.label(this.$createElement);\n      }\n      return option.label;\n    },\n    emitChange(val: CheckboxGroupValue, context: CheckedChangeType[1]) {\n      emitEvent<CheckedChangeType>(this, 'change', val, context);\n    },\n    // used for <t-checkbox />\n    handleCheckboxChange(data: { checked: boolean; e: Event; option: TdCheckboxProps }) {\n      const currentValue = data.option.value;\n      if (this.value instanceof Array) {\n        const val = [...this.value];\n        if (data.checked) {\n          val.push(currentValue);\n        } else {\n          const i = val.indexOf(currentValue);\n          val.splice(i, 1);\n        }\n        this.emitChange(val, {\n          e: data.e,\n          current: data.option.value,\n          type: data.checked ? 'check' : 'uncheck',\n        });\n      } else {\n        console.warn(`TDesign CheckboxGroup Warn: \\`value\\` must be an array, instead of ${typeof this.value}`);\n      }\n    },\n    getAllCheckboxValue(): CheckboxGroupValue {\n      const val = new Set<TdCheckboxProps['value']>();\n      for (let i = 0, len = this.optionList.length; i < len; i++) {\n        const item = this.optionList[i];\n        if (item.checkAll) continue;\n        val.add(item.value);\n        if (this.maxExceeded) break;\n      }\n      return [...val];\n    },\n    onCheckAllChange(checked: boolean, context: { e: Event; source?: 't-checkbox' }) {\n      const value: CheckboxGroupValue = checked ? this.getAllCheckboxValue() : [];\n      this.emitChange(value, {\n        e: context.e,\n        type: checked ? 'check' : 'uncheck',\n        current: undefined,\n      });\n    },\n  },\n});\n"],"names":["name","prefix","Vue","extend","components","Checkbox","props","checkboxGroupProps","data","checkedMap","optionList","provide","checkboxGroup","watch","values","immediate","handler","value","Array","map","forEach","item","options","r","_typeof","label","String","disabled","computed","join","intersectionLen","n","intersection","length","isCheckAll","indeterminate","maxExceeded","max","mounted","$scopedSlots","console","warn","created","$on","onCheckedChange","render","children","option","index","_mergeJSXProps","renderLabel","nodes","getOptionListBySlots","e","$emit","methods","p","checked","checkAll","onCheckAllChange","handleCheckboxChange","arr","node","componentOptions","propsData","push","$createElement","emitChange","val","context","emitEvent","currentValue","_toConsumableArray","i","indexOf","splice","current","type","getAllCheckboxValue","Set","len","add"],"mappings":"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"}