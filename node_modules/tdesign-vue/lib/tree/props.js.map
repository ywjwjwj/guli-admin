{"version":3,"file":"props.js","sources":["../../src/tree/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-12-08 14:17:11\n * */\n\nimport { TdTreeProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 节点是否可高亮 */\n  activable: Boolean,\n  /** 高亮的节点值 */\n  actived: {\n    type: Array as PropType<TdTreeProps['actived']>,\n  },\n  /** 高亮的节点值，非受控属性 */\n  defaultActived: {\n    type: Array as PropType<TdTreeProps['defaultActived']>,\n  },\n  /** 是否允许多个节点同时高亮 */\n  activeMultiple: Boolean,\n  /** 隐藏节点复选框 */\n  checkable: Boolean,\n  /** 透传属性到 checkbox 组件。参考 checkbox 组件 API */\n  checkProps: {\n    type: Object as PropType<TdTreeProps['checkProps']>,\n  },\n  /** 父子节点选中状态不再关联，可各自选中或取消 */\n  checkStrictly: Boolean,\n  /** 树数据，泛型 `T` 表示树节点 TS 类型 */\n  data: {\n    type: Array as PropType<TdTreeProps['data']>,\n    default: (): TdTreeProps['data'] => [],\n  },\n  /** 禁用复选框，可支持禁用不同的行 */\n  disableCheck: {\n    type: [Boolean, Function] as PropType<TdTreeProps['disableCheck']>,\n    default: false,\n  },\n  /** 是否禁用树操作 */\n  disabled: Boolean,\n  /** 数据为空时展示的文本 */\n  empty: {\n    type: [String, Function] as PropType<TdTreeProps['empty']>,\n    default: '',\n  },\n  /** 是否展开全部节点 */\n  expandAll: Boolean,\n  /** 展开的节点值 */\n  expanded: {\n    type: Array as PropType<TdTreeProps['expanded']>,\n    default: (): TdTreeProps['expanded'] => [],\n  },\n  /** 展开的节点值，非受控属性 */\n  defaultExpanded: {\n    type: Array as PropType<TdTreeProps['defaultExpanded']>,\n    default: (): TdTreeProps['defaultExpanded'] => [],\n  },\n  /** 默认展开的级别，第一层为 0 */\n  expandLevel: {\n    type: Number,\n    default: 0,\n  },\n  /** 同级别展开互斥，手风琴效果 */\n  expandMutex: Boolean,\n  /** 是否支持点击节点也能展开收起 */\n  expandOnClickNode: Boolean,\n  /** 展开子节点时是否自动展开父节点 */\n  expandParent: Boolean,\n  /** 节点过滤方法，只呈现返回值为 true 的节点，泛型 `T` 表示树节点 TS 类型 */\n  filter: {\n    type: Function as PropType<TdTreeProps['filter']>,\n  },\n  /** 节点是否有悬浮状态 */\n  hover: Boolean,\n  /** 节点图标，可自定义 */\n  icon: {\n    type: [Boolean, Function] as PropType<TdTreeProps['icon']>,\n    default: true,\n  },\n  /** 用来定义 value / label / children 在 `options` 中对应的字段别名 */\n  keys: {\n    type: Object as PropType<TdTreeProps['keys']>,\n  },\n  /** 自定义节点内容，值为 false 不显示，值为 true 显示默认 label，值为字符串直接输出该字符串。泛型 `T` 表示树节点 TS 类型 */\n  label: {\n    type: [String, Boolean, Function] as PropType<TdTreeProps['label']>,\n    default: true,\n  },\n  /** 延迟加载 children 为 true 的节点的子节点数据，即使 expandAll 被设置为 true，也同样延迟加载 */\n  lazy: {\n    type: Boolean,\n    default: true,\n  },\n  /** 连接线。值为 false 不显示连接线；值为 true 显示默认连接线；值类型为 Function 表示自定义连接线 */\n  line: {\n    type: [Boolean, Function] as PropType<TdTreeProps['line']>,\n    default: false,\n  },\n  /** 加载子数据的方法，在展开节点时调用（仅当节点 children 为 true 时生效），泛型 `T` 表示树节点 TS 类型 */\n  load: {\n    type: Function as PropType<TdTreeProps['load']>,\n  },\n  /** 自定义节点操作项，泛型 `T` 表示树节点 TS 类型 */\n  operations: {\n    type: Function as PropType<TdTreeProps['operations']>,\n  },\n  /** 节点展开折叠时是否使用过渡动画 */\n  transition: {\n    type: Boolean,\n    default: true,\n  },\n  /** 选中值（组件为可选状态时） */\n  value: {\n    type: Array as PropType<TdTreeProps['value']>,\n    default: (): TdTreeProps['value'] => [],\n  },\n  /** 选中值（组件为可选状态时），非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdTreeProps['defaultValue']>,\n    default: (): TdTreeProps['defaultValue'] => [],\n  },\n  /** 选中值模式。all 表示父节点和子节点全部会出现在选中值里面；parentFirst 表示当子节点全部选中时，仅父节点在选中值里面；onlyLeaft 表示无论什么情况，选中值仅呈现叶子节点 */\n  valueMode: {\n    type: String as PropType<TdTreeProps['valueMode']>,\n    default: 'onlyLeaf' as TdTreeProps['valueMode'],\n    validator(val: TdTreeProps['valueMode']): boolean {\n      return ['onlyLeaf', 'parentFirst', 'all'].includes(val);\n    },\n  },\n  /** 节点激活时触发，泛型 `T` 表示树节点 TS 类型 */\n  onActive: Function as PropType<TdTreeProps['onActive']>,\n  /** 节点选中状态变化时触发，context.node 表示当前变化的选项，泛型 `T` 表示树节点 TS 类型 */\n  onChange: Function as PropType<TdTreeProps['onChange']>,\n  /** 节点点击时触发，泛型 `T` 表示树节点 TS 类型 */\n  onClick: Function as PropType<TdTreeProps['onClick']>,\n  /** 节点展开或收起时触发，泛型 `T` 表示树节点 TS 类型 */\n  onExpand: Function as PropType<TdTreeProps['onExpand']>,\n  /** 异步加载后触发，泛型 `T` 表示树节点 TS 类型 */\n  onLoad: Function as PropType<TdTreeProps['onLoad']>,\n};\n"],"names":["activable","Boolean","actived","type","Array","defaultActived","activeMultiple","checkable","checkProps","Object","checkStrictly","data","disableCheck","Function","disabled","empty","String","expandAll","expanded","defaultExpanded","expandLevel","Number","expandMutex","expandOnClickNode","expandParent","filter","hover","icon","keys","label","lazy","line","load","operations","transition","value","defaultValue","valueMode","validator","val","includes","onActive","onChange","onClick","onExpand","onLoad"],"mappings":"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"}