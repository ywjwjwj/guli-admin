/**
 * tdesign v0.38.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var config = require('../config.js');
var tag_checkTagProps = require('./check-tag-props.js');
var utils_renderTnode = require('../utils/render-tnode.js');
var utils_classnames = require('../utils/classnames.js');
var utils_event = require('../utils/event.js');
require('@babel/runtime/helpers/typeof');
require('lodash/isObject');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var Vue__default = /*#__PURE__*/_interopDefaultLegacy(Vue);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(config.prefix, "-tag");
var _CheckTag = Vue__default["default"].extend({
  name: "TCheckTag",
  props: _objectSpread({}, tag_checkTagProps["default"]),
  computed: {
    tagClass: function tagClass() {
      var _ref;

      return ["".concat(name), "".concat(name, "--check"), "".concat(name, "--default"), utils_classnames["default"].SIZE[this.size], (_ref = {}, _defineProperty__default["default"](_ref, "".concat(name, "--checked"), !this.disabled && this.checked), _defineProperty__default["default"](_ref, "".concat(config.prefix, "-is-disabled"), this.disabled), _defineProperty__default["default"](_ref, "".concat(name, "--disabled"), this.disabled), _ref)];
    }
  },
  methods: {
    handleClick: function handleClick(e) {
      if (!this.disabled) {
        utils_event.emitEvent(this, "click", {
          e: e
        });
        utils_event.emitEvent(this, "change", !this.checked);
      }
    }
  },
  render: function render() {
    var h = arguments[0];
    var tagContent = utils_renderTnode.renderContent(this, "default", "content");
    return h("span", {
      "class": this.tagClass,
      "on": {
        "click": this.handleClick
      }
    }, [tagContent]);
  }
});

exports["default"] = _CheckTag;
//# sourceMappingURL=check-tag.js.map
