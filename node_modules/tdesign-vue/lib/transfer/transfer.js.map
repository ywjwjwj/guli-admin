{"version":3,"file":"transfer.js","sources":["../../src/transfer/transfer.tsx"],"sourcesContent":["import pick from 'lodash/pick';\nimport { prefix } from '../config';\nimport TransferList from './components/transfer-list';\nimport TransferOperations from './components/transfer-operations';\nimport {\n  TransferListType,\n  TransferItemOption,\n  CheckedOptions,\n  TransferValue,\n  EmptyType,\n  TransferListOptionBase,\n  TargetParams,\n  SearchEvent,\n  SearchOption,\n  TdTransferProps,\n} from './interface';\nimport { PageInfo, TdPaginationProps } from '../pagination/type';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins from '../config-provider/config-receiver';\nimport props from './props';\nimport {\n  getTransferListOption,\n  emitEvent,\n  getDataValues,\n  getTransferData,\n  filterTransferData,\n  TRANSFER_NAME,\n} from './utils';\n\nconst SOURCE = 'source';\nconst TARGET = 'target';\n\nexport default mixins(getConfigReceiverMixins('transfer')).extend({\n  name: TRANSFER_NAME,\n  components: {\n    TransferList,\n    TransferOperations,\n  },\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props,\n  data(): {\n    SOURCE: TransferListType;\n    TARGET: TransferListType;\n    formDisabled: boolean;\n    } {\n    return {\n      SOURCE,\n      TARGET,\n      // 表单控制禁用态时的变量\n      formDisabled: undefined,\n    };\n  },\n  computed: {\n    tDisabled(): boolean | boolean[] {\n      return this.formDisabled || this.disabled;\n    },\n    isTreeMode(): boolean {\n      const treeSlot = this.$scopedSlots.tree;\n      return typeof treeSlot === 'function';\n    },\n    leftButtonDisabled(): boolean {\n      return this.direction === 'right';\n    },\n    rightButtonDisabled(): boolean {\n      return this.direction === 'left';\n    },\n    // props 传入的 data 格式化后的数据\n    transferData(): Array<TransferItemOption> {\n      return getTransferData(this.data, this.keys, this.isTreeMode);\n    },\n    sourceList(): Array<TransferItemOption> {\n      return filterTransferData(this.transferData, this.value, false, this.isTreeMode);\n    },\n    targetList(): Array<TransferItemOption> {\n      return filterTransferData(this.transferData, this.value, true, this.isTreeMode);\n    },\n    // 被选中的value\n    checkedValue(): TransferListOptionBase<TransferValue[]> {\n      return {\n        [SOURCE]: getDataValues(this.sourceList, this.checked, { isTreeMode: this.isTreeMode }),\n        [TARGET]: getDataValues(this.targetList, this.checked, { isTreeMode: this.isTreeMode }),\n      };\n    },\n    hasFooter(): boolean {\n      return !!this.$scopedSlots.footer || !!this.footer;\n    },\n    showPagination(): boolean {\n      // 翻页在自定义列表无效\n      return !!this.pagination && !this.$scopedSlots.content;\n    },\n    showSearch(): boolean {\n      // 翻页在自定义列表无效\n      return !!this.search;\n    },\n    footerOption(): TransferListOptionBase<string | Function> {\n      const footer = this.footer || '';\n      return getTransferListOption<string | Function>(footer);\n    },\n    emptyOption(): TransferListOptionBase<EmptyType> {\n      return getTransferListOption<EmptyType>(this.empty);\n    },\n    searchOption(): TransferListOptionBase<SearchOption> {\n      return getTransferListOption<SearchOption>(this.search);\n    },\n    checkAllOption(): TransferListOptionBase<boolean> {\n      return getTransferListOption<boolean>(this.showCheckAll);\n    },\n    disabledOption(): TransferListOptionBase<boolean> {\n      return getTransferListOption<boolean>(this.tDisabled);\n    },\n    titleOption(): TransferListOptionBase<string> {\n      // TODO：此处需分别处理 Array 和 TNode 内容\n      // @ts-ignore\n      return getTransferListOption<string>(this.title);\n    },\n    paginationOption(): TransferListOptionBase<TdPaginationProps> {\n      return getTransferListOption<TdPaginationProps>(this.pagination);\n    },\n  },\n  methods: {\n    transferTo(toDirection: TransferListType) {\n      const oldTargetValue: Array<TransferValue> = JSON.parse(JSON.stringify(this.value));\n      let newTargetValue: Array<TransferValue>;\n      const checkedValue = toDirection === TARGET ? this.checkedValue[SOURCE] : this.checkedValue[TARGET];\n      // target->source\n      if (toDirection === SOURCE) {\n        newTargetValue = oldTargetValue.filter((v) => !checkedValue.includes(v));\n      } else if (this.targetSort === 'original') {\n        // 按照原始顺序\n        newTargetValue = getDataValues(this.transferData, oldTargetValue.concat(checkedValue), {\n          isTreeMode: this.isTreeMode,\n        });\n      } else if (this.targetSort === 'unshift') {\n        newTargetValue = checkedValue.concat(oldTargetValue);\n      } else {\n        newTargetValue = oldTargetValue.concat(checkedValue);\n      }\n\n      // 清空checked。与toDirection相反\n      this.handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);\n\n      const params: TargetParams = {\n        type: toDirection,\n        movedValue: checkedValue,\n      };\n      emitEvent<Parameters<TdTransferProps['onChange']>>(this, 'change', newTargetValue, params);\n    },\n    // 点击移到右边按钮触发的函数\n    transferToRight() {\n      this.transferTo(TARGET);\n    },\n    // 点击移到左边按钮触发的函数\n    transferToLeft() {\n      this.transferTo(SOURCE);\n    },\n    handleCheckedChange(val: Array<TransferValue>, listType: TransferListType) {\n      const sourceChecked = listType === SOURCE ? val : this.checkedValue[SOURCE];\n      const targetChecked = listType === TARGET ? val : this.checkedValue[TARGET];\n      const checked = [...sourceChecked, ...targetChecked];\n      const event: CheckedOptions = {\n        checked,\n        sourceChecked,\n        targetChecked,\n        type: listType,\n      };\n      // 支持checked.sync\n      this.$emit('update:checked', checked);\n      emitEvent<Parameters<TdTransferProps['onCheckedChange']>>(this, 'checked-change', event);\n    },\n    filterMethod(\n      transferList: Array<TransferItemOption>,\n      targetValueList: Array<TransferValue>,\n      needMatch: boolean,\n    ): Array<TransferItemOption> {\n      return transferList.filter((item) => {\n        const isMatch = targetValueList.indexOf(item.value) > -1;\n        return needMatch ? isMatch : !isMatch;\n      });\n    },\n    handleScroll(e: Event, listType: TransferListType) {\n      const target = e.target as HTMLElement;\n      const bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;\n      const event: { e: Event; bottomDistance: number; type: TransferListType } = {\n        e,\n        bottomDistance,\n        type: listType,\n      };\n      emitEvent<Parameters<TdTransferProps['onScroll']>>(this, 'scroll', event);\n    },\n    handleSearch(e: SearchEvent) {\n      emitEvent<Parameters<TdTransferProps['onSearch']>>(this, 'search', e);\n    },\n    handlePageChange(pageInfo: PageInfo, listType: TransferListType) {\n      emitEvent<Parameters<TdTransferProps['onPageChange']>>(this, 'page-change', pageInfo, { type: listType });\n    },\n    renderTransferList(listType: TransferListType) {\n      const scopedSlots = pick(this.$scopedSlots, ['title', 'empty', 'footer', 'operation', 'transferItem', 'default']);\n      return (\n        <transfer-list\n          checkboxProps={this.checkboxProps}\n          transferItem={this.transferItem}\n          list-type={listType}\n          title={this.titleOption[listType]}\n          data-source={listType === SOURCE ? this.sourceList : this.targetList}\n          checked-value={this.checkedValue[listType]}\n          disabled={this.disabledOption[listType]}\n          search={this.searchOption[listType]}\n          pagination={this.paginationOption[listType]}\n          check-all={this.checkAllOption[listType]}\n          footer={this.footerOption[listType]}\n          empty={this.emptyOption[listType]}\n          onCheckedChange={(val: TransferValue[]) => this.handleCheckedChange(val, listType)}\n          onScroll={($event: Event) => this.handleScroll($event, listType)}\n          onSearch={this.handleSearch}\n          onPageChange={(pageInfo: PageInfo) => this.handlePageChange(pageInfo, listType)}\n          scopedSlots={scopedSlots}\n          t={this.t}\n          global={this.global}\n          isTreeMode={this.isTreeMode}\n        ></transfer-list>\n      );\n    },\n  },\n\n  render() {\n    return (\n      <div\n        class={[\n          `${prefix}-transfer`,\n          this.showSearch ? `${prefix}-transfer__search` : '',\n          this.hasFooter ? `${prefix}-transfer__footer` : '',\n          this.showPagination ? `${prefix}-transfer__pagination` : '',\n          this.isTreeMode ? `${prefix}-transfer--with-tree` : '',\n        ]}\n      >\n        {this.renderTransferList(SOURCE)}\n        <transfer-operations\n          left-disabled={\n            this.disabledOption[TARGET] || this.leftButtonDisabled || this.checkedValue[TARGET].length === 0\n          }\n          right-disabled={\n            this.disabledOption[SOURCE] || this.rightButtonDisabled || this.checkedValue[SOURCE].length === 0\n          }\n          operation={this.operation}\n          onMoveToRight={this.transferToRight}\n          onMoveToLeft={this.transferToLeft}\n          scopedSlots={{ operation: this.$scopedSlots.operation }}\n        />\n        {this.renderTransferList(TARGET)}\n      </div>\n    );\n  },\n});\n"],"names":["SOURCE","TARGET","mixins","getConfigReceiverMixins","extend","name","TRANSFER_NAME","components","TransferList","TransferOperations","model","prop","event","props","data","formDisabled","computed","tDisabled","disabled","isTreeMode","treeSlot","$scopedSlots","tree","leftButtonDisabled","direction","rightButtonDisabled","transferData","getTransferData","keys","sourceList","filterTransferData","value","targetList","checkedValue","getDataValues","checked","hasFooter","footer","showPagination","pagination","content","showSearch","search","footerOption","getTransferListOption","emptyOption","empty","searchOption","checkAllOption","showCheckAll","disabledOption","titleOption","title","paginationOption","methods","transferTo","toDirection","oldTargetValue","JSON","parse","stringify","newTargetValue","filter","v","includes","targetSort","concat","handleCheckedChange","params","type","movedValue","emitEvent","transferToRight","transferToLeft","val","listType","sourceChecked","targetChecked","_toConsumableArray","$emit","filterMethod","transferList","targetValueList","needMatch","item","isMatch","indexOf","handleScroll","e","target","bottomDistance","scrollHeight","scrollTop","clientHeight","handleSearch","handlePageChange","pageInfo","renderTransferList","scopedSlots","pick","checkboxProps","transferItem","t","global","$event","render","prefix","length","operation"],"mappings":"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"}