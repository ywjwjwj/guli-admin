/**
 * tdesign v0.38.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var utils_renderTnode = require('../utils/render-tnode.js');
var config = require('../config.js');
var utils_classnames = require('../utils/classnames.js');
var select_optionGroupProps = require('./option-group-props.js');
require('@babel/runtime/helpers/typeof');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var Vue__default = /*#__PURE__*/_interopDefaultLegacy(Vue);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var name = "".concat(config.prefix, "-select-option-group");
var _OptionGroup = Vue__default["default"].extend({
  name: "TOptionGroup",
  props: _objectSpread({}, select_optionGroupProps["default"]),
  inject: {
    tSelect: {
      "default": void 0
    }
  },
  computed: {
    classes: function classes() {
      var _ref;

      return [name, (_ref = {}, _defineProperty__default["default"](_ref, utils_classnames["default"].SIZE[this.tSelect.size], this.tSelect && this.tSelect.size), _defineProperty__default["default"](_ref, "".concat(name, "__divider"), this.divider), _ref)];
    }
  },
  watch: {
    "tSelect.displayOptions": function tSelectDisplayOptions() {
      this.childrenChange();
    }
  },
  data: function data() {
    return {
      visible: true
    };
  },
  methods: {
    childrenChange: function childrenChange() {
      this.visible = this.$children && Array.isArray(this.$children) && this.$children.some(function (option) {
        return option.show === true;
      });
    }
  },
  render: function render() {
    var h = arguments[0];
    var children = utils_renderTnode.renderTNodeJSX(this, "default");
    return h("li", {
      "directives": [{
        name: "show",
        value: this.visible
      }],
      "class": this.classes
    }, [h("div", {
      "class": "".concat(name, "__header")
    }, [this.label]), h("ul", [children])]);
  }
});

exports["default"] = _OptionGroup;
//# sourceMappingURL=optionGroup.js.map
