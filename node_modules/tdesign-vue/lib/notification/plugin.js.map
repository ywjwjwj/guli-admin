{"version":3,"file":"plugin.js","sources":["../../src/notification/plugin.ts"],"sourcesContent":["import Vue from 'vue';\nimport NotificationList from './notificationList';\nimport { getAttach } from '../utils/dom';\nimport {\n  NotificationOptions,\n  NotificationInstance,\n  NotificationMethod,\n  NotificationInfoMethod,\n  NotificationWarningMethod,\n  NotificationErrorMethod,\n  NotificationSuccessMethod,\n  NotificationCloseMethod,\n  NotificationCloseAllMethod,\n} from './type';\nimport { AttachNodeReturnValue } from '../common';\n\nlet seed = 0;\n// 存储不同 attach 和 不同 placement 消息列表实例\nconst instanceMap: Map<AttachNodeReturnValue, object> = new Map();\n\nconst NotificationFunction = (options: NotificationOptions): Promise<NotificationInstance> => {\n  seed += 1;\n  const hackOptions = {\n    placement: 'top-right',\n    zIndex: 6000,\n    attach: 'body',\n    id: seed,\n    ...options,\n  };\n  hackOptions.content = options.content ? options.content : '';\n\n  const attachEl = getAttach(hackOptions.attach);\n  if (!instanceMap.get(attachEl)) {\n    instanceMap.set(attachEl, {});\n  }\n  let tmpInstance = instanceMap.get(attachEl)[hackOptions.placement];\n  if (!tmpInstance) {\n    const list = new NotificationList({\n      propsData: {\n        placement: hackOptions.placement,\n      },\n    });\n    list.add(hackOptions);\n    list.$mount();\n    instanceMap.get(attachEl)[hackOptions.placement] = list;\n    attachEl.appendChild(list.$el);\n    tmpInstance = instanceMap.get(attachEl)[hackOptions.placement];\n  } else {\n    tmpInstance.add(hackOptions);\n  }\n\n  return new Promise((resolve) => {\n    tmpInstance.$nextTick(() => {\n      const list = tmpInstance.$children;\n      resolve(list[list.length - 1]);\n    });\n  });\n};\n\nconst showThemeNotification: NotificationMethod = (theme, options) => {\n  const hackOptions = { ...options, theme };\n  return NotificationFunction(hackOptions);\n};\n\ninterface ExtraApi {\n  info: NotificationInfoMethod;\n  success: NotificationSuccessMethod;\n  warning: NotificationWarningMethod;\n  error: NotificationErrorMethod;\n  close: NotificationCloseMethod;\n  closeAll: NotificationCloseAllMethod;\n}\n\nconst extraApi: ExtraApi = {\n  info: (options) => showThemeNotification('info', options),\n  success: (options) => showThemeNotification('success', options),\n  warning: (options) => showThemeNotification('warning', options),\n  error: (options) => showThemeNotification('error', options),\n  close: (promise) => {\n    promise.then((instance) => instance.close());\n  },\n  closeAll: () => {\n    instanceMap.forEach((attach) => {\n      Object.keys(attach).forEach((placement) => {\n        attach[placement].removeAll();\n      });\n    });\n  },\n};\n\nexport type NotificationPluginType = Vue.PluginObject<undefined> & ExtraApi & NotificationMethod;\n\nexport const NotificationPlugin: NotificationPluginType = showThemeNotification as NotificationPluginType;\n\n// 这样定义后，可以通过 NotificationPlugin('success', '消息') 或者 NotificationPlugin.success('消息')调用插件\nObject.keys(extraApi).forEach((funcName) => {\n  NotificationPlugin[funcName] = extraApi[funcName];\n});\n\nNotificationPlugin.install = () => {\n  // 这样定义后，可以通过 this.$notify 调用插件\n  Vue.prototype.$notify = NotificationPlugin;\n  // 这样定义后，可以通过 this.$notification 调用插件\n  Vue.prototype.$notification = NotificationPlugin;\n};\n\nexport const NotifyPlugin = NotificationPlugin;\n\nexport default NotifyPlugin;\n\ndeclare module 'vue/types/vue' {\n  // Bind to `this` keyword\n  interface Vue {\n    $notify: NotificationMethod & ExtraApi;\n    $notification: NotificationMethod & ExtraApi;\n  }\n}\n"],"names":["seed","instanceMap","Map","NotificationFunction","options","hackOptions","placement","zIndex","attach","id","content","attachEl","getAttach","get","set","tmpInstance","list","NotificationList","propsData","add","$mount","appendChild","$el","Promise","resolve","$nextTick","$children","length","showThemeNotification","theme","extraApi","info","success","warning","error","close","promise","then","instance","closeAll","forEach","Object","keys","removeAll","NotificationPlugin","funcName","install","Vue","prototype","$notify","$notification","NotifyPlugin"],"mappings":"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"}