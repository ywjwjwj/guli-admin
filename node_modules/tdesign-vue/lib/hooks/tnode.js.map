{"version":3,"file":"tnode.js","sources":["../../src/hooks/tnode.ts"],"sourcesContent":["import { h, getCurrentInstance } from '@vue/composition-api';\nimport { VNode } from 'vue';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\n\nexport interface JSXRenderContext {\n  defaultNode?: VNode | string;\n  params?: Record<string, any>;\n}\n\nconst isVNode = (obj: OptionsType) => {\n  const vNode = h('span', '');\n  const VNode = vNode.constructor;\n  return obj instanceof VNode;\n};\n\nexport type OptionsType = VNode | JSXRenderContext | string;\n\nexport function getDefaultNode(options?: OptionsType) {\n  let defaultNode;\n  if (isObject(options) && 'defaultNode' in options) {\n    defaultNode = options.defaultNode;\n  } else if (isVNode(options) || isString(options)) {\n    defaultNode = options;\n  }\n\n  return defaultNode;\n}\n\nexport function getParams(options?: OptionsType) {\n  return isObject(options) && 'params' in options ? options.params : null;\n}\n/**\n * 通过 JSX 的方式渲染 TNode，props 和 插槽同时处理，也能处理默认值为 true 则渲染默认节点的情况\n * 优先级：Props 大于插槽\n * 如果 props 值为 true ，则使用插槽渲染。如果也没有插槽的情况下，则使用 defaultNode 渲染\n * @example const renderTNodeJSX = useTNodeJSX()\n * @return renderTNodeJSX\n * @param name 插槽和属性名称\n * @param options 值可能为默认渲染节点，也可能是默认渲染节点和参数的集合\n * @example renderTNodeJSX('closeBtn')  优先级 props function 大于 插槽\n * @example renderTNodeJSX('closeBtn', <close-icon />)。 当属性值为 true 时则渲染 <close-icon />\n * @example renderTNodeJSX('closeBtn', { defaultNode: <close-icon />, params })。 params 为渲染节点时所需的参数\n */\n\nexport const useTNodeJSX = () => {\n  const instance = getCurrentInstance();\n  return function (name: string, options?: OptionsType) {\n    // assemble params && defaultNode\n    const params = getParams(options);\n    const defaultNode = getDefaultNode(options);\n\n    const { slots } = instance.setupContext;\n    // 处理 props 类型的Node\n    let propsNode;\n    if (Object.keys(instance.props).includes(name)) {\n      propsNode = instance.props[name];\n    }\n\n    // propsNode 为 false 不渲染\n    if (propsNode === false) return;\n\n    // 同名function和slot优先处理插槽\n    if (slots[name]) {\n      return slots[name](params);\n    }\n    if (isFunction(propsNode)) return propsNode(h, params);\n\n    // propsNode为true则渲染defaultNode\n    if (propsNode === true && defaultNode) {\n      return defaultNode;\n    }\n    // 处理字符串类型的 propsNode\n    return propsNode;\n  };\n};\n\n/**\n * 在setup中，通过JSX的方式 TNode，props 和 插槽同时处理。与 renderTNodeJSX 区别在于属性值为 undefined 时会渲染默认节点\n * @example const renderTNodeJSXDefault = useTNodeDefault()\n * @return renderTNodeJSXDefault\n * @param name 插槽和属性名称\n * @example renderTNodeJSXDefault('closeBtn')\n * @example renderTNodeJSXDefault('closeBtn', <close-icon />) closeBtn 为空时，则兜底渲染 <close-icon />\n * @example renderTNodeJSXDefault('closeBtn', { defaultNode: <close-icon />, params }) 。params 为渲染节点时所需的参数\n */\nexport const useTNodeDefault = () => {\n  const renderTNodeJSX = useTNodeJSX();\n  return function (name: string, options?: VNode | JSXRenderContext) {\n    const defaultNode = getDefaultNode(options);\n    return renderTNodeJSX(name, options) || defaultNode;\n  };\n};\n\n/**\n * 在setup中，用于处理相同名称的 TNode 渲染\n * @example const renderContent = useContent()\n * @return renderContent\n * @param name1 第一个名称，优先级高于 name2\n * @param name2 第二个名称\n * @param defaultNode 默认渲染内容：当 name1 和 name2 都为空时会启动默认内容渲染\n * @example renderContent('default', 'content')\n * @example renderContent('default', 'content', '我是默认内容')\n * @example renderContent('default', 'content', { defaultNode: '我是默认内容', params })\n */\nexport const useContent = () => {\n  const renderTNodeJSX = useTNodeJSX();\n  return function (name1: string, name2: string, options?: VNode | JSXRenderContext) {\n    // assemble params && defaultNode\n    const params = getParams(options);\n    const defaultNode = getDefaultNode(options);\n\n    const toParams = params ? { params } : undefined;\n\n    const node1 = renderTNodeJSX(name1, toParams);\n    const node2 = renderTNodeJSX(name2, toParams);\n\n    const res = isEmpty(node1) ? node2 : node1;\n    return isEmpty(res) ? defaultNode : res;\n  };\n};\n"],"names":["isVNode","obj","vNode","h","VNode2","constructor","getDefaultNode","options","defaultNode","isObject","isString","getParams","params","useTNodeJSX","instance","getCurrentInstance","name","slots","setupContext","propsNode","Object","keys","props","includes","isFunction","useTNodeDefault","renderTNodeJSX","useContent","name1","name2","toParams","node1","node2","res","isEmpty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACvB,EAAA,IAAMC,KAAK,GAAGC,mBAAC,CAAC,MAAD,EAAS,EAAT,CAAf,CAAA;AACA,EAAA,IAAMC,MAAM,GAAGF,KAAK,CAACG,WAArB,CAAA;AACA,EAAOJ,OAAAA,GAAG,YAAYG,MAAtB,CAAA;AACD,CAJD,CAAA;;AAKO,SAASE,cAAT,CAAwBC,OAAxB,EAAiC;AACtC,EAAA,IAAIC,WAAJ,CAAA;;AACA,EAAA,IAAIC,4BAAQ,CAACF,OAAD,CAAR,IAAqB,aAAA,IAAiBA,OAA1C,EAAmD;AACjDC,IAAAA,WAAW,GAAGD,OAAO,CAACC,WAAtB,CAAA;AACD,GAFD,MAEO,IAAIR,OAAO,CAACO,OAAD,CAAP,IAAoBG,4BAAQ,CAACH,OAAD,CAAhC,EAA2C;AAChDC,IAAAA,WAAW,GAAGD,OAAd,CAAA;AACD,GAAA;;AACD,EAAA,OAAOC,WAAP,CAAA;AACD,CAAA;AACM,SAASG,SAAT,CAAmBJ,OAAnB,EAA4B;AACjC,EAAA,OAAOE,4BAAQ,CAACF,OAAD,CAAR,IAAqB,QAAA,IAAYA,OAAjC,GAA2CA,OAAO,CAACK,MAAnD,GAA4D,IAAnE,CAAA;AACD,CAAA;AACYC,IAAAA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,EAAMC,IAAAA,QAAQ,GAAGC,oCAAkB,EAAnC,CAAA;AACA,EAAA,OAAO,UAASC,IAAT,EAAeT,OAAf,EAAwB;AAC7B,IAAA,IAAMK,MAAM,GAAGD,SAAS,CAACJ,OAAD,CAAxB,CAAA;AACA,IAAA,IAAMC,WAAW,GAAGF,cAAc,CAACC,OAAD,CAAlC,CAAA;AACA,IAAA,IAAQU,KAAR,GAAkBH,QAAQ,CAACI,YAA3B,CAAQD,KAAR,CAAA;AACA,IAAA,IAAIE,SAAJ,CAAA;;AACA,IAAA,IAAIC,MAAM,CAACC,IAAP,CAAYP,QAAQ,CAACQ,KAArB,CAAA,CAA4BC,QAA5B,CAAqCP,IAArC,CAAJ,EAAgD;AAC9CG,MAAAA,SAAS,GAAGL,QAAQ,CAACQ,KAAT,CAAeN,IAAf,CAAZ,CAAA;AACD,KAAA;;AACD,IAAIG,IAAAA,SAAS,KAAK,KAAlB,EACE,OAAA;;AACF,IAAA,IAAIF,KAAK,CAACD,IAAD,CAAT,EAAiB;AACf,MAAA,OAAOC,KAAK,CAACD,IAAD,CAAL,CAAYJ,MAAZ,CAAP,CAAA;AACD,KAAA;;AACD,IAAIY,IAAAA,8BAAU,CAACL,SAAD,CAAd,EACE,OAAOA,SAAS,CAAChB,mBAAD,EAAIS,MAAJ,CAAhB,CAAA;;AACF,IAAA,IAAIO,SAAS,KAAK,IAAd,IAAsBX,WAA1B,EAAuC;AACrC,MAAA,OAAOA,WAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAOW,SAAP,CAAA;AACD,GAnBD,CAAA;AAoBD,EAtBM;AAuBMM,IAAAA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,EAAMC,IAAAA,cAAc,GAAGb,WAAW,EAAlC,CAAA;AACA,EAAA,OAAO,UAASG,IAAT,EAAeT,OAAf,EAAwB;AAC7B,IAAA,IAAMC,WAAW,GAAGF,cAAc,CAACC,OAAD,CAAlC,CAAA;AACA,IAAA,OAAOmB,cAAc,CAACV,IAAD,EAAOT,OAAP,CAAd,IAAiCC,WAAxC,CAAA;AACD,GAHD,CAAA;AAID,EANM;AAOMmB,IAAAA,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,EAAMD,IAAAA,cAAc,GAAGb,WAAW,EAAlC,CAAA;AACA,EAAA,OAAO,UAASe,KAAT,EAAgBC,KAAhB,EAAuBtB,OAAvB,EAAgC;AACrC,IAAA,IAAMK,MAAM,GAAGD,SAAS,CAACJ,OAAD,CAAxB,CAAA;AACA,IAAA,IAAMC,WAAW,GAAGF,cAAc,CAACC,OAAD,CAAlC,CAAA;AACA,IAAMuB,IAAAA,QAAQ,GAAGlB,MAAM,GAAG;AAAEA,MAAAA,MAAM,EAANA,MAAAA;AAAF,KAAH,GAAgB,KAAK,CAA5C,CAAA;AACA,IAAA,IAAMmB,KAAK,GAAGL,cAAc,CAACE,KAAD,EAAQE,QAAR,CAA5B,CAAA;AACA,IAAA,IAAME,KAAK,GAAGN,cAAc,CAACG,KAAD,EAAQC,QAAR,CAA5B,CAAA;AACA,IAAMG,IAAAA,GAAG,GAAGC,2BAAO,CAACH,KAAD,CAAP,GAAiBC,KAAjB,GAAyBD,KAArC,CAAA;AACA,IAAA,OAAOG,2BAAO,CAACD,GAAD,CAAP,GAAezB,WAAf,GAA6ByB,GAApC,CAAA;AACD,GARD,CAAA;AASD;;;;;;;;"}