{"version":3,"file":"progress.js","sources":["../../src/progress/progress.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport { ScopedSlotReturnValue } from 'vue/types/vnode';\nimport {\n  CloseCircleFilledIcon,\n  CheckCircleFilledIcon,\n  ErrorCircleFilledIcon,\n  ErrorIcon,\n  CloseIcon,\n  CheckIcon,\n} from 'tdesign-icons-vue';\nimport { prefix } from '../config';\nimport { getBackgroundColor } from '../utils/helper';\nimport {\n  PRO_THEME, CIRCLE_SIZE, CIRCLE_SIZE_PX, STATUS_ICON, CIRCLE_FONT_SIZE_RATIO,\n} from './constants';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { Styles } from '../common';\n\nconst name = `${prefix}-progress`;\n\nexport default Vue.extend({\n  name: 'TProgress',\n\n  props: { ...props },\n\n  data() {\n    return {\n      name,\n    };\n  },\n  computed: {\n    statusStyle(): string {\n      if (this.percentage >= 100) {\n        return 'success';\n      }\n      return this.status;\n    },\n    themeClass(): string {\n      const Line = PRO_THEME.LINE;\n      if (this.theme === Line) {\n        return 'thin';\n      }\n      return this.theme;\n    },\n    trackBgStyle(): Styles {\n      const { strokeWidth } = this;\n      const height = typeof strokeWidth === 'string' ? strokeWidth : `${strokeWidth}px`;\n      return {\n        height,\n        backgroundColor: this.trackColor,\n        borderRadius: height,\n      };\n    },\n    circleStrokeStyle(): Styles {\n      return {\n        stroke: this.trackColor,\n      };\n    },\n    barStyle(): Styles {\n      return {\n        width: `${this.percentage}%`,\n        background: this.color && getBackgroundColor(this.color),\n      };\n    },\n    circlePathStyle(): Styles {\n      const strokeColor = typeof this.color === 'object' ? '' : this.color;\n      return {\n        stroke: strokeColor,\n      };\n    },\n    isShowIcon(): boolean {\n      return STATUS_ICON.includes(this.status) && typeof this.label === 'boolean';\n    },\n    // theme=circle 获取直径\n    diameter(): number {\n      let diameter = CIRCLE_SIZE_PX.MEDIUM;\n      if (!this.size) {\n        return diameter;\n      }\n      const { SMALL, LARGE, MEDIUM } = CIRCLE_SIZE;\n      switch (this.size) {\n        case SMALL:\n          diameter = CIRCLE_SIZE_PX.SMALL;\n          break;\n        case MEDIUM:\n          diameter = CIRCLE_SIZE_PX.MEDIUM;\n          break;\n        case LARGE:\n          diameter = CIRCLE_SIZE_PX.LARGE;\n          break;\n        default:\n          diameter = Number(this.size);\n          break;\n      }\n      return diameter;\n    },\n    rPoints(): number {\n      return this.diameter / 2;\n    },\n    radius(): number {\n      return this.rPoints - this.circleStrokeWidth / 2;\n    },\n    circleStyle(): Styles {\n      if (this.theme !== PRO_THEME.CIRCLE) {\n        return {};\n      }\n\n      let fontSize = this.diameter * CIRCLE_FONT_SIZE_RATIO.MEDIUM;\n      if (this.diameter <= CIRCLE_SIZE_PX.SMALL) {\n        fontSize = this.diameter * CIRCLE_FONT_SIZE_RATIO.SMALL;\n      } else if (this.diameter >= CIRCLE_SIZE_PX.LARGE) {\n        fontSize = this.diameter * CIRCLE_FONT_SIZE_RATIO.LARGE;\n      }\n\n      return {\n        width: `${this.diameter}px`,\n        height: `${this.diameter}px`,\n        fontSize: `${fontSize}px`,\n      };\n    },\n    // theme=circle 环形进度条 环形宽度\n    circleStrokeWidth(): number {\n      const defaultWidth = this.size === CIRCLE_SIZE.SMALL ? 4 : 6;\n      return this.strokeWidth ? Number(this.strokeWidth) : defaultWidth;\n    },\n    strokeDashArr(): string {\n      const radius = this.diameter / 2;\n      const perimeter = Math.PI * 2 * radius;\n      const percent = this.percentage / 100;\n      return `${perimeter * percent}  ${perimeter * (1 - percent)}`;\n    },\n    plumpStyles(): Styles {\n      return {};\n      // return this.percentage > 10 ? { color: '#fff' } : { right: '-2.5rem' };\n    },\n  },\n\n  methods: {\n    getIconMap() {\n      const CIRCLE_ICONS = {\n        success: CheckIcon,\n        warning: ErrorIcon,\n        error: CloseIcon,\n      };\n      const NORMAL_ICONS = {\n        success: CheckCircleFilledIcon,\n        warning: ErrorCircleFilledIcon,\n        error: CloseCircleFilledIcon,\n      };\n      return this.theme === PRO_THEME.CIRCLE ? CIRCLE_ICONS : NORMAL_ICONS;\n    },\n    getLabelContent(): ScopedSlotReturnValue {\n      let labelContent: string | VNode = `${this.percentage}%`;\n      const status = this.status || '';\n      if (STATUS_ICON.includes(status) && this.theme !== PRO_THEME.PLUMP) {\n        const components = this.getIconMap();\n        const component = components[status];\n        if (component) {\n          labelContent = <component class={[`${name}__icon`]}></component>;\n        }\n      }\n      return labelContent;\n    },\n  },\n\n  render() {\n    const labelContent = <div class={`${name}__info`}>{renderTNodeJSX(this, 'label', this.getLabelContent())}</div>;\n    // 进度大于 10 ，进度百分比显示在内部；进度百分比小于 10 进度显示在外部\n    const PLUMP_SEPARATE = 10;\n    const separateClasses = this.percentage > PLUMP_SEPARATE ? `${name}--over-ten` : `${name}--under-ten`;\n    return (\n      <div class={name}>\n        {this.theme === PRO_THEME.LINE && (\n          <div class={`${name}--thin ${name}--status--${this.statusStyle}`}>\n            <div class={`${name}__bar`} style={this.trackBgStyle}>\n              <div class={`${name}__inner`} style={this.barStyle}></div>\n            </div>\n            {labelContent}\n          </div>\n        )}\n\n        {this.theme === PRO_THEME.PLUMP && (\n          <div\n            class={[\n              `${name}__bar ${name}--plump ${separateClasses}`,\n              { [`${name}--status--${this.statusStyle}`]: this.statusStyle },\n            ]}\n            style={this.trackBgStyle}\n          >\n            <div class={`${name}__inner`} style={this.barStyle}>\n              {this.percentage > PLUMP_SEPARATE && labelContent}\n            </div>\n            {this.percentage <= PLUMP_SEPARATE && labelContent}\n          </div>\n        )}\n\n        {this.theme === PRO_THEME.CIRCLE && (\n          <div class={`${name}--circle ${name}--status--${this.statusStyle}`} style={this.circleStyle}>\n            {labelContent}\n            <svg width={this.diameter} height={this.diameter} viewBox={`0 0 ${this.diameter} ${this.diameter}`}>\n              <circle\n                cx={this.rPoints}\n                cy={this.rPoints}\n                r={this.radius}\n                stroke-width={this.circleStrokeWidth}\n                stroke={this.trackColor}\n                fill=\"none\"\n                class={`${name}__circle-outer`}\n                style={this.circleStrokeStyle}\n              />\n              {this.percentage > 0 && (\n                <circle\n                  cx={this.rPoints}\n                  cy={this.rPoints}\n                  r={this.radius}\n                  stroke-width={this.circleStrokeWidth}\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  class={`${name}__circle-inner`}\n                  transform={`matrix(0,-1,1,0,0,${this.diameter})`}\n                  stroke-dasharray={this.strokeDashArr}\n                  style={this.circlePathStyle}\n                />\n              )}\n            </svg>\n          </div>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","Vue","extend","props","data","computed","statusStyle","percentage","status","themeClass","Line","PRO_THEME","LINE","theme","trackBgStyle","strokeWidth","height","backgroundColor","trackColor","borderRadius","circleStrokeStyle","stroke","barStyle","width","background","color","getBackgroundColor","circlePathStyle","strokeColor","_typeof","isShowIcon","STATUS_ICON","includes","label","diameter","CIRCLE_SIZE_PX","MEDIUM","size","SMALL","CIRCLE_SIZE","LARGE","Number","rPoints","radius","circleStrokeWidth","circleStyle","CIRCLE","fontSize","CIRCLE_FONT_SIZE_RATIO","defaultWidth","strokeDashArr","perimeter","Math","PI","percent","plumpStyles","methods","getIconMap","CIRCLE_ICONS","success","CheckIcon","warning","ErrorIcon","error","CloseIcon","NORMAL_ICONS","CheckCircleFilledIcon","ErrorCircleFilledIcon","CloseCircleFilledIcon","getLabelContent","labelContent","PLUMP","components","component","render","renderTNodeJSX","PLUMP_SEPARATE","separateClasses","_defineProperty"],"mappings":"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"}