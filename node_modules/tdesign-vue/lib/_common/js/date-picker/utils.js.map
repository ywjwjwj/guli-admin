{"version":3,"file":"utils.js","sources":["../../../../src/_common/js/date-picker/utils.ts"],"sourcesContent":["import chunk from 'lodash/chunk';\n\n/**\n * 首字母大写\n * @param {String} str 目标字符串\n * @returns {String}\n */\nexport function firstUpperCase(str: string): string {\n  if (!str) return str;\n  return str[0].toUpperCase().concat(str.substring(1, str.length));\n}\n\ninterface DateObj {\n  year: number;\n  month: number;\n}\n\n/**\n * 返回指定年、月的第一天日期\n * @param {Object} { year, month }\n * @returns {Date}\n */\nfunction getFirstDayOfMonth({ year, month }: DateObj): Date {\n  return new Date(year, month, 1);\n}\n\n/**\n * 返回指定年、月的天数\n * @param {Object} { year, month }\n * @returns {Number}\n */\nfunction getDaysInMonth({ year, month }: DateObj): number {\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * 返回指定年、月的最后一天日期\n * @param {Object} { year, month }\n * @returns {Date}\n */\nfunction getLastDayOfMonth({ year, month }: DateObj): Date {\n  return new Date(year, month, getDaysInMonth({ year, month }));\n}\n\nfunction isSameYear(date1: Date, date2: Date) {\n  return date1.getFullYear() === date2.getFullYear();\n}\n\nfunction isSameMonth(date1: Date, date2: Date) {\n  return isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n}\n\nfunction isSameDate(date1: Date, date2: Date) {\n  return isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n}\n\n/**\n * 是否是某法范围内的日期，精确到日\n * @param {Date} value 目标日期\n * @param {Object} { start, end } 范围\n * @returns {Boolean}\n */\nfunction isBetween(\n  value: { getFullYear: () => number; getMonth: () => number; getDate: () => number },\n  { start, end }: { start: any; end: any },\n): boolean {\n  const date = new Date(value.getFullYear(), value.getMonth(), value.getDate());\n\n  const startTime = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n  const endTime = new Date(end.getFullYear(), end.getMonth(), end.getDate());\n\n  return startTime <= date && endTime >= date;\n}\n\n/**\n * 比较两个日期对象的时间戳\n * @param {Date} date1 日期1\n * @param {Date} date2 日期2\n * @returns {Number} 返回 date1.getTime() - date2.getTime() 的差值\n */\nfunction compareAsc(date1: { getTime: () => any }, date2: Date): number {\n  const d1 = date1.getTime();\n  const d2 = date2.getTime();\n\n  if (d1 < d2) return -1;\n  if (d1 > d2) return 1;\n  return 0;\n}\n\n/**\n * 比较两个 Date 是否是同一天 或则 同一月 或则 同一年\n * @param {Date} date1 比较的日期\n * @param {Date} date2 比较的日期\n * @param {String} type 比较类型，默认比较到『日』 date|month|year\n * @returns {Boolean}\n */\nexport function isSame(date1: Date, date2: Date, type = 'date'): boolean {\n  const func = {\n    isSameYear,\n    isSameMonth,\n    isSameDate,\n  };\n  return func[`isSame${firstUpperCase(type)}`](date1, date2);\n}\n\nexport function outOfRanges(d: Date, min: any, max: any) {\n  return (min && compareAsc(d, min) === -1) || (max && compareAsc(d, max) === 1);\n}\n\n/**\n * @returns {Date} 当天零点的日期对象\n */\nexport function getToday(): Date {\n  const now = new Date();\n  return new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0);\n}\n\n/**\n * 返回日期对象的年、月、日、小时、分钟、秒、12小时制标识\n * @param {Date} date\n * @returns {Object}\n */\nexport function getDateObj(date: Date) {\n  let tempDate = date;\n  if (!(date instanceof Date)) {\n    tempDate = getToday();\n  }\n  return {\n    year: tempDate.getFullYear(),\n    month: tempDate.getMonth(),\n    date: tempDate.getDate(),\n    hours: tempDate.getHours(),\n    minutes: tempDate.getMinutes(),\n    seconds: tempDate.getSeconds(),\n    meridiem: tempDate.getHours() > 11 ? 'PM' : 'AM',\n  };\n}\n\n/**\n * 设置日期对象的时间部分\n * @param {Date} d 日期\n * @param {Number} hour 小时\n * @param {Number} min 分钟\n * @param {Number} sec 秒\n * @returns {Date} 一个新的date\n */\nexport function setDateTime(d: Date, hour: number, min: number, sec: number): Date {\n  const { year, month, date } = getDateObj(d);\n  return new Date(year, month, date, hour, min, sec, 0);\n}\n\n/**\n * 增加月份\n * @param {Date} date 起始日期\n * @param {Number} num 月份数\n * @returns {Date}\n */\nexport function subtractMonth(date: Date, num: any): Date {\n  const day = date.getDate();\n  const newDate = new Date(date);\n\n  let _num = num;\n  // eslint-disable-next-line no-plusplus\n  while (_num--) {\n    newDate.setDate(0);\n  }\n  newDate.setDate(day);\n  return newDate;\n}\n\n/**\n * 减月份\n * @param {Date} date 起始日期\n * @param {Number} num 月份数\n * @returns {Date}\n */\nexport function addMonth(date: Date, num: number): Date {\n  let _num = num;\n  if (num < 0) _num = 0;\n  const newDate = new Date(date);\n  newDate.setMonth(date.getMonth() + _num);\n  return newDate;\n}\n\nexport type DateValue = string | Date | Array<DateValue>;\nexport interface DisableDateObj { from?: string; to?: string; before?: string; after?: string }\nexport type DisableDate = Array<DateValue> | DisableDateObj | ((date: DateValue) => boolean);\n\nexport interface OptionsType {\n  firstDayOfWeek: number;\n  disableDate: DisableDate;\n  minDate: Date;\n  maxDate: Date;\n  monthLocal?: string[];\n}\n\nexport function getWeeks(\n  { year, month }: { year: number; month: number },\n  {\n    firstDayOfWeek,\n    disableDate = () => false,\n    minDate,\n    maxDate,\n  }: OptionsType,\n) {\n  const prependDay = getFirstDayOfMonth({ year, month });\n  const appendDay = getLastDayOfMonth({ year, month });\n  const maxDays = getDaysInMonth({ year, month });\n  const daysArr = [];\n  let i = 1;\n  const today = getToday();\n  for (i; i <= maxDays; i++) {\n    const currentDay = new Date(year, month, i);\n    daysArr.push({\n      text: i,\n      active: false,\n      value: currentDay,\n      disabled: (typeof disableDate === 'function' && disableDate(currentDay)) || outOfRanges(currentDay, minDate, maxDate),\n      now: isSame(today, currentDay),\n      firstDayOfMonth: i === 1,\n      lastDayOfMonth: i === maxDays,\n      type: 'current-month',\n    });\n  }\n\n  if (prependDay.getDay() !== firstDayOfWeek) {\n    prependDay.setDate(0); // 上一月\n    while (true) {\n      daysArr.unshift({\n        text: prependDay.getDate().toString(),\n        active: false,\n        value: new Date(prependDay),\n        disabled: (typeof disableDate === 'function' && disableDate(prependDay)) || outOfRanges(prependDay, minDate, maxDate),\n        additional: true, // 非当前月\n        type: 'prev-month',\n      });\n      prependDay.setDate(prependDay.getDate() - 1);\n      if (prependDay.getDay() === Math.abs(firstDayOfWeek + 6) % 7) break;\n    }\n  }\n\n  const LEN = 42; // 显示6周\n  while (daysArr.length < LEN) {\n    appendDay.setDate(appendDay.getDate() + 1);\n    daysArr.push({\n      text: appendDay.getDate(),\n      active: false,\n      value: new Date(appendDay),\n      disabled: (typeof disableDate === 'function' && disableDate(appendDay)) || outOfRanges(appendDay, minDate, maxDate),\n      additional: true, // 非当前月\n      type: 'next-month',\n    });\n  }\n\n  return chunk(daysArr, 7);\n}\n\nexport function getYears(\n  year: number,\n  {\n    disableDate = () => false,\n    minDate,\n    maxDate,\n  }: OptionsType,\n) {\n  const startYear = parseInt((year / 10).toString(), 10) * 10;\n  const endYear = startYear + 9;\n\n  const yearArr = [];\n\n  const today = getToday();\n\n  for (let i = startYear; i <= endYear; i++) {\n    const date = new Date(i, 1);\n\n    let disabledMonth = 0;\n    let outOfRangeMonth = 0;\n\n    for (let j = 0; j < 12; j++) {\n      const d = new Date(i, j);\n      if (typeof disableDate === 'function' && disableDate(d)) disabledMonth += 1;\n      if (outOfRanges(d, minDate, maxDate)) outOfRangeMonth += 1;\n    }\n\n    yearArr.push({\n      value: date,\n      now: isSame(date, today, 'year'),\n      disabled: disabledMonth === 12 || outOfRangeMonth === 12,\n      active: false,\n      text: `${date.getFullYear()}`,\n    });\n  }\n\n  return chunk(yearArr, 4);\n}\n\nexport function getMonths(year: number, params: OptionsType) {\n  const {\n    disableDate = () => false, minDate, maxDate, monthLocal,\n  } = params;\n  const MonthArr = [];\n  const today = getToday();\n  for (let i = 0; i <= 11; i++) {\n    const date = new Date(year, i);\n    let disabledDay = 0;\n    let outOfRangeDay = 0;\n    const daysInMonth = getDaysInMonth({ year, month: i });\n\n    for (let j = 1; j <= daysInMonth; j++) {\n      const d = new Date(year, i, j);\n      if (typeof disableDate === 'function' && disableDate(d)) disabledDay += 1;\n      if (outOfRanges(d, minDate, maxDate)) outOfRangeDay += 1;\n    }\n\n    MonthArr.push({\n      value: date,\n      now: isSame(date, today, 'month'),\n      disabled: disabledDay === daysInMonth || outOfRangeDay === daysInMonth,\n      active: false,\n      text: monthLocal[date.getMonth()], // `${date.getMonth() + 1} ${monthText || '月'}`,\n    });\n  }\n\n  return chunk(MonthArr, 4);\n}\n\nexport interface DateTime {\n  active: boolean;\n  highlight: boolean;\n  startOfRange: boolean;\n  endOfRange: boolean;\n  value: Date;\n}\n\nexport function flagActive(data: any[], { ...args }: any) {\n  const { start, end, type = 'date' } = args;\n\n  if (!end) {\n    return data.map((row: any[]) => row.map((item: DateTime) => {\n      const _item = item;\n      _item.active = isSame(item.value, start, type);\n      return _item;\n    }));\n  }\n\n  return data.map((row: any[]) => row.map((item: DateTime) => {\n    const _item = item;\n    const date = item.value;\n    const isStart = isSame(start, date, type);\n    const isEnd = isSame(end, date, type);\n    _item.active = isStart || isEnd;\n    _item.highlight = isBetween(date, { start, end });\n    _item.startOfRange = isStart;\n    _item.endOfRange = isEnd;\n    return _item;\n  }));\n}\n\n// extract time format from a completed date format 'YYYY-MM-DD HH:mm' -> 'HH:mm'\nexport function extractTimeFormat(dateFormat: string) {\n  const res = dateFormat.match(/(a\\s)?h{1,2}:m{1,2}(:s{1,2})?(\\sa)?/i);\n  if (!res) return null;\n  return res[0];\n}\n"],"names":["firstUpperCase","str","toUpperCase","concat","substring","length","getFirstDayOfMonth","year","month","Date","getDaysInMonth","getDate","getLastDayOfMonth","isSameYear","date1","date2","getFullYear","isSameMonth","getMonth","isSameDate","isBetween","value","start","end","date","startTime","endTime","compareAsc","d1","getTime","d2","isSame","type","func","outOfRanges","d","min","max","getToday","now","getDateObj","tempDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","meridiem","setDateTime","hour","sec","subtractMonth","num","day","newDate","_num","setDate","addMonth","setMonth","getWeeks","firstDayOfWeek","disableDate","minDate","maxDate","prependDay","appendDay","maxDays","daysArr","i","today","currentDay","push","text","active","disabled","firstDayOfMonth","lastDayOfMonth","getDay","unshift","toString","additional","Math","abs","LEN","chunk","getYears","startYear","parseInt","endYear","yearArr","disabledMonth","outOfRangeMonth","j","getMonths","params","monthLocal","MonthArr","disabledDay","outOfRangeDay","daysInMonth","flagActive","data","args","_extends","map","row","item","_item","isStart","isEnd","highlight","startOfRange","endOfRange","extractTimeFormat","dateFormat","res","match"],"mappings":"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"}