import { TreeNode, CascaderContextType, CascaderProps } from '../interface';
export declare function getCloseIconClass(prefix: string, CLASSNAMES: any, cascaderContext: CascaderContextType): (string | {
    [x: number]: boolean;
})[];
export declare function getFakeArrowIconClass(prefix: string, CLASSNAMES: any, cascaderContext: CascaderContextType): (string | {
    [x: number]: boolean;
})[];
export declare function getCascaderInnerClasses(prefix: string, CLASSNAMES: any, cascaderContext: CascaderContextType): (string | {
    [x: string]: boolean;
    [x: number]: boolean | import("../../common").SizeEnum;
})[];
export declare function getCloseShow(isHover: boolean, cascaderContext: CascaderContextType): boolean;
export declare function getPlaceholderShow(cascaderContext: CascaderContextType, singleContent: string, multipleContent: TreeNode[]): boolean;
export declare function getSingleContent(cascaderContext: CascaderContextType): string;
export declare function getMultipleContent(cascaderContext: CascaderContextType): TreeNode[];
export declare function outerClickListenerEffect(ref: HTMLElement, cascaderContext: CascaderContextType, event: MouseEvent | TouchEvent): void;
export declare function closeIconClickEffect(cascaderContext: CascaderContextType): void;
export declare function handleRemoveTagEffect(cascaderContext: CascaderContextType, node: TreeNode, onRemove: CascaderProps['onRemove']): void;
export declare function innerContentClickEffect(cascaderContext: CascaderContextType): void;
