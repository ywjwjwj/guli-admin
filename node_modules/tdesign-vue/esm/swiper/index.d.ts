import { TdSwiperProps } from './type';
import './style';
export * from './type';
export declare type SwiperProps = TdSwiperProps;
export declare const Swiper: import("vue/types/vue").ExtendedVue<import("vue").default, {
    visible: boolean;
    index: number;
    timeoutHandler: any;
}, {
    renderContent(): import("vue").VNode;
    renderTrigger(): import("vue").VNode;
    swiperToNext(source: import("./type").SwiperChangeSource): void;
    swiperTo(index: number, source: import("./type").SwiperChangeSource): void;
    setTimer(): void;
    clearTimer(): void;
}, {
    items: import("vue").VNode[];
}, {
    animation: "slide";
    autoplay: boolean;
    current: number;
    defaultCurrent: number;
    direction: "vertical" | "horizontal";
    duration: number;
    interval: number;
    onChange: (current: number, context: {
        source: import("./type").SwiperChangeSource;
    }) => void;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, {
    visible: boolean;
    index: number;
    timeoutHandler: any;
}, {
    renderContent(): import("vue").VNode;
    renderTrigger(): import("vue").VNode;
    swiperToNext(source: import("./type").SwiperChangeSource): void;
    swiperTo(index: number, source: import("./type").SwiperChangeSource): void;
    setTimer(): void;
    clearTimer(): void;
}, {
    items: import("vue").VNode[];
}, {
    animation: "slide";
    autoplay: boolean;
    current: number;
    defaultCurrent: number;
    direction: "vertical" | "horizontal";
    duration: number;
    interval: number;
    onChange: (current: number, context: {
        source: import("./type").SwiperChangeSource;
    }) => void;
}>>;
export declare const SwiperItem: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, unknown, Record<never, any>> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, unknown, unknown, Record<never, any>>>;
export default Swiper;
