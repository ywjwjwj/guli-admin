import Vue from 'vue';
import Group from './group';
import { ClassName } from '../common';
interface CheckboxInstance extends Vue {
    checkboxGroup: InstanceType<typeof Group>;
}
declare const _default: import("vue/types/vue").ExtendedVue<CheckboxInstance, {
    formDisabled: any;
}, {
    handleChange(e: Event): void;
}, {
    labelClasses: ClassName;
    disabled$: boolean;
    name$: string;
    checked$: boolean;
    indeterminate$: boolean;
}, {
    checkAll: boolean;
    checked: boolean;
    defaultChecked: boolean;
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    disabled: any;
    indeterminate: boolean;
    label: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    name: string;
    readonly: boolean;
    value: string | number;
    onChange: (checked: boolean, context: {
        e: Event;
    }) => void;
}>;
export default _default;
