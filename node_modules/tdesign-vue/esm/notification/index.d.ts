import { TdNotificationProps } from './type';
import './style';
export * from './type';
export * from './plugin';
export declare type NotificationProps = TdNotificationProps;
export declare const Notification: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    close(e?: MouseEvent): void;
    renderIcon(h: import("vue").CreateElement): import("vue/types/vnode").ScopedSlotReturnValue;
    renderClose(): JSX.Element;
    renderContent(): JSX.Element;
}, unknown, {
    closeBtn: any;
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    duration: number;
    footer: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    icon: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    theme: import("./type").NotificationThemeList;
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    onCloseBtnClick: (context: {
        e: MouseEvent;
    }) => void;
    onDurationEnd: () => void;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    close(e?: MouseEvent): void;
    renderIcon(h: import("vue").CreateElement): import("vue/types/vnode").ScopedSlotReturnValue;
    renderClose(): JSX.Element;
    renderContent(): JSX.Element;
}, unknown, {
    closeBtn: any;
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    default: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    duration: number;
    footer: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    icon: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    theme: import("./type").NotificationThemeList;
    title: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    onCloseBtnClick: (context: {
        e: MouseEvent;
    }) => void;
    onDurationEnd: () => void;
}>>;
export default Notification;
