{"version":3,"file":"type.js","sources":["../../src/notification/type.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-12-08 20:27:58\n * */\n\nimport { TNode, AttachNode } from '../common';\n\nexport interface TdNotificationProps {\n  /**\n   * 关闭按钮，可以自定义。值为 true 显示默认关闭按钮，值为 false 不显示关闭按钮。值类型为 string 则直接显示值，如：“关闭”。值类型为 TNode，则表示呈现自定义按钮示例\n   */\n  closeBtn?: string | boolean | TNode;\n  /**\n   * 自定义内容\n   */\n  content?: string | TNode;\n  /**\n   * 自定义内容，同 content\n   */\n  default?: string | TNode;\n  /**\n   * 消息显示时长，单位：毫秒。值为 0 表示永久显示\n   * @default 3000\n   */\n  duration?: number;\n  /**\n   * 用于自定义底部内容\n   */\n  footer?: string | TNode;\n  /**\n   * 用于自定义消息通知前面的图标，优先级大于 theme 设定的图标。值为 false 则不显示图标，值为 true 显示 theme 设定图标\n   * @default true\n   */\n  icon?: boolean | TNode;\n  /**\n   * 消息类型\n   * @default info\n   */\n  theme?: NotificationThemeList;\n  /**\n   * 标题\n   */\n  title?: string | TNode;\n  /**\n   * 点击关闭按钮时触发\n   */\n  onCloseBtnClick?: (context: { e: MouseEvent }) => void;\n  /**\n   * 计时结束时触发\n   */\n  onDurationEnd?: () => void;\n};\n\nexport interface NotificationOptions extends TdNotificationProps {\n  /**\n   * 指定消息通知挂载的父节点。数据类型为 String 时，会被当作选择器处理，进行节点查询。示例：'body' 或 () => document.body\n   * @default 'body'\n   */\n  attach?: AttachNode;\n  /**\n   * 相对于 placement 的偏移量，示例：[-10, 20] 或 ['10em', '8rem']\n   */\n  offset?: Array<string | number>;\n  /**\n   * 消息弹出位置\n   * @default top-right\n   */\n  placement?: NotificationPlacementList;\n  /**\n   * 消息通知层级\n   * @default 6000\n   */\n  zIndex?: number;\n};\n\nexport type NotificationThemeList = 'info' | 'success' | 'warning' | 'error';\n\nexport type NotificationPlacementList = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\nexport interface NotificationInstance { close: () => void };\n\nexport type NotificationMethod = (theme: NotificationThemeList, options: NotificationOptions) => Promise<NotificationInstance>;\n\nexport type NotificationInfoOptions = Omit<NotificationOptions, 'theme'>;\n\nexport type NotificationInfoMethod = (options: NotificationInfoOptions) => Promise<NotificationInstance>;\n\nexport type NotificationWarningMethod = (options: NotificationInfoOptions) => Promise<NotificationInstance>;\n\nexport type NotificationErrorMethod = (options: NotificationInfoOptions) => Promise<NotificationInstance>;\n\nexport type NotificationSuccessMethod = (options: NotificationInfoOptions) => Promise<NotificationInstance>;\n\nexport type NotificationCloseMethod = (options: Promise<NotificationInstance>) => void;\n\nexport type NotificationCloseAllMethod = () => void;\n"],"names":[],"mappings":";;;;;;AAAA,CAAA;AACA,CAAA;AACA"}