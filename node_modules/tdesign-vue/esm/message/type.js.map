{"version":3,"file":"type.js","sources":["../../src/message/type.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-12-08 20:28:17\n * */\n\nimport { TNode, AttachNode } from '../common';\n\nexport interface TdMessageProps {\n  /**\n   * 关闭按钮，可以自定义。值为 true 显示默认关闭按钮，值为 false 不显示关闭按钮。值类型为 string 则直接显示值，如：“关闭”。也可以完全自定义按钮\n   */\n  closeBtn?: string | boolean | TNode;\n  /**\n   * 用于自定义消息弹出内容\n   */\n  content?: string | TNode;\n  /**\n   * 消息内置计时器，计时到达时会触发 duration-end 事件。单位：毫秒。值为 0 则表示没有计时器。\n   * @default 3000\n   */\n  duration?: number;\n  /**\n   * 用于自定义消息前面的图标，优先级大于 theme 设定的图标。值为 false 则不显示图标，值为 true 显示 theme 设定图标\n   * @default true\n   */\n  icon?: boolean | TNode;\n  /**\n   * 消息组件风格\n   * @default info\n   */\n  theme?: MessageThemeList;\n  /**\n   * 当关闭按钮存在时，用户点击关闭按钮触发\n   */\n  onCloseBtnClick?: (context: { e: MouseEvent }) => void;\n  /**\n   * 计时结束后触发\n   */\n  onDurationEnd?: () => void;\n};\n\nexport interface MessageOptions extends TdMessageProps {\n  /**\n   * 指定弹框挂载的父节点。数据类型为 String 时，会被当作选择器处理，进行节点查询。示例：'body' 或 () => document.body\n   * @default 'body'\n   */\n  attach?: AttachNode;\n  /**\n   * 相对于 placement 的偏移量，示例：[-10, 20] 或 ['10em', '8rem']\n   */\n  offset?: Array<string | number>;\n  /**\n   * 弹出消息位置\n   * @default top\n   */\n  placement?: MessagePlacementList;\n  /**\n   * 消息层级\n   * @default 5000\n   */\n  zIndex?: number;\n};\n\nexport type MessageThemeList = 'info' | 'success' | 'warning' | 'error' | 'question' | 'loading';\n\nexport type MessagePlacementList = 'center' | 'top' | 'left' | 'right' | 'bottom' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\nexport interface MessageInstance { close: () => void };\n\nexport type MessageMethod = (theme: MessageThemeList, message: string | MessageOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageInfoOptions = Omit<MessageOptions, 'theme'>;\n\nexport type MessageInfoMethod = (message: string | MessageInfoOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageErrorMethod = (message: string | MessageInfoOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageWarningMethod = (message: string | MessageInfoOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageSuccessMethod = (message: string | MessageInfoOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageLoadingMethod = (message: string | MessageInfoOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageQuestionMethod = (message: string | MessageInfoOptions, duration?: number) => Promise<MessageInstance>;\n\nexport type MessageCloseMethod = (options: Promise<MessageInstance>) => void;\n\nexport type MessageCloseAllMethod = () => void;\n"],"names":[],"mappings":";;;;;;AAAA,CAAA;AACA,CAAA;AACA"}