import { TdMessageProps } from './type';
import './style';
export * from './type';
export * from './plugin';
export declare type MessageProps = TdMessageProps;
export declare const Message: import("vue/types/vue").ExtendedVue<import("vue").default, {
    timer: any;
}, {
    setTimer(): void;
    clearTimer(): void;
    close(e?: MouseEvent): void;
    renderClose(): JSX.Element;
    renderIcon(): import("vue/types/vnode").ScopedSlotReturnValue;
}, {
    classes: import("../common").ClassName;
}, {
    placement: string;
    closeBtn: any;
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    duration: number;
    icon: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    theme: import("./type").MessageThemeList;
    onCloseBtnClick: (context: {
        e: MouseEvent;
    }) => void;
    onDurationEnd: () => void;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, {
    timer: any;
}, {
    setTimer(): void;
    clearTimer(): void;
    close(e?: MouseEvent): void;
    renderClose(): JSX.Element;
    renderIcon(): import("vue/types/vnode").ScopedSlotReturnValue;
}, {
    classes: import("../common").ClassName;
}, {
    placement: string;
    closeBtn: any;
    content: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    duration: number;
    icon: boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    theme: import("./type").MessageThemeList;
    onCloseBtnClick: (context: {
        e: MouseEvent;
    }) => void;
    onDurationEnd: () => void;
}>>;
export default Message;
