import Vue, { VNode } from 'vue';
declare const _default: import("vue/types/vue").ExtendedVue<Vue, unknown, {
    getRowspanAndColspanProps(): any[];
    renderFullRow(type: 'first-full-row' | 'last-full-row'): JSX.Element;
    renderBody(): Array<VNode>;
}, {
    selectColumn: any;
}, {
    data: import("..").TableRowData[];
    columns: import("..").BaseTableCol<import("..").TableRowData>[];
    rowClassName: import("../../common").ClassName | ((params: {
        row: import("..").TableRowData;
        rowIndex: number;
    }) => import("../../common").ClassName);
    rowKey: string;
    rowspanAndColspan: (params: import("..").RowspanAndColspanParams<import("..").TableRowData>) => import("..").RowspanColspan;
    firstFullRow: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    lastFullRow: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    onCellClick: (context: import("..").BaseTableCellEventContext<import("..").TableRowData>) => void;
    onRowHover: (context: import("..").RowEventContext<import("..").TableRowData>) => void;
    onRowMouseup: (context: import("..").RowEventContext<import("..").TableRowData>) => void;
    onRowMousedown: (context: import("..").RowEventContext<import("..").TableRowData>) => void;
    onRowClick: (context: import("..").RowEventContext<import("..").TableRowData>) => void;
    onRowDbClick: (context: import("..").RowEventContext<import("..").TableRowData>) => void;
    selectedRowKeys: (string | number)[];
    provider: any;
    current: number;
}>;
export default _default;
