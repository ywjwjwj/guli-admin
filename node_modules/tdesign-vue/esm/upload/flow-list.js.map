{"version":3,"file":"flow-list.js","sources":["../../src/upload/flow-list.tsx"],"sourcesContent":["import Vue, { VNode, PropType } from 'vue';\nimport {\n  TimeFilledIcon,\n  CheckCircleFilledIcon,\n  ErrorCircleFilledIcon,\n  DeleteIcon,\n  BrowseIcon,\n} from 'tdesign-icons-vue';\nimport { prefix } from '../config';\nimport { UploadFile } from './type';\nimport TButton from '../button';\nimport TLoading from '../loading';\nimport { returnFileSize, abridgeName, UPLOAD_NAME } from './util';\nimport { FlowRemoveContext } from './interface';\nimport props from './props';\n\nexport default Vue.extend({\n  name: 'TUploadFlowList',\n\n  components: {\n    TButton,\n    TLoading,\n    TimeFilledIcon,\n    CheckCircleFilledIcon,\n    ErrorCircleFilledIcon,\n    DeleteIcon,\n    BrowseIcon,\n  },\n\n  props: {\n    showUploadProgress: props.showUploadProgress,\n    // 是否过滤重复文件\n    allowUploadDuplicateFile: props.allowUploadDuplicateFile,\n    // 已上传完成的文件\n    files: Array as PropType<Array<UploadFile>>,\n    // 合并上传\n    batchUpload: Boolean,\n    // 上传队列中的文件（可能存在已经上传过的文件）\n    toUploadFiles: Array as PropType<Array<UploadFile>>,\n    placeholder: String,\n    autoUpload: Boolean,\n    disabled: Boolean,\n    remove: Function as PropType<(ctx: FlowRemoveContext) => void>,\n    upload: Function as PropType<(files: Array<UploadFile>, e: MouseEvent) => void>,\n    cancel: Function as PropType<(e: MouseEvent) => void>,\n    display: {\n      type: String as PropType<'file-flow' | 'image-flow'>,\n      validator(val: string) {\n        return ['file-flow', 'image-flow'].includes(val);\n      },\n    },\n  },\n\n  data() {\n    return {\n      dragActive: false,\n      target: null,\n    };\n  },\n\n  computed: {\n    showInitial(): boolean {\n      const isWatingEmpty = !this.waitingUploadFiles || !this.waitingUploadFiles.length;\n      return (!this.files || !this.files.length) && isWatingEmpty;\n    },\n    // 上传队列中的文件（不包含已经上传过的文件）\n    waitingUploadFiles(): Array<UploadFile> {\n      const list: Array<UploadFile> = [];\n      this.toUploadFiles.forEach((item) => {\n        // 判断是否需要过滤重复文件\n        if (!this.allowUploadDuplicateFile) {\n          const r = this.files.filter((t) => t.name === item.name);\n          if (!r.length) {\n            list.push(item);\n          }\n        } else {\n          list.push(item);\n        }\n      });\n      return list;\n    },\n    listFiles(): Array<UploadFile> {\n      if (!this.files || !this.files.length) return this.toUploadFiles;\n      return this.files.concat(this.waitingUploadFiles);\n    },\n    failedList(): Array<UploadFile> {\n      return this.toUploadFiles.filter((file) => file.status === 'fail');\n    },\n    processList(): Array<UploadFile> {\n      return this.toUploadFiles.filter((file) => file.status === 'progress');\n    },\n    isUploading(): boolean {\n      return !!this.processList.length;\n    },\n    allowUpload(): boolean {\n      return Boolean(this.waitingUploadFiles && this.waitingUploadFiles.length) && !this.isUploading;\n    },\n    uploadText(): string {\n      if (this.isUploading) return '上传中...';\n      return this.failedList && this.failedList.length ? '重新上传' : '开始上传';\n    },\n    batchRemoveRow(): boolean {\n      return this.batchUpload && this.files.length > 0;\n    },\n  },\n  methods: {\n    renderStatus(file: UploadFile) {\n      let status = null;\n      switch (file.status) {\n        case 'success':\n          status = (\n            <div class={`${UPLOAD_NAME}__flow-status`}>\n              <CheckCircleFilledIcon />\n              <span>上传成功</span>\n            </div>\n          );\n          break;\n        case 'fail':\n          status = (\n            <div class={`${UPLOAD_NAME}__flow-status`}>\n              <ErrorCircleFilledIcon />\n              <span>上传失败</span>\n            </div>\n          );\n          break;\n        case 'progress':\n          this.showUploadProgress\n            && (status = (\n              <div class={`${UPLOAD_NAME}__flow-status`}>\n                <TLoading />\n                <span>上传中 {Math.min(file.percent, 99)}%</span>\n              </div>\n            ));\n          break;\n        case 'waiting':\n          status = (\n            <div class={`${UPLOAD_NAME}__flow-status`}>\n              <TimeFilledIcon />\n              <span>待上传</span>\n            </div>\n          );\n          break;\n      }\n      return status;\n    },\n    handleDrop(event: DragEvent) {\n      event.preventDefault();\n      this.$emit('change', event.dataTransfer.files);\n      this.$emit('dragleave', event);\n      this.dragActive = false;\n    },\n\n    handleDragenter(event: DragEvent) {\n      this.target = event.target;\n      event.preventDefault();\n      this.$emit('dragenter', event);\n      this.dragActive = true;\n    },\n\n    handleDragleave(event: DragEvent) {\n      if (this.target !== event.target) return;\n      event.preventDefault();\n      this.$emit('dragleave', event);\n      this.dragActive = false;\n    },\n\n    handleDragover(event: DragEvent) {\n      event.preventDefault();\n    },\n\n    onViewClick(event: MouseEvent, file?: UploadFile) {\n      this.$emit('imgPreview', event, file);\n    },\n\n    renderDrager() {\n      return (\n        <div\n          class={`${UPLOAD_NAME}__flow-empty`}\n          onDrop={this.handleDrop}\n          onDragenter={this.handleDragenter}\n          onDragover={this.handleDragover}\n          onDragleave={this.handleDragleave}\n        >\n          {this.dragActive ? '释放鼠标' : '点击上方“选择文件”或将文件拖拽到此区域'}\n        </div>\n      );\n    },\n\n    renderFileList() {\n      return (\n        <table class={`${UPLOAD_NAME}__flow-table`}>\n          <tr>\n            <th>文件名</th>\n            <th>大小</th>\n            <th>状态</th>\n            <th>操作</th>\n          </tr>\n          {this.showInitial && (\n            <tr>\n              <td colspan={4}>{this.renderDrager()}</td>\n            </tr>\n          )}\n          {this.listFiles.map((file, index) => {\n            // 合并操作出现条件为：当前为合并上传模式且列表内没有待上传文件\n            const showBatchUploadAction = this.batchUpload && this.toUploadFiles.length === 0;\n            return (\n              <tr>\n                <td>{abridgeName(file.name, 7, 10)}</td>\n                <td>{returnFileSize(file.size)}</td>\n                <td>{this.renderStatus(file)}</td>\n                {showBatchUploadAction ? this.renderBatchActionCol(index) : this.renderNormalActionCol(file, index)}\n              </tr>\n            );\n          })}\n        </table>\n      );\n    },\n\n    renderNormalActionCol(file: UploadFile, index: number) {\n      return (\n        <td>\n          <span\n            class={`${UPLOAD_NAME}__flow-button`}\n            onClick={(e: MouseEvent) => this.remove({\n              e,\n              index,\n              file,\n            })\n            }\n          >\n            删除\n          </span>\n        </td>\n      );\n    },\n\n    // batchUpload action col\n    renderBatchActionCol(index: number) {\n      // 第一行数据才需要合并单元格\n      return index === 0 ? (\n        <td rowspan={this.listFiles.length} class={`${UPLOAD_NAME}__flow-table__batch-row`}>\n          <span\n            class={`${UPLOAD_NAME}__flow-button`}\n            onClick={(e: MouseEvent) => this.remove({\n              e,\n              index: -1,\n              file: null,\n            })\n            }\n          >\n            删除\n          </span>\n        </td>\n      ) : (\n        ''\n      );\n    },\n\n    renderImgList() {\n      return (\n        <div class={`${UPLOAD_NAME}__flow-card-area`}>\n          {this.showInitial && this.renderDrager()}\n          {!!this.listFiles.length && (\n            <ul class={`${UPLOAD_NAME}__card clearfix`}>\n              {this.listFiles.map((file, index) => (\n                <li class={`${UPLOAD_NAME}__card-item`}>\n                  <div\n                    class={[`${UPLOAD_NAME}__card-content`, { [`${prefix}-is-bordered`]: file.status !== 'waiting' }]}\n                  >\n                    {file.status === 'fail' && (\n                      <div class={`${UPLOAD_NAME}__card-status-wrap`}>\n                        <ErrorCircleFilledIcon />\n                        <p>上传失败</p>\n                      </div>\n                    )}\n                    {file.status === 'progress' && (\n                      <div class={`${UPLOAD_NAME}__card-status-wrap`}>\n                        <TLoading />\n                        <p>上传中 {Math.min(file.percent, 99)}</p>\n                      </div>\n                    )}\n                    {(['waiting', 'success'].includes(file.status) || (!file.status && file.url)) && (\n                      <img\n                        class={`${UPLOAD_NAME}__card-image`}\n                        src={file.url || '//tdesign.gtimg.com/tdesign-default-img.png'}\n                      />\n                    )}\n                    <div class={`${UPLOAD_NAME}__card-mask`}>\n                      {file.url && (\n                        <span class={`${UPLOAD_NAME}__card-mask-item`}>\n                          <BrowseIcon nativeOnClick={(e: MouseEvent) => this.onViewClick(e, file)} />\n                          <span class={`${UPLOAD_NAME}__card-mask-item-divider`}></span>\n                        </span>\n                      )}\n                      {!this.disabled && (\n                        <span\n                          class={`${UPLOAD_NAME}__card-mask-item`}\n                          onClick={(e: MouseEvent) => this.remove({ e, index, file })}\n                        >\n                          <DeleteIcon />\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <p class={`${UPLOAD_NAME}__card-name`}>{abridgeName(file.name)}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      );\n    },\n  },\n\n  render(): VNode {\n    return (\n      <div class={[`${UPLOAD_NAME}__flow`, `${UPLOAD_NAME}__flow-${this.display}`]}>\n        <div class={`${UPLOAD_NAME}__flow-op`}>\n          {this.$scopedSlots.default && this.$scopedSlots.default(null)}\n          <small class={`${prefix}-size-s ${UPLOAD_NAME}__flow-placeholder`}>{this.placeholder}</small>\n        </div>\n        {this.display === 'file-flow' && this.renderFileList()}\n        {this.display === 'image-flow' && this.renderImgList()}\n        <div class={`${UPLOAD_NAME}__flow-bottom`}>\n          <TButton theme=\"default\" onClick={this.cancel}>\n            取消\n          </TButton>\n          <TButton\n            disabled={!this.allowUpload}\n            theme=\"primary\"\n            onClick={(e: MouseEvent) => this.upload(this.waitingUploadFiles, e)}\n          >\n            {this.uploadText}\n          </TButton>\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["Vue","extend","name","components","TButton","TLoading","TimeFilledIcon","CheckCircleFilledIcon","ErrorCircleFilledIcon","DeleteIcon","BrowseIcon","props","showUploadProgress","allowUploadDuplicateFile","files","Array","batchUpload","Boolean","toUploadFiles","placeholder","String","autoUpload","disabled","remove","Function","upload","cancel","display","type","validator","val","includes","data","dragActive","target","computed","showInitial","isWatingEmpty","waitingUploadFiles","length","list","forEach","item","r","filter","t","push","listFiles","concat","failedList","file","status","processList","isUploading","allowUpload","uploadText","batchRemoveRow","methods","renderStatus","UPLOAD_NAME","Math","min","percent","handleDrop","event","preventDefault","$emit","dataTransfer","handleDragenter","handleDragleave","handleDragover","onViewClick","renderDrager","renderFileList","map","index","showBatchUploadAction","abridgeName","returnFileSize","size","renderBatchActionCol","renderNormalActionCol","e","renderImgList","prefix","url","render","$scopedSlots"],"mappings":"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"}