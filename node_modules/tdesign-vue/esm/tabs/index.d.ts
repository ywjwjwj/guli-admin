import { TdTabsProps, TdTabPanelProps } from './type';
import './style';
export * from './type';
export declare type TabsProps = TdTabsProps;
export declare type TabPanelProps = TdTabPanelProps;
export declare const Tabs: import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    updateData(this: any, propName: string, v: any, ...args: any[]): any;
}, unknown, {
    [x: string]: any;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("vue").default, unknown, {
    updateData(this: any, propName: string, v: any, ...args: any[]): any;
}, unknown, {
    [x: string]: any;
}>>;
export declare const TabPanel: import("vue/types/vue").ExtendedVue<import("./tab-panel").TabPanel, unknown, unknown, {
    active: boolean;
}, {
    default: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    destroyOnHide: boolean;
    disabled: boolean;
    label: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    panel: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    removable: boolean;
    value: import("./type").TabValue;
    onRemove: (options: {
        value: import("./type").TabValue;
        e: MouseEvent;
    }) => void;
}> & import("vue").PluginObject<import("vue/types/vue").ExtendedVue<import("./tab-panel").TabPanel, unknown, unknown, {
    active: boolean;
}, {
    default: (h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue;
    destroyOnHide: boolean;
    disabled: boolean;
    label: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    panel: string | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue);
    removable: boolean;
    value: import("./type").TabValue;
    onRemove: (options: {
        value: import("./type").TabValue;
        e: MouseEvent;
    }) => void;
}>>;
export default Tabs;
