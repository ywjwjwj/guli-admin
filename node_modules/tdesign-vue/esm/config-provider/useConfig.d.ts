import { GlobalConfig } from './context';
export * from './type';
export declare const merge: (defaultGlobalConfig: GlobalConfig, injectConfig: GlobalConfig) => {
    animation: {
        include: string[];
        exclude: string[];
    };
    calendar?: import("./type").CalendarConfig;
    cascader?: import("./type").CascaderConfig;
    datePicker?: import("./type").DatePickerConfig;
    dialog?: import("./type").DialogConfig;
    drawer?: import("./type").DrawerConfig;
    form?: import("./type").FormConfig;
    input?: import("./type").InputConfig;
    list?: import("./type").ListConfig;
    pagination?: import("./type").PaginationConfig;
    popconfirm?: import("./type").PopconfirmConfig;
    select?: import("./type").SelectConfig;
    steps?: import("./type").StepsConfig;
    table?: import("./type").TableConfig;
    tag?: import("./type").TagConfig;
    timePicker?: import("./type").TimePickerConfig;
    transfer?: import("./type").TransferConfig;
    tree?: import("./type").TreeConfig;
    treeSelect?: import("./type").TreeSelectConfig;
    upload?: import("./type").UploadConfig;
    classPrefix: string;
};
export declare function useConfig<T extends keyof GlobalConfig>(componentName: T): {
    t: <T_1>(pattern: T_1, data?: Record<string, string | number>) => any;
    global: import("@vue/composition-api").ComputedRef<{
        animation: {
            include: string[];
            exclude: string[];
        };
        calendar?: import("./type").CalendarConfig;
        cascader?: import("./type").CascaderConfig;
        datePicker?: import("./type").DatePickerConfig;
        dialog?: import("./type").DialogConfig;
        drawer?: import("./type").DrawerConfig;
        form?: import("./type").FormConfig;
        input?: import("./type").InputConfig;
        list?: import("./type").ListConfig;
        pagination?: import("./type").PaginationConfig;
        popconfirm?: import("./type").PopconfirmConfig;
        select?: import("./type").SelectConfig;
        steps?: import("./type").StepsConfig;
        table?: import("./type").TableConfig;
        tag?: import("./type").TagConfig;
        timePicker?: import("./type").TimePickerConfig;
        transfer?: import("./type").TransferConfig;
        tree?: import("./type").TreeConfig;
        treeSelect?: import("./type").TreeSelectConfig;
        upload?: import("./type").UploadConfig;
        classPrefix: string;
    }[T]>;
    classPrefix: import("@vue/composition-api").ComputedRef<string>;
};
export declare function usePrefixClass(componentName?: string): import("@vue/composition-api").ComputedRef<string>;
