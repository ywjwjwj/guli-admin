{"version":3,"file":"comment.js","sources":["../../src/comment/comment.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport { ScopedSlotReturnValue, ScopedSlotReturnArray } from 'vue/types/vnode';\nimport { prefix } from '../config';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\n\nconst preName = `${prefix}-comment`;\n\nexport default Vue.extend({\n  name: 'TComment',\n  props,\n  methods: {\n    renderReply() {\n      const reply = renderTNodeJSX(this, 'reply');\n      return reply ? <div class={`${preName}__reply`}>{reply}</div> : null;\n    },\n    renderActions() {\n      const actions: ScopedSlotReturnArray = renderTNodeJSX(this, 'actions');\n      return actions && actions.length ? (\n        <ul class={`${preName}__actions`}>\n          {actions.map((action: ScopedSlotReturnValue, index: number) => (\n            <li key={`action-${index}`}>{action}</li>\n          ))}\n        </ul>\n      ) : null;\n    },\n\n    renderQuote() {\n      const quote = renderTNodeJSX(this, 'quote');\n      return quote ? <div class={`${preName}__quote`}>{quote}</div> : null;\n    },\n\n    renderAuthorDatetime() {\n      const author = renderTNodeJSX(this, 'author');\n      const datetime = renderTNodeJSX(this, 'datetime');\n\n      return (\n        (author || datetime) && (\n          <div class={`${preName}__author`}>\n            {author && <span class={`${preName}__name`}>{author}</span>}\n            {datetime && <span class={`${preName}__time`}>{datetime}</span>}\n          </div>\n        )\n      );\n    },\n\n    renderContent() {\n      return (\n        <div class={`${preName}__content`}>\n          {this.renderAuthorDatetime()}\n          <div class={`${preName}__detail`}>{renderTNodeJSX(this, 'content')}</div>\n          {this.renderQuote()}\n          {this.renderActions()}\n        </div>\n      );\n    },\n\n    renderAvatar() {\n      const avatar = renderTNodeJSX(this, 'avatar');\n      return avatar ? (\n        <div class={`${preName}__avatar`}>\n          {typeof avatar === 'string' ? <img src={avatar} alt=\"\" class={`${preName}__avatar-image`} /> : avatar}\n        </div>\n      ) : null;\n    },\n  },\n\n  render(): VNode {\n    return (\n      <div class={preName}>\n        <div class={`${preName}__inner`}>\n          {this.renderAvatar()}\n          {this.renderContent()}\n        </div>\n        {this.renderReply()}\n      </div>\n    );\n  },\n});\n"],"names":["preName","prefix","Vue","extend","name","props","methods","renderReply","reply","renderTNodeJSX","renderActions","actions","length","map","action","index","renderQuote","quote","renderAuthorDatetime","author","datetime","renderContent","renderAvatar","avatar","render"],"mappings":"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"}