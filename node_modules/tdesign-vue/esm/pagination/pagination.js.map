{"version":3,"file":"pagination.js","sources":["../../src/pagination/pagination.tsx"],"sourcesContent":["import {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronRightDoubleIcon,\n  ChevronLeftDoubleIcon,\n  EllipsisIcon,\n} from 'tdesign-icons-vue';\nimport Vue from 'vue';\nimport { prefix } from '../config';\nimport mixins from '../utils/mixins';\nimport getConfigReceiverMixins, { PaginationConfig } from '../config-provider/config-receiver';\nimport TInputNumber from '../input-number';\nimport { Select, Option } from '../select';\nimport CLASSNAMES from '../utils/classnames';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport props from './props';\nimport { ClassName } from '../common';\nimport { emitEvent } from '../utils/event';\nimport { TdPaginationProps } from './type';\n\nconst name = `${prefix}-pagination`;\nconst min = 1;\n\nexport type PageSizeChangeParams = Parameters<TdPaginationProps['onPageSizeChange']>;\nexport type CurrentChangeParams = Parameters<TdPaginationProps['onCurrentChange']>;\nexport type ChangeEventParams = Parameters<TdPaginationProps['onChange']>;\n\nexport default mixins(getConfigReceiverMixins<Vue, PaginationConfig>('pagination')).extend({\n  name: 'TPagination',\n\n  components: {\n    ChevronLeftIcon,\n    ChevronRightIcon,\n    ChevronRightDoubleIcon,\n    ChevronLeftDoubleIcon,\n    EllipsisIcon,\n    TInputNumber,\n    TSelect: Select,\n    TOption: Option,\n  },\n\n  props: {\n    ...props,\n    /**\n     * 当前页\n     */\n    current: {\n      type: Number,\n      default: 1,\n      validator(v: number): boolean {\n        return v > 0;\n      },\n    },\n    /**\n     * 分页大小\n     */\n    pageSize: {\n      type: Number,\n      default: 10,\n      validator(v: number): boolean {\n        return v > 0;\n      },\n    },\n  },\n\n  data() {\n    return {\n      prevMore: false,\n      nextMore: false,\n      jumpIndex: this.current,\n    };\n  },\n\n  watch: {\n    current(val) {\n      this.jumpIndex = val;\n    },\n  },\n\n  computed: {\n    /**\n     * 样式计算\n     */\n    paginationClass(): ClassName {\n      return [\n        `${name}`,\n        CLASSNAMES.SIZE[this.size],\n        {\n          [CLASSNAMES.STATUS.disabled]: this.disabled,\n        },\n      ];\n    },\n    totalClass(): ClassName {\n      return [`${name}__total`];\n    },\n    sizerClass(): ClassName {\n      return [`${name}__select`];\n    },\n    preBtnClass(): ClassName {\n      return [\n        `${name}__btn`,\n        `${name}__btn-prev`,\n        {\n          [CLASSNAMES.STATUS.disabled]: this.disabled || this.current === 1,\n        },\n      ];\n    },\n    nextBtnClass(): ClassName {\n      return [\n        `${name}__btn`,\n        `${name}__btn-next`,\n        {\n          [CLASSNAMES.STATUS.disabled]: this.disabled || this.current === this.pageCount,\n        },\n      ];\n    },\n    btnWrapClass(): ClassName {\n      return [`${name}__pager`];\n    },\n    btnMoreClass(): ClassName {\n      return [\n        `${name}__number`,\n        `${name}__number--more`,\n        {\n          [CLASSNAMES.STATUS.disabled]: this.disabled,\n        },\n      ];\n    },\n    jumperClass(): ClassName {\n      return [`${name}__jump`];\n    },\n    jumperInputClass(): ClassName {\n      return [`${name}__input`];\n    },\n    simpleClass(): ClassName {\n      return [`${name}__select`];\n    },\n    isSimple(): boolean {\n      return this.theme === 'simple';\n    },\n    pageCount(): number {\n      const c: number = Math.ceil(this.total / this.pageSize);\n      return c > 0 ? c : 1;\n    },\n    pageCountOption(): Array<{ label: string; value: number }> {\n      const ans = [];\n      for (let i = 1; i <= this.pageCount; i++) {\n        ans.push({ value: i, label: `${i}/${this.pageCount}` });\n      }\n      return ans;\n    },\n    sizeOptions(): Array<{ label: string; value: number }> {\n      const options = this.pageSizeOptions.map((option) => typeof option === 'object'\n        ? option\n        : {\n          label: this.t(this.global.itemsPerPage, { size: option }),\n          value: Number(option),\n        });\n      return options.sort((a, b) => a.value - b.value);\n    },\n\n    curPageLeftCount(): number {\n      return Math.ceil((this.foldedMaxPageBtn - 1) / 2);\n    },\n\n    curPageRightCount(): number {\n      return Math.ceil((this.foldedMaxPageBtn - 1) / 2);\n    },\n\n    isPrevMoreShow(): boolean {\n      return 2 + this.curPageLeftCount < this.current;\n    },\n\n    isNextMoreShow(): boolean {\n      return this.pageCount - 1 - this.curPageRightCount > this.current;\n    },\n\n    pages(): Array<number> {\n      const array = [];\n      let start;\n      let end;\n\n      if (this.isFolded) {\n        if (this.isPrevMoreShow && this.isNextMoreShow) {\n          start = this.current - this.curPageLeftCount;\n          end = this.current + this.curPageRightCount;\n        } else {\n          start = this.isPrevMoreShow ? this.pageCount - this.foldedMaxPageBtn + 1 : 2;\n          end = this.isPrevMoreShow ? this.pageCount - 1 : this.foldedMaxPageBtn;\n        }\n      } else {\n        start = 1;\n        end = this.pageCount;\n      }\n\n      for (let i = start; i <= end; i++) {\n        array.push(i);\n      }\n      return array;\n    },\n\n    isFolded(): boolean {\n      return this.pageCount > this.maxPageBtn;\n    },\n  },\n\n  methods: {\n    toPage(pageIndex: number, isTriggerChange?: boolean): void {\n      if (this.disabled) {\n        return;\n      }\n      let current = pageIndex;\n      if (pageIndex < min) {\n        current = min;\n      } else if (pageIndex > this.pageCount) {\n        current = this.pageCount;\n      }\n      if (this.current !== current) {\n        const prev = this.current;\n        const pageInfo = {\n          current,\n          previous: prev,\n          pageSize: this.pageSize,\n        };\n        emitEvent<CurrentChangeParams>(this, 'current-change', current, pageInfo);\n        if (isTriggerChange !== false) {\n          emitEvent<ChangeEventParams>(this, 'change', pageInfo);\n        }\n      }\n    },\n\n    prevPage(): void {\n      this.toPage(this.current - 1);\n    },\n\n    nextPage(): void {\n      this.toPage(this.current + 1);\n    },\n\n    prevMorePage(): void {\n      this.toPage(this.current - this.foldedMaxPageBtn);\n    },\n\n    nextMorePage(): void {\n      this.toPage(this.current + this.foldedMaxPageBtn);\n    },\n\n    getButtonClass(index: number): ClassName {\n      return [\n        `${name}__number`,\n        {\n          [CLASSNAMES.STATUS.disabled]: this.disabled,\n          [CLASSNAMES.STATUS.current]: this.current === index,\n        },\n      ];\n    },\n\n    onSelectorChange(e: string): void {\n      if (this.disabled) {\n        return;\n      }\n      const pageSize: number = parseInt(e, 10);\n      let pageCount = 1;\n      if (pageSize > 0) {\n        pageCount = Math.ceil(this.total / pageSize);\n      }\n\n      let isIndexChange = false;\n\n      if (this.current > pageCount) {\n        isIndexChange = true;\n      }\n\n      /**\n       * 分页大小变化事件\n       * @param {Number} pageSize 分页大小\n       * @param {Number} index 当前页\n       */\n      const pageInfo = {\n        current: isIndexChange ? pageCount : this.current,\n        previous: this.current,\n        pageSize,\n      };\n      this.$emit('update:pageSize', pageSize, pageInfo);\n      emitEvent<PageSizeChangeParams>(this, 'page-size-change', pageSize, pageInfo);\n      emitEvent<ChangeEventParams>(this, 'change', pageInfo);\n      if (isIndexChange) {\n        this.toPage(pageCount, false);\n      }\n    },\n\n    // 自定义页码时，相当于 current 发生变化\n    onJumperChange(val: String) {\n      const currentIndex = Number(val);\n      if (isNaN(currentIndex)) return;\n      this.toPage(currentIndex);\n    },\n  },\n\n  render() {\n    return (\n      <div class={this.paginationClass}>\n        {/* 数据统计区 */}\n        {renderTNodeJSX(\n          this,\n          'totalContent',\n          <div class={this.totalClass}>{this.t(this.global.total, { total: this.total })}</div>,\n        )}\n        {/* select */}\n        {this.pageSizeOptions.length ? (\n          <t-select\n            size={this.size}\n            value={this.pageSize}\n            disabled={this.disabled}\n            class={this.sizerClass}\n            onChange={this.onSelectorChange}\n          >\n            {this.sizeOptions.map((item, index) => (\n              <t-option value={item.value} label={item.label} key={index} />\n            ))}\n          </t-select>\n        ) : null}\n        {/* 向前按钮 */}\n        <div class={this.preBtnClass} onClick={this.prevPage} disabled={this.disabled || this.current === min}>\n          <chevron-left-icon />\n        </div>\n        {/* 页数 */}\n        {!this.isSimple ? (\n          <ul class={this.btnWrapClass}>\n            {this.isFolded ? (\n              <li class={this.getButtonClass(1)} onClick={() => this.toPage(min)}>\n                {min}\n              </li>\n            ) : null}\n            {this.isFolded && this.isPrevMoreShow ? (\n              <li\n                class={this.btnMoreClass}\n                onClick={this.prevMorePage}\n                onMouseover={() => (this.prevMore = true)}\n                onMouseout={() => (this.prevMore = false)}\n              >\n                {this.prevMore ? <chevron-left-double-icon /> : <ellipsis-icon />}\n              </li>\n            ) : null}\n            {this.pages.map((i) => (\n              <li class={this.getButtonClass(i)} key={i} onClick={() => this.toPage(i)}>\n                {i}\n              </li>\n            ))}\n            {this.isFolded && this.isNextMoreShow ? (\n              <li\n                class={this.btnMoreClass}\n                onClick={this.nextMorePage}\n                onMouseover={() => (this.nextMore = true)}\n                onMouseout={() => (this.nextMore = false)}\n              >\n                {this.nextMore ? <chevron-right-double-icon /> : <ellipsis-icon />}\n              </li>\n            ) : null}\n            {this.isFolded ? (\n              <li class={this.getButtonClass(this.pageCount)} onClick={() => this.toPage(this.pageCount)}>\n                {this.pageCount}\n              </li>\n            ) : null}\n          </ul>\n        ) : (\n          <t-select\n            size={this.size}\n            value={this.current}\n            disabled={this.disabled}\n            class={this.simpleClass}\n            onChange={this.toPage}\n            options={this.pageCountOption}\n          />\n        )}\n        {/* 向后按钮 */}\n        <div\n          class={this.nextBtnClass}\n          onClick={this.nextPage}\n          disabled={this.disabled || this.current === this.pageCount}\n        >\n          <chevron-right-icon />\n        </div>\n        {/* 跳转 */}\n        {this.showJumper ? (\n          <div class={this.jumperClass}>\n            {this.t(this.global.jumpTo)}\n            <t-input-number\n              class={this.jumperInputClass}\n              v-model={this.jumpIndex}\n              onBlur={this.onJumperChange}\n              onEnter={this.onJumperChange}\n              max={this.pageCount}\n              min={min}\n              theme=\"normal\"\n            />\n            {this.t(this.global.page)}\n          </div>\n        ) : null}\n      </div>\n    );\n  },\n});\n"],"names":["name","prefix","min","mixins","getConfigReceiverMixins","extend","components","ChevronLeftIcon","ChevronRightIcon","ChevronRightDoubleIcon","ChevronLeftDoubleIcon","EllipsisIcon","TInputNumber","TSelect","Select","TOption","Option","props","current","type","Number","validator","v","pageSize","data","prevMore","nextMore","jumpIndex","watch","val","computed","paginationClass","CLASSNAMES","SIZE","size","STATUS","disabled","totalClass","sizerClass","preBtnClass","nextBtnClass","pageCount","btnWrapClass","btnMoreClass","jumperClass","jumperInputClass","simpleClass","isSimple","theme","c","Math","ceil","total","pageCountOption","ans","i","push","value","label","sizeOptions","options","pageSizeOptions","map","option","t","global","itemsPerPage","sort","a","b","curPageLeftCount","foldedMaxPageBtn","curPageRightCount","isPrevMoreShow","isNextMoreShow","pages","array","start","end","isFolded","maxPageBtn","methods","toPage","pageIndex","isTriggerChange","prev","pageInfo","previous","emitEvent","prevPage","nextPage","prevMorePage","nextMorePage","getButtonClass","index","onSelectorChange","e","parseInt","isIndexChange","$emit","onJumperChange","currentIndex","isNaN","render","renderTNodeJSX","length","item","showJumper","jumpTo","page"],"mappings":"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"}