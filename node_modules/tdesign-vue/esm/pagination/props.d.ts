import { TdPaginationProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    current: {
        type: NumberConstructor;
        default: number;
    };
    defaultCurrent: {
        type: NumberConstructor;
        default: number;
    };
    disabled: BooleanConstructor;
    foldedMaxPageBtn: {
        type: NumberConstructor;
        default: number;
    };
    maxPageBtn: {
        type: NumberConstructor;
        default: number;
    };
    pageSize: {
        type: NumberConstructor;
        default: number;
    };
    defaultPageSize: {
        type: NumberConstructor;
        default: number;
    };
    pageSizeOptions: {
        type: PropType<(number | {
            label: string;
            value: number;
        })[]>;
        default: () => number[];
    };
    showJumper: BooleanConstructor;
    size: {
        type: PropType<"small" | "medium">;
        default: "small" | "medium";
        validator(val: TdPaginationProps['size']): boolean;
    };
    theme: {
        type: PropType<"default" | "simple">;
        default: "default" | "simple";
        validator(val: TdPaginationProps['theme']): boolean;
    };
    total: {
        type: NumberConstructor;
        default: number;
    };
    totalContent: {
        type: PropType<boolean | ((h: import("vue").CreateElement) => import("vue/types/vnode").ScopedSlotReturnValue)>;
        default: boolean;
    };
    onChange: PropType<(pageInfo: import("./type").PageInfo) => void>;
    onCurrentChange: PropType<(current: number, pageInfo: import("./type").PageInfo) => void>;
    onPageSizeChange: PropType<(pageSize: number, pageInfo: import("./type").PageInfo) => void>;
};
export default _default;
