{"version":3,"file":"icon.js","sources":["../../src/iconfont/icon.tsx"],"sourcesContent":["import Vue, { VNode } from 'vue';\nimport props from './props/props';\nimport useSizeProps from '../utils/use-size-props';\nimport ConfigContext from '../utils/config-context';\nimport { checkLinkAndLoad } from '../utils/check-url-and-load';\n\nimport '../style/css';\n\nconst { classPrefix } = ConfigContext;\n\nconst CDN_ICONFONT_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.css';\n\nexport const IconFont = Vue.extend({\n  name: 'IconFont',\n  props,\n\n  computed: {\n    classes(): ClassName {\n      const tName = `${classPrefix}-icon`;\n\n      const { className: sizeClassName } = useSizeProps(this.size);\n      const iconName = this.url ? this.name : `${tName}-${this.name}`;\n      const arr = [\n        tName,\n        iconName,\n        sizeClassName,\n      ];\n      return arr;\n    },\n    iconStyle(): Styles {\n      if (['small', 'medium', 'large'].includes(this.size)) return {};\n      return {\n        'font-size': this.size,\n      };\n    },\n  },\n  mounted() {\n    let finalUrl: Array<string> = [];\n\n    if (this.url) {\n      finalUrl = this.url instanceof Array ? this.url.concat() : [this.url];\n    }\n    if (this.loadDefaultIcons) {\n      finalUrl.push(CDN_ICONFONT_URL);\n    }\n\n    Array.from(new Set(finalUrl)).forEach((url: string) => {\n      checkLinkAndLoad(url, `${classPrefix}-iconfont-stylesheet--unique-class`);\n    });\n  },\n  methods: {\n    handleClick(e: MouseEvent) {\n      this.$emit('click', { e });\n      this.onClick?.({ e });\n    },\n  },\n  render(): VNode {\n    const Component = this.tag;\n    return <Component class={this.classes} style={this.iconStyle} onClick={this.handleClick}></Component>;\n  },\n});\n\nexport default IconFont;\n"],"names":["classPrefix","ConfigContext","CDN_ICONFONT_URL","IconFont","Vue","extend","name","props","computed","classes","tName","useSizeProps","size","sizeClassName","className","iconName","url","arr","iconStyle","includes","mounted","finalUrl","Array","concat","loadDefaultIcons","push","from","Set","forEach","methods","handleClick","e","$emit","onClick","render","Component","tag"],"mappings":";;;;;;;;;;;;;;;AAQA,IAAQA,WAAR,GAAwBC,8BAAxB,CAAQD,WAAR;AAEA,IAAME,mBAAmB,sDAAzB;IAEaC,WAAWC,wBAAIC,MAAJ,CAAW;AACjCC,EAAAA,MAAM,UAD2B;AAEjCC,EAAAA,OAAAA,+BAFiC;AAIjCC,EAAAA,UAAU;AACRC,IAAAA,OADQ,qBACa;UACbC,kBAAWV;;0BAEoBW,8BAAa,KAAKC;UAApCC,8BAAXC;;UACFC,WAAW,KAAKC,GAAL,GAAW,KAAKV,IAAhB,aAA0BI,KAA1B,cAAmC,KAAKJ,IAAxC;UACXW,MAAM,CACVP,KADU,EAEVK,QAFU,EAGVF,aAHU;aAKLI;KAXD;AAaRC,IAAAA,SAbQ,uBAaY;UACd,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6BC,QAA7B,CAAsC,KAAKP,IAA3C,UAAyD;aACtD;AACL,qBAAa,KAAKA;AADb;;AAfD,GAJuB;AAwBjCQ,EAAAA,OAxBiC,qBAwBvB;QACJC,WAA0B;;QAE1B,KAAKL,KAAK;iBACD,KAAKA,GAAL,YAAoBM,KAApB,GAA4B,KAAKN,GAAL,CAASO,MAAT,EAA5B,GAAgD,CAAC,KAAKP,GAAN;;;QAEzD,KAAKQ,kBAAkB;eAChBC,KAAKvB;;;UAGVwB,KAAK,IAAIC,GAAJ,CAAQN,QAAR,GAAmBO,QAAQ,UAACZ,GAAD,EAAiB;6CACpCA,eAAQhB;;GAnCI;AAsCjC6B,EAAAA,SAAS;AACPC,IAAAA,WADO,uBACKC,CADL,EACoB;AAAA;;WACpBC,MAAM,SAAS;AAAED,QAAAA,GAAAA;AAAF;4BACfE,kFAAU;AAAEF,QAAAA,GAAAA;AAAF;;AAHV,GAtCwB;AA4CjCG,EAAAA,MA5CiC,oBA4CjB;AAAA;QACRC,YAAY,KAAKC;;eACE,KAAK3B;eAAgB,KAAKS;;iBAAoB,KAAKY;;;;AA9C7C,CAAX;;;;;"}